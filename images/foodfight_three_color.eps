%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Brie Kennedy) ()
%%Title: (AWR20120420092621_back_JG_bk_2.eps)
%%CreationDate: 5/1/2012 8:57 AM
%%Canvassize: 16383
%%BoundingBox: 336 594 916 825
%%HiResBoundingBox: 336.9922 594.8213 915.9922 824.9111
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 648.5 647.5 648.5 647.5
%AI3_TileBox: 342 252 954 1044
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 261 948 2 1654 881 18 0 0 13 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Fade To White)
(Fade To White) 0 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sharp Black Vignette)
(Sharp Black Vignette) 1 3 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
1 0 50 15.873 %_BS
%_1 0 50 15.873 Bs
1 0 50 87.2573 %_BS
%_1 0 50 87.2573 Bs
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 93.6648 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 93.6648 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Spirals)
(Spirals) 41.5079 11.8086 104.5073 74.8066 [
%AI3_Tile
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
28.7832 6.93163 m
28.7832 76.5029 L
106.5883 76.5029 L
106.5883 6.93163 L
28.7832 6.93163 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
125.373 36.8867 m
125.373 29.5976 121.039 27.1367 113.748 27.1367 c
106.4566 27.1367 100.6079 28.2773 100.6079 35.5703 c
100.6079 42.8613 106.5181 48.7695 113.8085 48.7695 c
121.0996 48.7695 125.373 44.1777 125.373 36.8867 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
119.2168 58.6797 m
119.2168 52.1308 113.9921 46.8222 107.5473 46.8222 c
101.1021 46.8222 95.8774 52.1308 95.8774 58.6797 c
95.8774 65.2285 101.1021 70.5351 107.5473 70.5351 c
113.9921 70.5351 119.2168 65.2285 119.2168 58.6797 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
96.4947 21.959 m
96.4947 16.6445 92.1861 12.3359 86.8707 12.3359 c
81.5552 12.3359 77.2466 16.6445 77.2466 21.959 c
77.2466 27.2734 81.5552 31.584 86.8707 31.584 c
92.1861 31.584 96.4947 27.2734 96.4947 21.959 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
86.8707 21.959 m
85.1939 21.3965 87.1586 20.1504 87.771 20.4062 c
89.9136 21.3066 89.1264 24.4394 86.7592 23.9902 c
81.8842 23.0644 82.0279 17.4707 86.7534 17.707 C
93.8687 17.707 93.6899 26.9179 86.8764 26.6054 c
S
80.3277 20.0449 m
80.8199 17.1933 83.3041 15.4199 87.2261 15.4629 c
98.1031 15.5761 96.7749 29.3789 87.3139 29.1093 c
S
71.2613 15.5761 m
70.4614 15.0117 71.6626 13.6601 72.7377 14.5156 c
74.729 16.1015 72.4614 18.625 70.4799 17.5722 c
66.5162 15.4648 69.9722 10.3828 73.646 12.5781 C
78.6489 15.2363 74.479 22.0468 69.6597 19.998 c
62.3667 16.8945 68.9262 4.81053 76.3892 11.6718 c
78.2437 13.3769 78.7886 15.1875 78.3432 17.3535 c
S
69.771 22.7246 m
68.8637 22.4746 67.9252 22.0351 66.9761 21.373 c
58.4742 15.4336 66.9672 1.80468 77.4742 9.43163 c
79.2133 10.6933 80.1987 12.6132 80.6489 14.5156 c
S
80.7573 71.2324 m
79.8764 70.6074 81.2007 69.1172 82.3862 70.0625 c
84.5806 71.8105 82.7563 75.1562 79.896 73.4336 c
75.6578 70.8789 79.3364 65.5058 83.3873 67.9257 C
88.3832 70.58 85.4302 77.5019 80.5639 76.6406 c
S
75.1528 71.1211 m
74.8852 66.4433 80.6567 61.5136 86.4107 66.9257 c
89.3549 69.6953 89.3442 73.3242 87.6469 75.955 c
S
134.5332 34.873 m
125.7715 28.9121 134.4375 13.0078 146.1075 21.707 c
S
77.8462 19.291 m
78.4712 15.5859 81.7104 12.2695 87.2046 12.8222 c
88.4498 12.9472 89.5748 13.1797 90.5854 13.498 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
115.3223 24.5332 m
115.3223 19.2734 111.0585 15.0117 105.8002 15.0117 c
100.5415 15.0117 96.2789 19.2734 96.2789 24.5332 c
96.2789 29.791 100.5415 34.0547 105.8002 34.0547 c
111.0585 34.0547 115.3223 29.791 115.3223 24.5332 c
f
87.6216 29.0781 m
87.6216 23.5996 82.7592 19.1582 76.7612 19.1582 c
70.7632 19.1582 65.9009 23.5996 65.9009 29.0781 c
65.9009 34.5547 70.7632 38.9941 76.7612 38.9941 c
82.7592 38.9941 87.6216 34.5547 87.6216 29.0781 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
104.6889 24.1816 m
103.1617 24.3886 103.2027 21.4199 105.4039 22.2246 c
108.3393 23.2988 106.1441 27.4043 103.1812 26.4043 c
98.9449 24.9746 101.1284 18.291 106.0444 20.1015 C
112.8496 22.7382 109.1133 30.6972 102.3316 28.7285 c
97.8579 27.4297 96.7836 23.3105 98.3472 20.3789 c
S
107.2242 17.8125 m
116.2285 20.8906 113.0274 34.4492 101.8199 30.9394 c
S
132.6601 19.998 m
125.3652 16.8945 131.9277 4.81053 139.3886 11.6718 c
S
132.7715 22.7246 m
131.8633 22.4746 130.9258 22.0351 129.9747 21.373 c
121.4746 15.4336 129.9668 1.80468 140.4747 9.43163 c
S
113.83 18.4629 m
112.4316 17.8105 110.4825 16.4902 109.455 15 c
S
132.6601 82.9961 m
125.3652 79.8945 131.9277 67.8105 139.3886 74.6699 c
S
129.9747 84.3711 m
121.4746 78.4316 129.9668 64.8047 140.4747 72.4297 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
105.3422 38.166 m
105.3422 32.5996 100.6967 28.0859 94.9672 28.0859 c
89.2377 28.0859 84.5922 32.5996 84.5922 38.166 c
84.5922 43.7343 89.2377 48.2461 94.9672 48.2461 c
100.6967 48.2461 105.3422 43.7343 105.3422 38.166 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
95.0835 38.1679 m
95.3569 36.7226 97.5787 36.8789 97.1928 38.7754 c
96.6987 41.1992 92.9126 40.5937 92.9624 38.1211 c
93.0756 32.498 99.8941 34.0039 99.5522 38.7109 C
99.4019 45.209 90.6509 43.7754 90.3267 37.9257 c
89.813 28.6523 104.9117 30.4726 102.1402 41.1894 c
100.1597 48.8418 86.6147 46.459 87.6674 36.2773 c
88.6851 26.4121 107.9643 26.8125 104.9957 41.4882 c
102.8199 52.2578 82.2534 49.5215 84.8413 35.5722 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
96.8413 64.0468 m
93.7592 67.0195 90.0034 66.5156 V
88.4976 64.6367 86.7476 63.5117 y
87.4976 56.1367 78.4976 54.1367 V
80.4976 53.1367 85.6226 49.7617 85.6226 43.0117 C
87.2476 45.1367 93.8726 51.1367 102.4976 45.8867 c
102.7476 48.1367 l
91.8101 52.455 96.8413 64.0468 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
89.9819 51.3183 m
88.8764 50.582 89.9204 49.1953 90.9361 49.5879 c
94.1586 50.83 91.6441 55.2441 88.7828 53.6328 c
84.4732 51.2031 88.1109 45.8183 91.937 47.4511 C
98.1274 50.7187 93.5229 57.9629 88.1049 55.9687 c
82.3862 53.8613 83.1293 47.3242 87.6539 45.1718 c
S
89.5659 66.3965 m
90.6909 66.6211 93.2779 66.2832 94.5162 65.7226 c
S
99.3199 47.5156 m
99.6889 48.3261 99.7671 48.9785 99.9019 49.7949 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
113.3906 18.3418 m
115.1796 16.7343 118.08 12.9062 121.914 12.9062 c
123.543 12.9062 126.5469 13.6484 126.4473 13.9687 c
125.7813 16.1035 128.461 20.6269 129.9433 22.1093 C
127.9063 24.2715 128.2753 29.2734 128.6407 30.7539 C
128.6093 30.7812 124.4473 33.289 121.914 33.289 c
118.5253 33.289 115.8281 32.7988 114.0098 30.3867 C
115.9883 28.0175 115.4296 20.998 113.3906 18.3418 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
120.3418 23.2422 m
119.4864 22.0429 121.9258 20.3222 123.0274 21.914 c
124.666 24.2812 120.7246 26.9043 118.8399 24.7382 c
115.0859 20.4277 122.0156 16.6601 125.1758 20.166 C
128.8613 25.2226 121.6133 31.3652 116.8749 26.5058 c
110.0605 19.5195 123.629 10.9062 128.2305 19.8047 c
132.3203 27.7129 121.3242 35.207 114.9101 28.3906 c
S
113.4785 19.1289 m
115.6835 14.5488 121.4199 11.4961 126.4747 14.5 c
S
113.1582 35.2324 m
112.2774 34.6074 113.4746 33.3027 114.7871 34.0625 c
116.9239 35.2988 114.879 39.2851 111.6152 37.1465 c
108.3531 35.0097 111.7364 29.789 115.7871 32.039 C
121.416 35.4179 116.6816 42.4238 111.3925 40.1054 c
108.1987 38.705 107.2104 36.2519 107.6381 33.8906 c
S
120.5429 33.2578 m
123.2129 39.0293 116.6699 46.4472 108.6582 41.7343 c
105.3393 39.7832 104.7886 36.8945 105.0816 33.9629 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
110.5605 73.4414 m
110.5605 68.0625 106.2006 63.7031 100.8227 63.7031 c
95.4449 63.7031 91.0844 68.0625 91.0844 73.4414 c
91.0844 78.8203 95.4449 83.1797 100.8227 83.1797 c
106.2006 83.1797 110.5605 78.8203 110.5605 73.4414 c
f
110.3438 10.6816 m
110.3438 5.30473 105.9839 0.945314 100.6059 0.945314 c
95.2281 0.945314 91.2954 5.32033 90.8677 10.6816 c
90.3726 16.8867 95.2281 20.4199 100.6059 20.4199 c
105.9839 20.4199 110.3438 16.0605 110.3438 10.6816 c
f
136.8886 54.8828 m
136.998 50.3867 131.7128 44.6797 125.4532 45.2461 c
119.748 45.7617 112.498 49.0117 114.123 54.8828 c
115.6464 60.3906 119.2188 65.2304 125.5059 65.2304 c
131.791 65.2304 136.75 60.5976 136.8886 54.8828 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
87.6079 1.45703 m
92.1216 4.76363 92.4086 9.56643 90.5707 13.5175 C
91.2457 15.205 91.5913 16.5605 93.3912 17.7968 C
103.9643 26.9101 117.6719 11.3222 106.7319 3.03125 c
95.1323 -5.75977 86.3969 10.2382 95.1577 16.1972 c
103.9409 22.1738 111.7774 11.2382 105.5367 5.50193 c
97.3082 -2.0625 89.2886 10.8125 98.1166 14.6816 c
103.4039 17 108.0269 9.43163 102.5112 6.50193 C
98.4604 4.08203 94.6509 9.68753 99.021 12.0078 c
101.2066 13.1699 103.7066 10.3867 101.5112 8.63863 c
S
115.5449 79.1816 m
111.8867 77.623 110.2969 74.9765 110.9082 69.9355 c
S
118.1386 63.7402 m
123.0605 63.6875 130.082 68.2851 126.9785 75.5234 c
S
103.8531 44.2343 m
104.8511 45.373 105.646 46.1015 106.9039 46.7968 c
S
0 J101.9976 46.0117 m
102.8306 46.6074 101.7963 47.6621 102.7476 48.1367 c
S
1 J125.3067 54.582 m
124.4277 53.957 125.752 52.4687 126.9375 53.4121 c
129.1328 55.1601 126.6328 57.9453 124.4453 56.7832 c
120.0761 54.4609 123.8867 48.8574 127.9375 51.2773 C
133.4532 54.205 128.83 61.7734 123.543 59.455 c
114.7149 55.5859 122.7324 42.7129 130.961 50.2773 c
137.1992 56.0136 129.3652 66.9472 120.5839 60.9726 c
111.8223 55.0117 120.4864 39.1093 132.1582 47.8066 c
143.4335 56.209 130.2793 70.7402 118.7031 63.0215 c
113.3027 59.4218 113.416 51.9961 115.8906 48.5078 c
S
107.1147 59.3281 m
106.1889 58.6738 107.5796 57.1093 108.8242 58.1015 c
111.1309 59.9375 108.5034 62.8613 106.2104 61.6406 c
101.6207 59.2011 105.6207 53.3183 109.8769 55.8593 C
115.666 58.9355 110.8124 66.8808 105.2612 64.4472 c
95.9916 60.3828 104.4117 46.8652 113.0527 54.8086 c
117.9649 59.3261 114.5665 66.914 108.67 67.7793 c
S
99.7163 63.4218 m
95.2779 56.1894 103.396 44.1738 114.5332 51.8769 c
S
118.4043 62.7695 m
117.1699 66.2597 114.0156 69.2382 110.166 70.1621 c
S
127.3828 65.0332 m
128.5136 65.9941 130.6407 69.041 130.291 71.3476 c
S
96.2623 48.0254 m
97.2261 49.6504 97.5611 50.8632 97.3941 52.414 c
S
76.2573 28.4824 m
75.3764 27.8574 76.7007 26.3691 77.8862 27.3125 c
80.0806 29.0605 77.5806 31.8457 75.396 30.6836 c
71.0269 28.3613 74.8364 22.7558 78.8873 25.1757 C
84.4019 28.1074 79.7797 35.6738 74.4916 33.3554 c
65.6636 29.4863 73.6832 16.6132 81.9107 24.1757 c
88.1509 29.914 80.3159 40.8476 71.5328 34.873 c
62.7719 28.9121 71.4361 13.0078 83.1079 21.707 c
94.3842 30.1093 81.2309 44.6406 69.6528 36.9218 c
64.2534 33.3222 64.4781 24.6601 67.4028 21.7343 c
S
75.1021 43.3066 m
73.5748 43.5136 73.6166 40.5449 75.8179 41.3496 c
78.7534 42.4238 76.5562 46.5293 73.5953 45.5293 c
69.3579 44.0996 71.5415 37.416 76.4556 39.2265 C
83.2612 41.8632 79.4136 50.2715 72.6323 48.3007 c
66.9009 46.6386 66.8091 40.1113 70.6646 37.4843 c
S
80.3199 38.5078 m
85.5005 43.2226 81.1832 53.6972 72.2319 51.1894 c
S
65.8139 45.9277 m
64.3149 42.4531 65.2543 38.25 68.2944 35.7851 c
S
83.1421 36.9316 m
88.7612 43.0371 84.4009 55.707 73.4781 54.1328 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
124.998 32.6367 m
119.623 41.3867 122.998 46.0117 v
125.748 45.2617 l
122.498 40.1367 129.373 33.5117 v
128.248 30.6367 l
124.998 32.6367 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
125.4532 45.2461 m
124.2149 42.3222 125.791 34.8965 129.8399 33.6601 c
S
122.5274 45.7343 m
120.6152 41.2343 123.3165 33.209 126.8027 31.5215 c
S
123.4239 32.873 m
123.6739 33.541 123.7735 34.0351 123.8535 34.7168 c
S
121.8809 41.914 m
118.5469 46.4629 111.6191 48.3398 104.8647 41.6465 c
S
122.123 45.3867 m
120.0079 47.1328 117.6524 48.4668 114.871 48.6465 c
S
76.6342 62.6933 m
76.8531 61.5351 78.2573 61.2812 78.6362 62.2461 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
69.0386 70.3984 m
67.1957 68.5195 66.3052 66.7402 v
66.2076 66.5449 66.6469 64.2988 y
73.3335 62.5429 73.6255 54.5898 V
76.9428 53.955 85.2876 52.248 86.8492 63.7148 C
85.8248 63.3242 75.9184 57.1269 72.6001 70.1562 c
69.0386 70.3984 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
75.2447 64.207 m
74.7632 63.834 74.2817 63.1465 74.2242 62.4082 c
73.8784 57.9726 80.1928 58.1894 80.9643 61.9043 C
S
73.688 66.1894 m
72.6861 65.8847 71.6284 64.6152 71.5396 63.0156 c
71.0806 54.7343 83.4009 54.7343 84.0063 62.5742 c
S
72.5913 69.2343 m
70.1909 67.6465 69.2505 66.0449 68.8999 63.3691 c
S
73.4556 54.9863 m
78.7066 52.5703 86.9067 55.25 86.813 63.9257 c
S
96.0922 62.6875 m
93.3774 64.1386 90.1303 64.8711 86.8383 63.9043 c
S
95.5102 56.9336 m
93.2211 59.2988 89.0024 60.2558 84.5835 57.1484 c
82.9449 55.9941 81.8951 54.1328 81.8453 51.9882 c
S
95.5053 60.1738 m
93.104 61.7461 89.9976 62.2636 86.7153 61.2285 c
S
90.5777 67.5215 m
90.5777 66.6211 91.1412 66.7343 91.2534 66.3965 c
S
135.6328 48.3007 m
129.9003 46.6386 129.8085 40.1113 133.666 37.4843 c
S
128.8145 45.9277 m
127.3165 42.4531 128.254 38.25 131.295 35.7851 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
130.123 68.5117 m
128.873 64.8867 l
132.748 63.1367 l
132.748 65.6367 130.123 68.5117 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
132.0899 70.9336 m
130.2598 69.5957 129.4316 67.5683 128.92 65.0996 c
S
69.2133 70.4336 m
67.3852 69.0957 66.5572 67.0683 66.0444 64.5996 c
S
117.6582 72.4179 m
117.9629 71.0547 120.0665 71.2715 119.6445 73.0586 c
119.1015 75.3457 115.5234 74.6562 115.6464 72.3086 c
115.9277 66.9726 122.3535 68.6113 121.8848 73.0703 C
121.5449 79.2363 113.166 77.8164 113.1484 72.0429 c
113.1269 63.2187 128.2793 65.4199 124.1622 76.5449 c
S
71.2613 78.5742 m
70.4614 78.0097 71.6626 76.6582 72.7377 77.5156 c
74.729 79.1015 72.4614 81.625 70.4799 80.5722 c
66.5162 78.4648 69.9722 73.3828 73.646 75.5781 C
78.6489 78.2343 74.479 85.0449 69.6597 82.9961 c
62.3667 79.8945 68.9262 67.8086 76.3892 74.6699 c
78.2437 76.375 78.7886 78.1855 78.3432 80.3515 c
S
69.771 85.7246 m
68.8637 85.4746 67.9252 85.0351 66.9761 84.3711 c
58.4742 78.4316 66.9672 64.8047 77.4742 72.4297 c
79.2133 73.6914 80.1987 75.6132 80.6489 77.5136 c
S
117.6582 9.41993 m
117.9629 8.05663 120.0665 8.27153 119.6445 10.0605 c
119.1015 12.3476 115.5234 11.6562 115.6464 9.30863 c
115.9277 3.97461 122.3535 5.61323 121.8848 10.0703 C
121.5449 16.2363 113.166 14.8164 113.1484 9.04493 c
113.1269 0.220704 128.2793 2.42187 124.1622 13.5468 c
S
115.5449 16.1836 m
111.8867 14.625 110.2969 11.9785 110.9082 6.93553 c
S
118.1386 0.742184 m
123.0605 0.689454 130.082 5.28513 126.9785 12.5234 c
S
82.3862 7.06443 m
84.5806 8.81253 82.7563 12.1582 79.896 10.4336 c
75.6578 7.87893 79.3364 2.50781 83.3873 4.92773 C
88.3832 7.58203 85.4302 14.5039 80.5639 13.6425 c
S
75.1528 8.12303 m
74.8852 3.44531 80.6567 -1.48438 86.4107 3.92773 c
89.3549 6.69533 89.3442 10.3261 87.6469 12.955 c
S
64.3832 65.0332 m
65.5132 65.9941 67.6402 69.041 67.2896 71.3476 c
S
96.8413 64.0468 m
91.104 54.2597 103.5112 41.4257 115.5527 49.0722 c
S
132.6523 36.9218 m
127.254 33.3222 127.4785 24.6601 130.4023 21.7343 c
S
72.4849 70.1757 m
72.9799 64.125 79.5347 58.5429 87.6079 64.455 c
92.1216 67.7636 92.4086 72.5644 90.5707 76.5175 C
91.2457 78.205 91.5913 79.5586 93.3912 80.7968 C
103.9643 89.9082 117.6719 74.3203 106.7319 66.0312 c
95.1323 57.2382 86.3969 73.2363 95.1577 79.1972 c
103.9409 85.1718 111.7774 74.2382 105.5367 68.5019 c
97.3082 60.9375 89.2886 73.8105 98.1166 77.6816 c
103.4039 79.998 108.0269 72.4316 102.5112 69.5019 C
98.4604 67.082 94.6509 72.6855 99.021 75.0078 c
101.2066 76.1699 103.7066 73.3867 101.5112 71.6386 c
100.3256 70.6933 99.0014 72.1836 99.8823 72.8066 c
S
109.121 15.7382 m
117.7774 18.8515 118.4335 35.4492 104.0777 33.7715 c
S
128.629 30.2695 m
124.7285 33.7304 118.0117 34.4668 113.6054 30.7422 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
62.3217 36.8867 m
62.3217 29.5976 57.9878 27.1367 50.6968 27.1367 c
43.4053 27.1367 37.5567 28.2773 37.5567 35.5703 c
37.5567 42.8613 43.4668 48.7695 50.7574 48.7695 c
58.0484 48.7695 62.3217 44.1777 62.3217 36.8867 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
56.1656 58.6797 m
56.1656 52.1308 50.9409 46.8222 44.4961 46.8222 c
38.0508 46.8222 32.8261 52.1308 32.8261 58.6797 c
32.8261 65.2285 38.0508 70.5351 44.4961 70.5351 c
50.9409 70.5351 56.1656 65.2285 56.1656 58.6797 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
33.4434 21.959 m
33.4434 16.6445 29.1348 12.3359 23.8194 12.3359 c
18.504 12.3359 14.1954 16.6445 14.1954 21.959 c
14.1954 27.2734 18.504 31.584 23.8194 31.584 c
29.1348 31.584 33.4434 27.2734 33.4434 21.959 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
23.8194 21.959 m
22.1426 21.3965 24.1075 20.1504 24.7198 20.4062 c
26.8624 21.3066 26.0752 24.4394 23.7081 23.9902 c
18.8331 23.0644 18.9766 17.4707 23.7022 17.707 C
30.8174 17.707 30.6386 26.9179 23.8252 26.6054 c
S
17.2764 20.0449 m
17.7686 17.1933 20.253 15.4199 24.1749 15.4629 c
35.0518 15.5761 33.7237 29.3789 24.2627 29.1093 c
S
8.20995 15.5761 m
7.41015 15.0117 8.61135 13.6601 9.68655 14.5156 c
11.6778 16.1015 9.41015 18.625 7.42875 17.5722 c
3.46484 15.4648 6.92085 10.3828 10.5948 12.5781 C
15.5977 15.2363 11.4278 22.0468 6.60835 19.998 c
-0.684569 16.8945 5.87495 4.81053 13.3379 11.6718 c
15.1924 13.3769 15.7374 15.1875 15.292 17.3535 c
S
6.71975 22.7246 m
5.81245 22.4746 4.87402 22.0351 3.9248 21.373 c
-4.57715 15.4336 3.91601 1.80468 14.4229 9.43163 c
16.1622 10.6933 17.1475 12.6132 17.5977 14.5156 c
S
71.4819 34.873 m
62.7203 28.9121 71.3863 13.0078 83.0562 21.707 c
S
14.795 19.291 m
15.42 15.5859 18.6592 12.2695 24.1534 12.8222 c
25.3985 12.9472 26.5235 13.1797 27.5341 13.498 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
52.271 24.5332 m
52.271 19.2734 48.0074 15.0117 42.7491 15.0117 c
37.4902 15.0117 33.2276 19.2734 33.2276 24.5332 c
33.2276 29.791 37.4902 34.0547 42.7491 34.0547 c
48.0074 34.0547 52.271 29.791 52.271 24.5332 c
f
24.5704 29.0781 m
24.5704 23.5996 19.7081 19.1582 13.71 19.1582 c
7.71195 19.1582 2.84961 23.5996 2.84961 29.0781 c
2.84961 34.5547 7.71195 38.9941 13.71 38.9941 c
19.7081 38.9941 24.5704 34.5547 24.5704 29.0781 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
41.6376 24.1816 m
40.1104 24.3886 40.1514 21.4199 42.3526 22.2246 c
45.2881 23.2988 43.0928 27.4043 40.1299 26.4043 c
35.8936 24.9746 38.0772 18.291 42.9931 20.1015 C
49.7984 22.7382 46.062 30.6972 39.2803 28.7285 c
34.8067 27.4297 33.7325 23.3105 35.2959 20.3789 c
S
44.1729 17.8125 m
53.1772 20.8906 49.9761 34.4492 38.7686 30.9394 c
S
69.6089 19.998 m
62.3139 16.8945 68.8764 4.81053 76.3374 11.6718 c
S
69.7203 22.7246 m
68.812 22.4746 67.8745 22.0351 66.9233 21.373 c
58.4234 15.4336 66.9156 1.80468 77.4233 9.43163 c
S
50.7789 18.4629 m
49.3804 17.8105 47.4311 16.4902 46.4039 15 c
S
69.6089 82.9961 m
62.3139 79.8945 68.8764 67.8105 76.3374 74.6699 c
S
66.9233 84.3711 m
58.4234 78.4316 66.9156 64.8047 77.4233 72.4297 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
42.291 38.166 m
42.291 32.5996 37.6455 28.0859 31.916 28.0859 c
26.1866 28.0859 21.541 32.5996 21.541 38.166 c
21.541 43.7343 26.1866 48.2461 31.916 48.2461 c
37.6455 48.2461 42.291 43.7343 42.291 38.166 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
32.0322 38.1679 m
32.3056 36.7226 34.5274 36.8789 34.1417 38.7754 c
33.6474 41.1992 29.8614 40.5937 29.9112 38.1211 c
30.0245 32.498 36.8428 34.0039 36.5009 38.7109 C
36.3506 45.209 27.5997 43.7754 27.2754 37.9257 c
26.7618 28.6523 41.8604 30.4726 39.0889 41.1894 c
37.1083 48.8418 23.5635 46.459 24.6163 36.2773 c
25.6338 26.4121 44.9131 26.8125 41.9444 41.4882 c
39.7686 52.2578 19.2022 49.5215 21.7901 35.5722 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
33.7901 64.0468 m
30.708 67.0195 26.9522 66.5156 V
25.4463 64.6367 23.6963 63.5117 y
24.4463 56.1367 15.4463 54.1367 V
17.4463 53.1367 22.5713 49.7617 22.5713 43.0117 C
24.1963 45.1367 30.8213 51.1367 39.4463 45.8867 c
39.6963 48.1367 l
28.7588 52.455 33.7901 64.0468 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
26.9307 51.3183 m
25.8252 50.582 26.8692 49.1953 27.8848 49.5879 c
31.1075 50.83 28.5928 55.2441 25.7315 53.6328 c
21.4219 51.2031 25.0596 45.8183 28.8857 47.4511 C
35.0761 50.7187 30.4716 57.9629 25.0538 55.9687 c
19.335 53.8613 20.0782 47.3242 24.6026 45.1718 c
S
26.5147 66.3965 m
27.6397 66.6211 30.2266 66.2832 31.4649 65.7226 c
S
36.2686 47.5156 m
36.6376 48.3261 36.7159 48.9785 36.8506 49.7949 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
50.3394 18.3418 m
52.1284 16.7343 55.0289 12.9062 58.8628 12.9062 c
60.4917 12.9062 63.4957 13.6484 63.396 13.9687 c
62.7299 16.1035 65.4097 20.6269 66.8921 22.1093 C
64.8549 24.2715 65.2242 29.2734 65.5893 30.7539 C
65.5582 30.7812 61.396 33.289 58.8628 33.289 c
55.4742 33.289 52.7769 32.7988 50.9585 30.3867 C
52.937 28.0175 52.3784 20.998 50.3394 18.3418 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
57.2906 23.2422 m
56.4351 22.0429 58.8745 20.3222 59.9761 21.914 c
61.6147 24.2812 57.6734 26.9043 55.7886 24.7382 c
52.0346 20.4277 58.9644 16.6601 62.1245 20.166 C
65.8101 25.2226 58.562 31.3652 53.8237 26.5058 c
47.0093 19.5195 60.5777 10.9062 65.1792 19.8047 c
69.2691 27.7129 58.2729 35.207 51.8589 28.3906 c
S
50.4272 19.1289 m
52.6324 14.5488 58.3686 11.4961 63.4233 14.5 c
S
50.1069 35.2324 m
49.2261 34.6074 50.4234 33.3027 51.7359 34.0625 c
53.8726 35.2988 51.8277 39.2851 48.5639 37.1465 c
45.3018 35.0097 48.6851 29.789 52.7359 32.039 C
58.3647 35.4179 53.6303 42.4238 48.3414 40.1054 c
45.1474 38.705 44.1591 36.2519 44.587 33.8906 c
S
57.4916 33.2578 m
60.1617 39.0293 53.6186 46.4472 45.6069 41.7343 c
42.2881 39.7832 41.7374 36.8945 42.0303 33.9629 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.5093 73.4414 m
47.5093 68.0625 43.1495 63.7031 37.7715 63.7031 c
32.3936 63.7031 28.0332 68.0625 28.0332 73.4414 c
28.0332 78.8203 32.3936 83.1797 37.7715 83.1797 c
43.1495 83.1797 47.5093 78.8203 47.5093 73.4414 c
f
47.2924 10.6816 m
47.2924 5.30473 42.9327 0.945314 37.5546 0.945314 c
32.1768 0.945314 28.2442 5.32033 27.8165 10.6816 c
27.3213 16.8867 32.1768 20.4199 37.5546 20.4199 c
42.9327 20.4199 47.2924 16.0605 47.2924 10.6816 c
f
73.8374 54.8828 m
73.9467 50.3867 68.6617 44.6797 62.4019 45.2461 c
56.6968 45.7617 49.4468 49.0117 51.0718 54.8828 c
52.5952 60.3906 56.1674 65.2304 62.4546 65.2304 c
68.7397 65.2304 73.6988 60.5976 73.8374 54.8828 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
24.5567 1.45703 m
29.0704 4.76363 29.3575 9.56643 27.5196 13.5175 C
28.1944 15.205 28.5401 16.5605 30.3399 17.7968 C
40.9131 26.9101 54.6207 11.3222 43.6806 3.03125 c
32.0811 -5.75977 23.3458 10.2382 32.1064 16.1972 c
40.8897 22.1738 48.7261 11.2382 42.4854 5.50193 c
34.2569 -2.0625 26.2374 10.8125 35.0654 14.6816 c
40.3526 17 44.9756 9.43163 39.4599 6.50193 C
35.4091 4.08203 31.5997 9.68753 35.9697 12.0078 c
38.1553 13.1699 40.6553 10.3867 38.4599 8.63863 c
S
52.4936 79.1816 m
48.8354 77.623 47.2457 74.9765 47.8569 69.9355 c
S
55.0875 63.7402 m
60.0092 63.6875 67.0307 68.2851 63.9272 75.5234 c
S
40.8018 44.2343 m
41.7999 45.373 42.5947 46.1015 43.8526 46.7968 c
S
0 J38.9463 46.0117 m
39.7793 46.6074 38.7452 47.6621 39.6963 48.1367 c
S
1 J62.2553 54.582 m
61.3764 53.957 62.7007 52.4687 63.8863 53.4121 c
66.0816 55.1601 63.5816 57.9453 61.3941 56.7832 c
57.0249 54.4609 60.8354 48.8574 64.8863 51.2773 C
70.4019 54.205 65.7789 61.7734 60.4917 59.455 c
51.6636 55.5859 59.6812 42.7129 67.9097 50.2773 c
74.1479 56.0136 66.3139 66.9472 57.5327 60.9726 c
48.771 55.0117 57.4351 39.1093 69.1069 47.8066 c
80.3823 56.209 67.2281 70.7402 55.6519 63.0215 c
50.2514 59.4218 50.3647 51.9961 52.8394 48.5078 c
S
44.0634 59.3281 m
43.1376 58.6738 44.5284 57.1093 45.7729 58.1015 c
48.0796 59.9375 45.4521 62.8613 43.1591 61.6406 c
38.5694 59.2011 42.5694 53.3183 46.8256 55.8593 C
52.6147 58.9355 47.7612 66.8808 42.2099 64.4472 c
32.9404 60.3828 41.3604 46.8652 50.0014 54.8086 c
54.9136 59.3261 51.5152 66.914 45.6186 67.7793 c
S
36.6651 63.4218 m
32.2266 56.1894 40.3447 44.1738 51.4819 51.8769 c
S
55.3531 62.7695 m
54.1186 66.2597 50.9644 69.2382 47.1147 70.1621 c
S
64.3316 65.0332 m
65.4624 65.9941 67.5893 69.041 67.2397 71.3476 c
S
33.2109 48.0254 m
34.1749 49.6504 34.5098 50.8632 34.3428 52.414 c
S
13.2061 28.4824 m
12.3252 27.8574 13.6495 26.3691 14.835 27.3125 c
17.0293 29.0605 14.5293 31.8457 12.3448 30.6836 c
7.97555 28.3613 11.7852 22.7558 15.836 25.1757 C
21.3506 28.1074 16.7286 35.6738 11.4405 33.3554 c
2.6123 29.4863 10.6319 16.6132 18.8594 24.1757 c
25.0997 29.914 17.2647 40.8476 8.48145 34.873 c
-0.279299 28.9121 8.38475 13.0078 20.0567 21.707 c
31.333 30.1093 18.1797 44.6406 6.60155 36.9218 c
1.20215 33.3222 1.42676 24.6601 4.35156 21.7343 c
S
12.0508 43.3066 m
10.5235 43.5136 10.5655 40.5449 12.7667 41.3496 c
15.7022 42.4238 13.5049 46.5293 10.544 45.5293 c
6.30665 44.0996 8.49025 37.416 13.4043 39.2265 C
20.21 41.8632 16.3624 50.2715 9.58105 48.3007 c
3.84961 46.6386 3.75781 40.1113 7.61325 37.4843 c
S
17.2686 38.5078 m
22.4493 43.2226 18.1319 53.6972 9.18065 51.1894 c
S
20.0909 36.9316 m
25.71 43.0371 21.3497 55.707 10.4268 54.1328 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
61.9467 32.6367 m
56.5718 41.3867 59.9467 46.0117 v
62.6967 45.2617 l
59.4467 40.1367 66.3217 33.5117 v
65.1967 30.6367 l
61.9467 32.6367 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
62.4019 45.2461 m
61.1636 42.3222 62.7397 34.8965 66.7886 33.6601 c
S
59.4761 45.7343 m
57.5639 41.2343 60.2652 33.209 63.7514 31.5215 c
S
60.3726 32.873 m
60.6226 33.541 60.7222 34.0351 60.8023 34.7168 c
S
58.8296 41.914 m
55.4957 46.4629 48.5679 48.3398 41.8134 41.6465 c
S
59.0718 45.3867 m
56.9566 47.1328 54.6011 48.4668 51.8199 48.6465 c
S
13.5831 62.6933 m
13.8018 61.5351 15.2061 61.2812 15.585 62.2461 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.98735 70.3984 m
4.14453 68.5195 3.2539 66.7402 v
3.15625 66.5449 3.5957 64.2988 y
10.2823 62.5429 10.5743 54.5898 V
13.8917 53.955 22.2364 52.248 23.7979 63.7148 C
22.7735 63.3242 12.8672 57.1269 9.54885 70.1562 c
5.98735 70.3984 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
12.1934 64.207 m
11.712 63.834 11.2305 63.1465 11.1729 62.4082 c
10.8272 57.9726 17.1417 58.1894 17.9131 61.9043 C
S
10.6368 66.1894 m
9.63475 65.8847 8.57715 64.6152 8.48825 63.0156 c
8.02925 54.7343 20.3497 54.7343 20.9551 62.5742 c
S
9.54005 69.2343 m
7.13965 67.6465 6.19925 66.0449 5.84865 63.3691 c
S
10.4043 54.9863 m
15.6553 52.5703 23.8555 55.25 23.7618 63.9257 c
S
33.041 62.6875 m
30.3261 64.1386 27.0792 64.8711 23.7872 63.9043 c
S
32.459 56.9336 m
30.17 59.2988 25.9512 60.2558 21.5323 57.1484 c
19.8936 55.9941 18.8438 54.1328 18.794 51.9882 c
S
32.4542 60.1738 m
30.0527 61.7461 26.9463 62.2636 23.6641 61.2285 c
S
27.5264 67.5215 m
27.5264 66.6211 28.0899 66.7343 28.2022 66.3965 c
S
72.5816 48.3007 m
66.8492 46.6386 66.7573 40.1113 70.6147 37.4843 c
S
65.7632 45.9277 m
64.2652 42.4531 65.2027 38.25 68.2437 35.7851 c
S
68.4712 70.4687 m
67.0307 69.1455 66.3242 67.2978 65.8687 65.0996 c
S
6.16215 70.4336 m
4.33398 69.0957 3.50586 67.0683 2.99316 64.5996 c
S
54.6069 72.4179 m
54.9117 71.0547 57.0151 71.2715 56.5933 73.0586 c
56.0503 75.3457 52.4721 74.6562 52.5952 72.3086 c
52.8764 66.9726 59.3022 68.6113 58.8335 73.0703 C
58.4936 79.2363 50.1147 77.8164 50.0971 72.0429 c
50.0756 63.2187 65.2281 65.4199 61.1109 76.5449 c
S
54.6069 9.41993 m
54.9117 8.05663 57.0151 8.27153 56.5933 10.0605 c
56.0503 12.3476 52.4721 11.6562 52.5952 9.30863 c
52.8764 3.97461 59.3022 5.61323 58.8335 10.0703 C
58.4936 16.2363 50.1147 14.8164 50.0971 9.04493 c
50.0756 0.220704 65.2281 2.42187 61.1109 13.5468 c
S
52.4936 16.1836 m
48.8354 14.625 47.2457 11.9785 47.8569 6.93553 c
S
55.0875 0.742184 m
60.0092 0.689454 67.0307 5.28513 63.9272 12.5234 c
S
19.335 7.06443 m
21.5293 8.81253 19.7051 12.1582 16.8448 10.4336 c
12.6065 7.87893 16.2852 2.50781 20.336 4.92773 C
25.3321 7.58203 22.379 14.5039 17.5127 13.6425 c
S
12.1016 8.12303 m
11.834 3.44531 17.6055 -1.48438 23.3594 3.92773 c
26.3038 6.69533 26.293 10.3261 24.5958 12.955 c
S
1.33203 65.0332 m
2.46191 65.9941 4.58887 69.041 4.23828 71.3476 c
S
33.7901 64.0468 m
28.0527 54.2597 40.4599 41.4257 52.5014 49.0722 c
S
69.6011 36.9218 m
64.2027 33.3222 64.4272 24.6601 67.3511 21.7343 c
S
9.43355 70.1757 m
9.92875 64.125 16.4834 58.5429 24.5567 64.455 c
29.0704 67.7636 29.3575 72.5644 27.5196 76.5175 C
28.1944 78.205 28.5401 79.5586 30.3399 80.7968 C
40.9131 89.9082 54.6207 74.3203 43.6806 66.0312 c
32.0811 57.2382 23.3458 73.2363 32.1064 79.1972 c
40.8897 85.1718 48.7261 74.2382 42.4854 68.5019 c
34.2569 60.9375 26.2374 73.8105 35.0654 77.6816 c
40.3526 79.998 44.9756 72.4316 39.4599 69.5019 C
35.4091 67.082 31.5997 72.6855 35.9697 75.0078 c
38.1553 76.1699 40.6553 73.3867 38.4599 71.6386 c
37.2745 70.6933 35.9501 72.1836 36.8311 72.8066 c
S
46.0699 15.7382 m
54.7261 18.8515 55.3824 35.4492 41.0264 33.7715 c
S
65.5777 30.2695 m
61.6772 33.7304 54.9604 34.4668 50.5541 30.7422 c
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3670.5 4966.4351 m
-3456.8999 4966.4351 L
-3456.8999 4958.6343 L
-3670.5 4958.6343 L
-3670.5 4966.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3670.5 4962.5352 m
-3660.4856 4965.0269 -3653.6863 4966.375 -3641.7007 4966.4351 c
-3628.7185 4966.5 -3563.6997 4966.4351 y
-3498.6816 4966.5 -3485.6997 4966.4351 v
-3473.7124 4966.375 -3466.9136 4965.0269 -3456.8999 4962.5352 C
-3466.9136 4960.0435 -3473.7124 4958.6953 -3485.6997 4958.6343 c
-3498.6816 4958.5688 -3563.6997 4958.6343 y
-3628.7185 4958.5688 -3641.7007 4958.6343 v
-3653.6863 4958.6953 -3660.4856 4960.0435 -3670.5 4962.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7542.8833 8838.9551 m
-7451.0479 8838.9551 L
-7451.0479 8834.6758 L
-7542.8833 8834.6758 L
-7542.8833 8838.9551 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7542.6631 8836.2754 m
-7543 8836.3418 -7542.4814 8836.5313 -7542.8833 8836.3887 C
-7542.8379 8836.2705 -7542.7725 8836.1816 -7542.6631 8836.2754 C
f
-7452.1675 8836.4414 m
-7453.2529 8837.2041 -7454.6816 8836.4336 -7455.8701 8836.9199 C
-7456.0098 8836.9521 -7455.8354 8836.502 -7456.1484 8836.6025 C
-7457.3008 8837.1953 -7459.1162 8836.8418 -7460.5195 8836.3848 C
-7460.4346 8836.2666 L
-7460.7021 8836.1816 -7461.0283 8836.5723 -7461.3115 8836.5176 C
-7461.3135 8836.4395 -7461.2207 8836.4063 -7461.2861 8836.2979 C
-7461.3574 8836.5352 -7461.7979 8836.4082 -7461.9189 8836.584 C
-7462.0303 8836.4922 -7462.0195 8836.3047 -7462.1641 8836.2002 C
-7462.3262 8836.4697 L
-7462.7769 8837.1094 -7463.4209 8836.4258 -7464.0361 8836.7559 C
-7464.0063 8836.6934 -7463.9453 8836.6445 -7463.9941 8836.584 C
-7464.9814 8836.9727 -7466.2168 8836.8994 -7467.3208 8837.043 C
-7467.2769 8836.9482 -7467.2363 8836.7754 -7467.3008 8836.668 C
-7467.3555 8836.9512 -7467.6963 8837.0225 -7467.9922 8837.0781 C
-7468.1255 8836.7871 -7468.4995 8837.3438 -7468.8467 8837.1826 C
-7468.8169 8837.1191 L
-7469.0732 8837.4238 -7469.1973 8836.9434 -7469.4053 8837.3086 C
-7469.5684 8837.0801 L
-7469.6807 8837.4902 -7469.9395 8836.8672 -7470.1514 8837.0762 C
-7470.1445 8837.1602 L
-7470.3442 8837.2598 -7470.4482 8837.0537 -7470.6338 8837.123 C
-7470.6514 8837.0762 L
-7471.0854 8837.1826 -7471.3379 8836.9551 -7471.3271 8837.2754 C
-7471.4795 8837.0186 -7470.9063 8837.1582 -7471.1455 8836.7842 C
-7472.5732 8837.1152 -7474.0459 8837.0498 -7475.4834 8837.0566 C
-7475.6465 8836.9277 -7475.7505 8836.8887 -7475.7871 8836.7666 C
-7475.9307 8836.832 -7476.3281 8836.8262 -7476.4585 8836.9902 C
-7476.4102 8836.9834 -7476.5513 8836.8262 -7476.6274 8836.8105 C
-7476.8887 8836.6895 -7476.9131 8837.1621 -7477.2002 8837.0186 C
-7477.0859 8836.9336 -7477.0469 8836.8301 -7477.0854 8836.7109 C
-7477.3301 8836.9609 -7477.6577 8836.9209 -7477.9473 8837.002 C
-7477.9023 8836.9482 -7477.8325 8836.916 -7477.8433 8836.8154 C
-7478.1602 8837.0986 -7478.4209 8836.7559 -7478.6982 8836.9346 C
-7478.5947 8836.75 L
-7479.0415 8836.5254 -7478.7266 8837.1367 -7479.1128 8837.0039 C
-7479.02 8836.9453 -7479.0527 8836.873 -7479.0361 8836.7979 C
-7479.3965 8837.1338 -7479.9795 8837.0225 -7480.3389 8837.1367 C
-7480.3174 8837.1113 -7480.3232 8837.0605 Y
-7480.7148 8837.1025 -7481.1245 8836.998 -7481.5552 8837.1445 C
-7481.7119 8837.0625 -7481.5039 8836.6934 -7481.9185 8836.7617 C
-7481.9033 8837.1328 -7482.6221 8836.9141 -7482.3779 8837.334 C
-7482.7319 8837.2734 -7483.2925 8837.1338 -7483.5283 8837.2598 C
-7483.3691 8837.1191 -7483.7007 8836.8066 -7483.4063 8836.7754 C
-7483.6289 8836.5498 L
-7483.5957 8836.3984 -7483.3999 8836.6016 -7483.4707 8836.4102 C
-7483.6182 8836.4258 -7484.0479 8836.5723 -7484.1797 8836.5117 C
-7484.4531 8836.7393 -7484.7041 8837.1641 -7485.1465 8837.2109 C
-7484.9385 8837.0664 -7485.2646 8836.8018 -7485.1235 8836.7383 C
-7485.7407 8837.4482 L
-7485.8877 8837.4658 -7485.7725 8837.1563 -7485.9854 8837.2529 C
-7485.9746 8837.3506 -7486.0674 8837.4121 -7486.1318 8837.4922 C
-7486.1875 8837.4482 -7486.7441 8837.584 -7486.8081 8837.2178 C
-7486.8735 8837.0762 -7486.5684 8837.1426 -7486.7314 8837.0117 C
-7487.0029 8837.0146 -7487.0151 8837.1406 -7487.2871 8837.1465 C
-7487.2925 8837.0977 L
-7487.4717 8837.043 -7487.8213 8837.2529 -7487.6265 8837.4551 C
-7487.5015 8837.4658 -7487.6738 8837.2354 -7487.4888 8837.3418 C
-7487.6152 8837.5537 -7487.9312 8837.6133 -7488.2031 8837.6162 C
-7488.1104 8837.5586 -7488.1216 8837.4609 -7488.0845 8837.3574 C
-7488.4497 8837.6445 -7488.8369 8837.7354 -7489.2451 8837.8555 C
-7489.2515 8838.0293 -7489.0928 8837.5391 -7489.0327 8837.6309 C
-7489.5557 8837.3896 -7490.1128 8837.9727 -7490.5479 8837.6201 C
-7490.4766 8837.5898 -7490.5098 8837.8672 -7490.5146 8837.8184 C
-7490.7666 8837.7969 -7490.7549 8837.5449 -7490.9189 8837.6377 C
-7490.9355 8837.4902 -7491.1255 8837.6855 -7491.2944 8837.7305 C
-7491.3818 8837.8369 -7491.3384 8837.6582 -7491.1914 8837.6426 C
-7491.4268 8837.7666 -7492.3691 8837.9941 -7492.9131 8837.7793 C
-7492.9023 8837.877 -7493.2471 8838.1377 -7493.3721 8838.127 C
-7493.3232 8837.8984 L
-7493.4375 8837.7617 -7493.7422 8837.918 -7493.7632 8837.7227 C
-7494.0303 8838 -7492.7344 8837.4863 -7493.0957 8837.7002 C
-7493.1895 8837.5098 -7493.5991 8838.0645 -7493.5215 8837.7529 C
-7493.7725 8837.7617 -7494.0161 8838.0186 -7494.2559 8837.8047 C
-7494.1865 8837.8418 -7494.0522 8837.4873 -7494.2549 8837.5039 C
-7494.6123 8837.5449 -7494.3564 8837.6133 -7494.6465 8837.6895 C
-7494.8281 8837.7832 L
-7494.8398 8838.0059 -7495.1475 8837.7529 -7495.0146 8838.002 C
-7495.0586 8837.8184 -7495.5337 8838.1152 -7495.4971 8837.7461 C
-7495.4473 8837.4551 L
-7495.6016 8837.4766 -7495.7002 8837.7617 -7495.8213 8837.8896 C
-7495.8418 8837.8633 -7495.8823 8837.8047 -7495.8745 8837.7578 C
-7495.8994 8838.2031 -7496.2432 8837.7207 -7496.4268 8838.0645 C
-7496.7505 8837.9102 -7497.2495 8838.0498 -7497.4023 8837.7734 C
-7497.6514 8837.9082 -7497.8784 8838.0674 -7498.1621 8837.9727 C
-7498.1055 8837.9307 -7498.0283 8837.918 -7498.0122 8837.8223 C
-7498.1904 8837.6914 -7498.2344 8837.8086 -7498.3975 8837.8809 C
-7498.3608 8837.8145 -7498.7539 8837.6201 -7498.9521 8837.4629 C
-7499.1992 8837.5957 -7499.1143 8837.8359 -7499.1392 8837.9824 C
-7499.3652 8837.543 -7499.8379 8838.2656 -7500.1211 8837.8672 C
-7500.0352 8837.8066 -7499.7598 8837.6514 -7499.9658 8837.541 C
-7500.1919 8837.1025 -7500.4219 8837.8643 -7500.7861 8837.6543 C
-7500.6968 8838.0186 L
-7500.8594 8837.793 -7501.2334 8838.2305 -7501.1963 8837.8594 C
-7501.3184 8837.9902 -7501.6265 8837.7383 -7501.5859 8838.0938 C
-7502.1846 8837.793 -7503.0425 8838.2754 -7503.4102 8837.6377 C
-7503.4961 8837.6973 -7503.7104 8837.6367 -7503.6665 8837.8193 C
-7503.5239 8838.0176 -7503.4673 8837.6777 -7503.4141 8837.8125 C
-7503.4912 8837.8232 -7503.5078 8837.9209 -7503.5161 8837.9697 C
-7503.7021 8837.8887 -7503.8486 8837.8633 -7503.6729 8837.5674 C
-7504.0869 8837.3477 -7504.1001 8838.1719 -7504.6274 8838.0322 C
-7504.6035 8837.8857 -7504.6436 8837.8301 -7504.7979 8837.8535 C
-7505.0903 8838.1055 L
-7505.4312 8838.0469 -7505.2842 8837.7705 -7505.2925 8837.5215 C
-7505.4746 8837.5645 -7505.6973 8837.5527 -7505.7803 8837.7383 C
-7506.0015 8837.4258 L
-7505.8398 8837.6514 -7506.1514 8837.5762 -7506.2368 8837.6367 C
-7506.1514 8837.5762 L
-7506.1846 8837.4697 -7506.3955 8837.5352 -7506.5024 8837.5664 C
-7506.4766 8837.7207 -7506.2617 8837.7832 -7506.1445 8837.8281 C
-7506.2373 8837.9375 -7506.3823 8837.9121 -7506.5059 8838.041 C
-7506.4648 8837.7969 -7506.8027 8837.8672 -7506.9473 8837.8418 C
-7507.1133 8837.7891 -7507.1348 8838.0605 -7507.1831 8838.0527 C
-7507.1875 8837.9258 -7507.4541 8838.0313 -7507.3247 8837.8535 C
-7507.2681 8837.8125 -7507.1953 8837.9766 -7507.1016 8837.8643 C
-7507.2109 8837.7705 -7507.1982 8837.5498 -7507.4258 8837.7109 C
-7507.5967 8837.832 -7507.3818 8838.1934 -7507.7061 8838.0391 C
-7507.6211 8837.9785 -7507.6055 8837.8809 -7507.5391 8837.793 C
-7507.8433 8837.666 L
-7507.8564 8837.8887 L
-7507.8975 8837.832 -7507.8691 8837.8125 -7507.8877 8837.7832 C
-7507.9785 8838.0176 -7508.3521 8837.8555 -7508.4209 8838.1191 C
-7508.5742 8838.1426 -7508.7441 8837.9648 -7508.8906 8837.9395 C
-7508.8623 8837.9199 L
-7509.0415 8837.7891 -7509.2793 8837.875 -7509.4297 8838.0254 C
-7509.4219 8837.9766 L
-7509.5195 8837.959 -7509.7505 8837.9941 -7509.8735 8838.125 C
-7510.1201 8837.957 -7509.9561 8837.2842 -7510.2295 8837.5645 C
-7510.48 8837.5723 -7510.6221 8837.9727 -7510.5215 8838.1152 C
-7510.9717 8837.9648 -7511.4834 8838.3281 -7511.9009 8837.9824 C
-7511.9658 8838.0723 -7511.9248 8838.1289 -7512.0586 8838.1816 C
-7512.7197 8838.0938 -7513.4551 8838.4453 -7513.9814 8838.0078 C
-7513.79 8837.9141 -7513.9688 8837.7842 -7513.9727 8837.6582 C
-7514.1309 8837.8574 -7514.1631 8837.4512 -7514.2197 8837.793 C
-7514.2041 8837.9941 -7514.2197 8838.0918 -7514.0337 8838.1729 C
-7514.4282 8838.2813 -7515.0283 8838.2813 -7515.2471 8838.0938 C
-7515.1377 8838.1865 -7515.2227 8838.248 -7515.3086 8838.3086 C
-7515.2803 8837.9873 -7515.5713 8837.9395 -7515.7915 8838.0527 C
-7515.8223 8838.248 L
-7515.9658 8838.0469 L
-7516.0503 8838.1094 -7516.0591 8838.457 -7516.2773 8838.2695 C
-7516.2891 8838.1934 -7516.3018 8838.1162 -7516.3418 8838.0605 C
-7516.5693 8838.2207 -7516.8906 8838.4922 -7517.1377 8838.3262 C
-7517.3398 8838.041 L
-7517.4453 8838.0723 -7517.6235 8838.2441 -7517.4375 8838.3262 C
-7517.8594 8838.1543 -7518.1309 8838.1328 -7518.2646 8837.8857 C
-7518.9912 8838.4873 -7520.0459 8838.5117 -7520.8906 8838.4688 C
-7520.8652 8838.3223 L
-7521.0923 8838.1855 -7520.9834 8838.5781 -7521.1416 8838.4766 C
-7521.0684 8838.3369 -7521.3145 8838.1729 -7521.1362 8838.002 C
-7521.4609 8837.8477 -7521.5547 8838.2559 -7521.7656 8838.3223 C
-7521.7979 8838.5146 -7521.5957 8838.1992 -7521.6367 8838.4434 C
-7521.6729 8838.5117 -7522.0859 8838.293 -7522.1362 8838.584 C
-7522.2178 8838.4697 -7522.1543 8838.2559 -7522.1104 8838.1377 C
-7522.3086 8838.2793 L
-7522.5513 8837.9395 -7521.7559 8837.6719 -7522.0107 8837.2529 C
-7522.1934 8837.2979 L
-7522.3682 8836.9941 -7521.71 8836.9551 -7522.1689 8836.8506 C
-7522.3682 8836.9941 -7522.5381 8837.416 -7522.3608 8837.5449 C
-7522.7754 8837.625 -7522.5527 8838.2383 -7522.9985 8838.2139 C
-7523.1201 8838.043 -7522.6416 8838.1729 -7522.7275 8837.9336 C
-7522.9375 8837.6992 -7523.1484 8838.0645 -7523.3354 8837.9824 C
-7523.1279 8838.0918 -7523.3032 8838.3857 -7523.4375 8838.4395 C
-7523.6641 8838.3018 -7523.29 8838.1641 -7523.6113 8838.1338 C
-7523.6641 8838.3018 -7523.9595 8838.4277 -7523.7041 8838.5449 C
-7523.8203 8838.9258 -7524.0381 8838.4395 -7524.2129 8838.7344 C
-7524.3174 8838.4658 -7523.8823 8838.1152 -7524.2354 8837.9814 C
-7524.1792 8838.2393 -7524.6704 8838.332 -7524.4839 8838.7139 C
-7524.6221 8838.6406 -7524.6367 8838.4375 -7524.5361 8838.2793 C
-7524.7334 8838.1201 -7525.0151 8838.75 -7525.0801 8838.2383 C
-7525.1479 8838.502 L
-7525.21 8838.416 -7525.2983 8838.3506 -7525.3994 8838.209 C
-7525.5732 8838.2041 -7525.96 8838.5664 -7525.9443 8838.168 C
-7526 8838.209 -7526.3975 8838.1914 -7526.2441 8838.4658 C
-7525.9971 8838.6338 -7525.96 8838.2656 -7525.8223 8838.6377 C
-7525.9971 8838.334 -7526.1787 8838.6777 -7526.3213 8838.7793 C
-7526.3447 8838.625 L
-7526.4297 8838.6855 -7526.6255 8838.6514 -7526.6787 8838.8184 C
-7526.6133 8838.7305 -7526.6475 8838.625 -7526.7148 8838.5879 C
-7526.8042 8838.8223 L
-7527.1494 8838.9395 -7526.8857 8838.4102 -7527.2217 8838.4785 C
-7526.9663 8838.2969 L
-7527.0225 8838.3359 -7527.1367 8838.1162 -7527.2979 8838.1895 C
-7527.3604 8838.4033 -7527.4775 8838.6602 -7527.5313 8838.8262 C
-7527.7207 8838.9199 -7527.6162 8838.585 -7527.8027 8838.8047 C
-7527.5586 8838.5469 L
-7527.5215 8838.4766 -7527.7231 8838.1934 -7527.9761 8838.1992 C
-7528.1377 8838.2734 -7528.3887 8838.582 -7528.1338 8838.6992 C
-7528.2607 8838.7031 -7528.4385 8838.5723 -7528.3379 8838.416 C
-7528.6255 8838.4902 -7528.2998 8838.6465 -7528.5479 8838.7793 C
-7528.6494 8838.6367 -7528.9658 8838.4336 -7529.1563 8838.2266 C
-7528.8975 8837.8682 L
-7529.0693 8837.8643 L
-7528.8467 8837.5781 -7529.1826 8837.6465 -7529.0566 8837.3438 C
-7529.1743 8837.2969 -7529.3169 8837.3994 -7529.4307 8837.4785 C
-7529.0864 8837.9629 -7529.8159 8838.1406 -7529.7158 8838.582 C
-7530.1875 8838.7031 -7530.0107 8837.5078 -7530.5024 8838.1992 C
-7530.4219 8838.3145 -7530.6533 8838.6504 -7530.3564 8838.5225 C
-7530.6494 8838.4746 -7530.5557 8838.9658 -7530.9014 8838.7832 C
-7530.6455 8838.6016 -7531.1763 8838.3359 -7530.8066 8838.0723 C
-7530.8311 8838.2178 -7530.6001 8838.1826 -7530.5435 8838.1426 C
-7530.6641 8837.9727 -7530.5186 8837.6973 -7530.8184 8837.6973 C
-7531.0015 8837.7393 -7531.2524 8837.748 -7531.2158 8837.9785 C
-7531.2085 8838.2314 -7530.9365 8837.9512 -7531.0537 8838.207 C
-7531.4185 8838.2949 -7531.4795 8837.9102 -7531.6304 8838.3594 C
-7531.3999 8838.3232 -7531.3423 8838.584 -7531.3467 8838.7578 C
-7531.6143 8838.8633 L
-7531.5625 8838.6953 L
-7531.9922 8838.5742 -7531.6895 8839 -7532.1055 8838.9551 C
-7532.3008 8838.623 L
-7532.2017 8838.3369 -7531.6953 8838.75 -7531.7695 8838.2842 C
-7532.04 8838.2656 -7532.1299 8838.502 -7532.3848 8838.3818 C
-7532.3281 8838.3418 -7532.2505 8838.3301 -7532.1943 8838.2891 C
-7532.2915 8838.2734 -7532.3877 8837.6563 -7532.7734 8838.0176 C
-7532.9727 8838.1582 -7532.8262 8838.1826 -7532.8311 8838.3574 C
-7533.2656 8838.4102 -7533.3955 8838.5879 -7533.6753 8838.6152 C
-7533.6177 8838.2754 -7534.1699 8838.582 -7533.8608 8838.2344 C
-7533.7188 8838.4336 -7533.0903 8838.4141 -7532.9365 8838.0898 C
-7533.0947 8837.6865 -7532.5952 8838.1465 -7532.5024 8837.7383 C
-7532.8506 8837.7285 -7532.8335 8837.332 -7532.8896 8837.0723 C
-7532.9863 8837.0537 -7533.0801 8837.1641 -7533.1377 8837.2041 C
-7533.1787 8837.4482 -7533.0522 8837.4453 -7533.0449 8837.6973 C
-7533.4336 8837.6309 -7533.8081 8837.7666 -7534.0225 8838.0059 C
-7534.1523 8837.8848 -7534.1113 8837.6406 -7533.9575 8837.6162 C
-7534.4199 8837.6895 -7534.9141 8837.6563 -7535.3535 8837.582 C
-7535.0693 8837.9814 -7535.8433 8837.6758 -7535.6494 8838.0078 C
-7535.4141 8838.0977 -7535.2119 8838.3818 -7535.3418 8838.5605 C
-7535.4888 8838.5352 -7535.3369 8838.3857 -7535.3984 8838.3008 C
-7535.5859 8838.5186 -7535.6895 8837.9512 -7535.8735 8838.2949 C
-7535.4512 8838.166 -7535.7915 8837.8086 -7535.7139 8837.4961 C
-7536.0186 8837.6719 -7535.7007 8837.2734 -7536.0024 8837.2734 C
-7536.3057 8837.4473 -7536.6787 8837.584 -7537.0161 8837.6514 C
-7537.4399 8837.3555 -7538.0898 8837.6465 -7538.4683 8837.6582 C
-7538.6665 8837.5 -7538.5322 8837.1465 -7538.7471 8837.085 C
-7538.9995 8837.0918 -7538.5601 8837.4658 -7538.9336 8837.3047 C
-7538.8975 8837.2344 L
-7539.0107 8837.3154 -7539.5825 8836.9941 -7539.6929 8837.502 C
-7539.5776 8837.1191 L
-7539.6475 8837.084 -7539.7119 8837.1719 -7539.7695 8837.2129 C
-7539.7725 8837.0879 -7539.8535 8836.9746 -7539.7402 8836.8926 C
-7539.9707 8836.6289 -7540.2241 8836.9346 -7540.4746 8836.9453 C
-7540.3135 8837.1719 L
-7540.7422 8837.3496 -7541.0293 8837.125 -7541.4443 8837.2041 C
-7541.4316 8836.9824 L
-7541.6787 8837.1152 L
-7541.6182 8836.8994 -7541.8447 8836.7617 -7541.9751 8836.9414 C
-7541.3335 8836.3984 L
-7541.1553 8836.5293 -7541.5283 8836.666 -7541.4165 8836.8848 C
-7541.3213 8837.0762 -7540.9375 8837.0146 -7540.8755 8836.8018 C
-7541.0225 8836.7773 -7541.0293 8836.8262 -7541.1436 8836.9063 C
-7541.1919 8836.5977 -7540.9688 8836.6094 -7540.8584 8836.4033 C
-7540.9355 8836.416 -7541.0449 8836.3223 -7541.0615 8836.4199 C
-7540.9102 8836.2695 -7540.7578 8836.2461 -7540.5059 8836.2383 C
-7540.6763 8836.3594 -7540.4131 8836.4297 -7540.4775 8836.5176 C
-7540.4575 8836.2461 -7540.2168 8836.1621 -7539.9053 8836.2383 C
-7539.6831 8836.5527 -7539.3208 8836.0361 -7538.96 8836.123 C
-7539.1064 8836.3984 -7539.2935 8836.6191 -7539.5127 8836.7305 C
-7539.2861 8836.8682 -7539.2607 8836.7227 -7539.0337 8836.8613 C
-7538.9238 8836.6563 -7538.8457 8836.3418 -7538.5503 8836.2168 C
-7538.5342 8836.4199 L
-7538.2666 8836.3154 -7538.2666 8836.0146 -7537.9258 8836.0723 C
-7537.3418 8836.1719 -7536.7407 8836.1719 -7536.2949 8836.1973 C
-7536.2783 8836.3994 L
-7536.0303 8835.9658 -7535.4521 8836.2393 -7535.1182 8836.0469 C
-7534.5503 8836.2422 -7533.8848 8835.8535 -7533.5938 8836.2031 C
-7532.5913 8836.0469 -7531.7148 8835.8945 -7530.6768 8835.9688 C
-7530.8516 8836.2637 L
-7530.6655 8836.0469 -7530.7305 8836.4336 -7530.5479 8836.3896 C
-7530.7578 8836.1543 -7530.2949 8836.084 -7530.1665 8835.9033 C
-7529.7041 8836.1328 -7529.1104 8835.8818 -7528.7007 8835.6758 C
-7528.6846 8835.8789 L
-7528.2705 8835.498 -7527.7759 8835.832 -7527.2598 8835.8945 C
-7527.2007 8835.9785 -7527.1074 8836.1689 -7526.9536 8836.1465 C
-7526.6738 8835.8184 -7526.5273 8835.8418 -7526.1167 8835.6367 C
-7525.8169 8835.6367 -7525.3301 8835.7178 -7525.0254 8835.8457 C
-7523.8975 8835.3848 -7522.7456 8835.6797 -7521.5732 8835.4023 C
-7521.4888 8835.6406 L
-7520.3521 8835.1309 -7518.9541 8835.5938 -7517.9839 8835.332 C
-7518.0776 8835.7393 L
-7517.7734 8835.8643 -7517.3843 8835.6328 -7517.4619 8835.3438 C
-7517.1567 8835.4688 -7516.7007 8835.1465 -7516.5068 8835.4814 C
-7516.1953 8835.5566 -7516.1255 8835.293 -7515.8662 8835.2383 C
-7515.2422 8835.3926 -7515.0107 8835.3574 -7514.4224 8835.2813 C
-7514.5684 8835.2559 L
-7514.6328 8835.3457 -7514.6387 8835.5186 -7514.4922 8835.5449 C
-7514.2725 8835.4307 -7513.6846 8835.6543 -7513.9033 8835.168 C
-7513.2754 8835.4482 -7512.4385 8834.9395 -7511.8271 8835.3184 C
-7511.8789 8835.1855 -7511.7246 8835.1602 -7511.6602 8835.0703 C
-7511.1089 8835.0645 -7510.5293 8835.3359 -7510.0898 8835.1094 C
-7510.0024 8835.1758 -7510.2295 8835.3359 -7510.0049 8835.3496 C
-7509.8721 8835.2979 -7510.0024 8835.1758 -7509.8384 8835.1016 C
-7508.9453 8834.8535 -7508.0303 8835.3574 -7507.2188 8835.293 C
-7505.7754 8835.0361 -7504.2695 8835.166 -7502.8867 8835.123 C
-7502.9023 8835.2207 L
-7502.4395 8834.8477 -7501.8159 8835.6025 -7501.4463 8835.041 C
-7501.3369 8835.1338 -7501.0283 8835.085 -7501.1094 8835.2734 C
-7500.7407 8835.0098 -7500.0771 8835.5215 -7499.5439 8835.1865 C
-7499.5928 8835.1777 -7499.6211 8835.1973 -7499.6777 8835.2393 C
-7499.1392 8835.4551 -7498.6641 8835.1602 -7498.0957 8835.3555 C
-7498.1533 8835.3975 -7498.2583 8835.4277 -7498.2754 8835.5254 C
-7498.0557 8835.7129 -7497.7549 8835.1133 -7497.6348 8835.584 C
-7497.5088 8835.5801 -7497.5449 8835.3477 -7497.6221 8835.3613 C
-7496.3779 8835.5449 -7495.0498 8835.2441 -7493.7549 8835.1367 C
-7492.8271 8835.418 -7493.6982 8835.9297 -7492.9663 8835.5781 C
-7492.9063 8835.6689 -7492.9229 8835.3984 -7492.9131 8835.4961 C
-7492.6299 8835.3643 -7492.4717 8836.0215 -7492.2754 8835.7754 C
-7492.3564 8835.4863 -7492.1445 8835.6133 -7492.1387 8835.4375 C
-7491.5713 8835.625 -7491.4575 8835.8857 -7491.0098 8835.666 C
-7491.0435 8835.8184 L
-7490.5186 8835.3887 -7489.9102 8835.6191 -7489.4673 8835.123 C
-7486.5728 8835.0322 -7483.7983 8834.7578 -7480.9761 8834.7002 C
-7478.1865 8834.7949 -7475.4551 8834.5723 -7472.6221 8834.8359 C
-7471.9585 8835.2354 -7471.9087 8835.2246 -7471.1797 8835.0625 C
-7471.2095 8835.127 -7471.2549 8835.1426 -7471.2061 8835.2031 C
-7471.1699 8834.875 -7470.6929 8835.1719 -7470.6235 8834.8594 C
-7469.5762 8834.9199 -7468.6113 8834.8301 -7467.5337 8834.8281 C
-7467.7041 8834.8633 -7467.7896 8835.1309 -7467.5869 8835.1094 C
-7467.3755 8834.8994 L
-7467.3408 8834.9922 L
-7467.2021 8834.9434 -7467.0513 8834.7813 -7467.1943 8834.6758 C
-7464.4873 8834.3926 -7461.8242 8835.0498 -7459.1729 8834.9697 C
-7458.5439 8835.1064 -7457.6475 8834.9814 -7456.9629 8834.9141 C
-7454.9355 8835.3506 -7453.1084 8835.7041 -7451.0479 8835.3984 C
-7451.3174 8836.2461 -7452.1675 8836.4414 V
f
-7542.2578 8836.2422 m
-7542.1855 8836.4063 -7541.9497 8836.4961 -7542.1377 8836.7139 C
-7542.1611 8836.5605 -7542.2822 8836.3887 -7542.2578 8836.2422 C
f
-7535.9619 8837.9297 m
-7535.9536 8837.8809 -7535.8721 8837.9961 -7535.8521 8838.0225 C
-7535.9297 8838.0352 -7536.0024 8838.1729 -7536.0645 8838.0879 C
-7535.9854 8838.0762 -7535.9976 8837.998 -7535.9619 8837.9297 C
f
-7534.3521 8838.0273 m
-7534.3765 8838.1729 -7534.7207 8838.2891 -7534.9238 8838.3066 C
-7534.3521 8838.0273 L
f
-7532.8521 8838.6289 m
-7532.7227 8838.752 -7532.7583 8838.8193 -7532.9326 8838.8154 C
-7532.9453 8838.7383 -7532.8877 8838.6992 -7532.8521 8838.6289 C
f
-7532.7456 8838.2969 m
-7532.6211 8838.293 -7532.5591 8838.3789 -7532.4985 8838.4629 C
-7532.5029 8838.3369 -7532.7871 8838.541 -7532.7456 8838.2969 C
f
-7529.4893 8838.7207 m
-7529.4111 8838.709 -7529.2417 8838.5879 -7529.1689 8838.75 C
-7529.2505 8838.6367 -7529.5498 8838.9346 -7529.4893 8838.7207 C
f
-7527.9761 8838.5 m
-7527.9272 8838.5098 -7527.9072 8838.5361 -7527.8506 8838.4961 C
-7527.7607 8838.5625 -7527.8555 8838.6689 -7527.9312 8838.6826 C
-7527.9761 8838.5 L
f
-7500.4287 8837.9141 m
-7500.5923 8837.9863 L
-7500.5684 8837.8418 L
-7500.4287 8837.9141 L
f
-7488.3574 8837.9063 m
-7488.1943 8837.8145 -7488.2441 8838.043 -7488.2168 8838.0645 C
-7488.3643 8838.0801 -7488.1621 8837.8848 -7488.3574 8837.9063 C
f
-7481.8486 8837.1777 m
-7481.8984 8837.1816 L
-7481.8818 8836.8818 L
-7481.8486 8837.1777 L
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 5 pt. Angled/ Adobe ArtOnPath ) -
(Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Tapered Stro) -
(ke/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Angled)
(1 5 5 70 70 50 50 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -
(1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.000031 0.993988 1 0.000031 1 0 0 Xa
(RGB Red)
Pc
0.061982 0.000031 0.965148 0.000031 1 1 0 Xa
(RGB Yellow)
Pc
0.627649 0.000031 1 0.000031 0 1 0 Xa
(RGB Green)
Pc
0.517937 0.000031 0.125399 0.000031 0 1 1 Xa
(RGB Cyan)
Pc
0.883665 0.769161 0.000031 0.000031 0 0 1 Xa
(RGB Blue)
Pc
0.269902 0.816403 0.000031 0.000031 1 0 1 Xa
(RGB Magenta)
Pc
0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0.000031 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000366 0.500664 0.985656 0.000031 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0.000214 0.348486 0.871305 0.000031 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045136 0.000031 0.931884 0.000031 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188968 0.000397 0.98233 0.000031 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501091 0.001373 0.990387 0.000031 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.761959 0.000031 0.749783 0.000031 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.6972 0.14847 0.000031 0.000031 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.875364 0.526451 0.000031 0.000031 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262547 0.245243 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0.000031 0.970001 0.204959 0.000031 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.22855 0.274266 0.39942 0.000031 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362341 0.574029 0.840574 0.226169 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
2 (Fade To White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To White)
Pc
Bb
0 0 0 0 Bh
2 (Sharp Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sharp Black Vignette)
Pc
(Spirals) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Spirals)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.193668 0.150057 0.155337 0.000031 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084596 0.061311 0.065766 0.000031 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
(R=214 G=149 B=68)
Pc
0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
(R=71 G=152 B=237)
Pc
0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
(R=42 G=81 B=224)
Pc
0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
(R=180 G=58 B=228)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
0 O
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
0 R
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 XA
0 J 0 j 3 w 4 M []0 d0 XR
914.1943 611.2422 m
913.7305 613.7715 911.8438 617.7627 911.3047 618.8721 C
911.7344 618.9814 912.4629 619.2568 912.9697 619.9541 c
913.1445 620.2041 913.252 620.5488 913.332 620.9844 c
913.4092 621.417 913.4492 621.9395 913.4492 622.5186 c
913.4482 624.1582 913.127 626.2637 912.3418 628.0742 c
911.0938 630.9414 909.2949 632.6172 909.0469 632.8408 C
907.7568 636.7568 904.5127 640.4795 901.585 643.2471 c
898.6377 646.0303 896.0068 647.8379 896 647.8433 C
895.9492 647.8706 L
895.9443 647.8726 L
895.8506 647.9185 894.7197 648.4517 894.0039 650.5933 c
893.583 651.8408 892.1094 654.1509 890.7285 656.1938 c
889.7881 657.5815 888.9063 658.8159 888.4307 659.4717 C
888.6787 659.4517 889.0039 659.436 889.4297 659.436 c
890.0205 659.4365 890.7998 659.4658 891.8115 659.5537 c
891.9209 659.5635 892.0137 659.6406 892.042 659.7471 c
893.8877 666.6318 894.6641 673.354 894.6641 679.752 c
894.6641 691.8281 891.8994 702.7495 888.3389 711.4512 c
884.7754 720.1543 880.4238 726.6333 877.21 729.8491 c
869.6348 737.4243 860.3789 743.8218 859.2852 744.5693 C
859.2744 744.8438 859.2314 745.4673 859 745.9434 c
858.8428 746.2529 858.3896 746.8706 857.96 747.4473 c
857.6445 747.8677 857.3496 748.2485 857.2158 748.4219 C
857.2695 748.6519 857.3848 749.1621 857.4521 749.6328 C
857.4609 749.7612 L
857.4541 750.1865 857.2275 750.6577 856.9482 751.0977 c
856.6602 751.5337 856.335 751.9136 855.999 752.0889 c
855.7969 752.189 855.5742 752.2129 855.3525 752.2144 c
854.9355 752.2129 854.5166 752.1167 854.2998 752.0596 C
853.502 752.8574 L
854.2217 754.0801 L
854.9971 754.3125 L
855.1729 754.4907 L
856.334 758.5537 L
857.4199 758.4097 L
857.6445 758.4883 L
857.7129 758.7163 L
856.5283 765.2275 L
857.0234 765.4131 L
857.1523 765.4609 857.2217 765.6021 857.1816 765.7334 C
856.4688 768.1113 L
857.0137 768.2925 L
857.1797 768.458 L
857.1475 768.6895 L
856.1807 770.1016 L
856.96 770.4912 L
857.1016 770.6836 L
857.0283 770.9111 L
853.7646 774.1748 L
854.3936 774.5781 855.3613 774.7271 856.2305 774.7231 c
856.7188 774.7231 857.1699 774.6851 857.4951 774.6479 c
857.8213 774.6104 858.0186 774.5737 Y
858.123 774.5547 858.2295 774.6006 858.2861 774.6899 C
858.2813 774.9814 L
856.832 777.043 854.1982 777.3491 852.6543 777.3525 c
852.2627 777.3525 851.9434 777.3325 851.7207 777.3125 C
851.9502 779.6108 L
851.8838 779.813 L
851.6895 779.8989 L
851.498 779.8989 851.2637 779.9097 v
851.0898 779.917 850.9043 779.9351 850.7578 779.9575 C
850.7715 780.0386 850.7979 780.1504 850.8486 780.2881 c
850.9512 780.5801 851.1113 780.9365 851.2451 781.2168 c
851.3779 781.4966 851.4844 781.6992 851.4844 781.7002 C
851.4707 781.9658 L
851.4189 782.0449 851.3281 782.0898 851.2324 782.083 C
848.3613 781.8672 L
848.71 782.2524 849.2734 782.8179 850.0088 783.3569 c
851.4102 784.3921 851.7607 786.02 851.7695 786.0449 C
851.791 786.1426 851.7559 786.2446 851.6768 786.3071 C
851.4004 786.3384 L
849.9141 785.625 L
850.1797 786.3579 850.2021 787.1357 850.207 787.4922 c
850.207 787.6123 850.2031 787.6841 850.2031 787.6875 C
850.1963 787.8135 850.1025 787.9165 849.9785 787.9341 c
849.8535 787.9512 849.7344 787.8789 849.6934 787.7598 c
849.2422 786.458 848.4756 785.6831 847.5771 785.2104 c
846.6787 784.7402 845.6396 784.585 844.6787 784.5854 c
843.8516 784.5854 843.0869 784.6997 842.5313 784.814 c
842.3379 784.854 842.1807 784.8916 842.0439 784.9268 C
842.5068 785.478 842.6279 786.1387 842.627 786.6113 c
842.627 787.0073 842.5596 787.2847 842.5566 787.2988 c
842.5303 787.4058 842.4395 787.4844 842.3301 787.4971 c
842.2217 787.5093 842.1162 787.4517 842.0674 787.3535 c
841.8936 787.0088 841.667 786.8105 841.4121 786.6846 c
841.1563 786.5596 840.8662 786.5137 840.5889 786.5146 c
840.3115 786.5137 840.0498 786.5596 839.8594 786.6055 c
839.7656 786.6279 839.6885 786.6514 839.6367 786.668 C
839.6035 786.6792 L
832.9756 792.3452 832.2783 800.77 832.2803 804.0034 c
832.2803 804.3882 832.291 804.6895 832.3008 804.9126 C
832.9512 804.563 833.5703 804.3892 834.1514 804.3892 c
835.0332 804.3882 835.8066 804.7681 836.4424 805.3535 c
838.3447 807.1191 839.2285 810.7061 839.2383 812.749 c
839.2266 814.4619 837.9033 816.2769 836.6152 817.708 c
835.4756 818.9644 834.3447 819.9048 834.0859 820.1152 C
833.957 820.4204 833.3809 821.3652 831.0693 822.1694 c
829.4746 822.7261 826.1602 823.4097 823.084 823.4111 c
820.9766 823.4072 818.9814 823.0986 817.7168 822.1294 c
815.8545 820.686 812.958 820.0171 810.2852 820.0195 c
808.9785 820.0195 807.7256 820.1777 806.6777 820.4707 c
805.749 820.731 804.7227 820.8672 803.6523 820.8672 c
800.8428 820.8667 797.7246 819.9316 795.2949 817.7939 c
793.3281 816.0693 792.8984 814.1597 792.9023 812.6855 c
792.9033 811.6299 793.1133 810.7627 793.1094 810.3896 C
793.1035 810.2856 793.0752 810.2236 792.9092 810.1177 c
792.665 809.9683 792.1465 809.8545 791.4648 809.7993 c
790.7822 809.7417 789.9297 809.7295 788.9756 809.7295 c
788.3398 809.7295 787.6582 809.7349 786.9502 809.7349 c
785.1611 809.7349 783.1455 809.5371 781.3633 809.0708 c
779.582 808.6016 778.0264 807.876 777.1738 806.7466 c
776.3447 805.6348 775.8594 803.9873 775.1904 802.3301 c
774.5273 800.6797 773.6953 799.0337 772.2607 797.9028 C
769.1006 796.6929 767.1572 795.3911 765.9961 794.1255 c
764.8281 792.8555 764.4609 791.6138 764.4629 790.5967 c
764.4648 789.3433 764.9961 788.4565 765.1826 788.1802 C
765.082 787.6758 765.0303 787.1982 765.0303 786.7529 c
765.0273 784.5039 766.2148 783.0225 767.377 782.1377 c
768.335 781.4058 769.2725 781.0586 769.5889 780.9536 C
770.2109 779.123 772.6318 777.5347 775.9619 777.5278 c
777.2246 777.5278 778.6182 777.7593 780.0947 778.2988 c
782.8516 779.3057 784.2861 781.1396 785.0088 782.7104 c
785.498 783.7705 785.6709 784.7007 785.7334 785.208 C
789.6484 783.3062 792.1475 779.8828 793.6611 776.8711 c
794.4395 775.3232 794.959 773.8901 795.2842 772.8467 c
795.4453 772.3247 795.5596 771.8999 795.6318 771.6064 c
795.7031 771.314 795.7354 771.1563 Y
795.8916 770.9644 L
796.1377 770.9883 L
796.4473 771.1938 L
796.4434 771.1714 796.4404 771.1514 796.4375 771.1284 c
796.3896 770.7925 796.3213 770.3955 796.2676 770.2407 C
796.2393 770.1309 796.043 769.8813 795.7715 769.4639 c
795.501 769.041 795.1621 768.4297 794.8281 767.4941 c
794.7109 767.167 794.6621 766.833 794.6621 766.5073 c
794.6719 765.1758 795.4346 763.9824 795.7637 763.5205 C
794.1992 762.3105 794.0137 760.6758 794.0166 760.0483 c
794.0166 760.0444 794.0166 760.043 794.0166 760.0396 C
793.3125 759.9619 791.2656 759.7124 790.1289 759.2622 c
789.4531 758.9961 788.9111 758.6504 788.5391 757.9663 c
788.165 757.2861 787.9375 756.3105 787.7383 754.7271 c
787.7188 754.5713 787.71 754.4141 787.71 754.2559 c
787.7148 752.6133 788.6855 750.8867 789.7617 749.4844 c
790.3008 748.7847 790.8701 748.168 791.3721 747.6914 c
791.8779 747.2129 792.2988 746.8804 792.5996 746.7275 c
792.8428 746.6069 793.1191 746.5664 793.4072 746.5659 c
794.6465 746.5732 796.2227 747.3169 796.3457 747.3706 C
796.4219 747.3921 L
796.6045 747.4399 797.0449 747.5371 797.5381 747.5371 c
798.1045 747.5371 798.7119 747.4004 799.1309 746.98 C
799.082 746.4116 799.0518 745.8589 799.0518 745.3325 c
799.0459 739.813 801.6895 736.582 804.3193 734.7803 c
806.5332 733.2578 808.7285 732.7227 809.3799 732.5889 C
809.4307 731.2246 809.9541 730.2432 810.8008 729.6528 c
811.6924 729.0283 812.8799 728.8086 814.165 728.8076 c
817.7471 728.812 822.1885 730.5405 823.332 731.0088 C
823.4688 730.4619 L
819.0732 728.3271 L
818.9482 728.1978 L
818.4238 727.0181 L
818.4111 726.8413 L
818.4121 726.8398 818.6416 726.019 818.9219 725.1294 c
819.0615 724.6846 819.2148 724.2231 819.3574 723.835 c
819.5049 723.4434 819.627 723.1426 819.7646 722.9541 C
819.8145 722.8965 819.8721 722.6958 819.8691 722.4243 c
819.873 721.7065 819.541 720.5469 819.0967 719.8428 c
818.9883 719.6611 818.707 719.4688 818.3311 719.3213 c
817.7695 719.0952 817.0234 718.9575 816.4258 718.8813 c
816.126 718.8428 815.8623 718.8188 815.6738 718.8052 c
815.625 718.8018 815.5977 718.7998 815.5596 718.7974 C
814.0508 723 810.5225 727.1646 807.2002 730.4243 c
803.8291 733.729 800.6719 736.0977 800.084 736.5542 c
798.8691 737.4956 795.9805 739.2075 793.291 739.7495 C
793.2178 739.7534 L
787.9492 739.2886 784.1289 735.4321 781.3916 730.646 c
778.751 726.0298 777.0977 720.5313 776.0967 716.2051 C
775.9482 716.3755 L
776.0742 716.9365 776.1426 717.5283 776.1426 718.1484 c
776.1406 720.9883 774.8525 724.3462 772.4092 727.3037 c
769.5 730.8203 765.7246 732.854 762.5615 732.8594 c
761.2002 732.8604 759.9453 732.4751 758.9521 731.6533 c
757.5898 730.5273 756.9453 728.7764 756.9473 726.7871 c
756.9492 723.9438 758.2441 720.5781 760.6895 717.6177 c
763.5996 714.1021 767.3711 712.0713 770.5352 712.0664 c
771.0137 712.0664 771.4756 712.1216 771.9219 712.2188 C
774.6465 709.0889 L
774.1152 709.0811 773.1006 709.0342 772.0469 708.8179 c
770.8428 708.5654 769.5674 708.1094 768.9092 707.1377 c
768.5752 706.6377 768.4512 706.0605 768.4521 705.4858 c
768.46 703.9063 769.3408 702.2881 769.6846 701.7114 C
769.2725 701.4629 768.3643 700.8818 767.3682 700.0332 c
766.0234 698.8853 764.5137 697.2544 763.8975 695.2759 c
763.7393 694.7656 763.6699 694.2427 763.6699 693.7202 c
763.6719 691.9194 764.4697 690.1284 765.2549 688.7769 c
765.8965 687.6758 766.5273 686.8774 766.7461 686.6123 C
766.585 686.0571 766.501 685.5254 766.501 685.0259 c
766.5029 682.9761 767.7129 681.4565 768.8906 680.4639 c
769.8281 679.6724 770.748 679.2036 771.0977 679.0396 C
771.1113 678.7227 771.1611 677.9551 771.3584 676.6802 c
771.4287 676.2217 771.7119 675.8384 772.1045 675.5303 c
773.2852 674.6133 775.5322 674.1875 777.6504 674.1807 c
778.0576 674.1807 778.459 674.1973 778.8477 674.231 c
781.7021 674.4912 784.1152 676.7969 784.5664 677.2441 C
791.1582 677.2441 L
791.7666 676.4307 792.8887 675.7207 793.9033 675.1782 c
794.7656 674.7207 795.5264 674.3989 795.791 674.2915 C
796.5693 671.9805 798.4121 670.7754 800.0449 670.1675 c
801.4219 669.6543 802.6484 669.5439 803.0459 669.52 C
803.208 669.2593 803.6348 668.6328 804.3701 667.9883 c
805.3193 667.1563 806.79 666.3037 808.8262 666.2363 C
809.084 666.2319 L
809.9346 666.2324 810.8008 666.376 811.6406 666.585 C
813.0439 664.9731 L
809.1123 659.9712 804.7051 653.2437 804.5664 653.0322 C
804.4756 652.9375 803.6748 652.0947 802.8613 651.0298 c
802.4287 650.4658 801.9971 649.8428 801.667 649.2344 c
801.3398 648.625 801.1064 648.0352 801.1035 647.4961 c
801.1064 646.9639 801.3193 646.3672 801.6318 645.7188 c
802.1006 644.75 802.8066 643.6699 803.4551 642.6602 c
804.1025 641.6543 804.6924 640.707 804.9189 640.0693 c
805.2373 639.1777 805.6982 637.3408 806.0742 635.7402 c
806.4492 634.1377 806.7432 632.7666 806.7441 632.7637 C
806.7656 632.6592 806.8496 632.5791 806.9551 632.5605 C
807.2256 632.5127 807.6836 632.4082 v
809.0537 632.0938 812.0801 631.2568 814.1846 629.7236 c
814.8418 629.251 815.542 628.2354 816.1816 626.9863 c
817.1475 625.1113 818.002 622.7158 818.6113 620.793 c
818.918 619.8311 819.1611 618.9883 819.3301 618.3848 c
819.498 617.7822 819.5889 617.4229 819.5889 617.4219 C
819.6133 617.3242 819.6914 617.249 819.79 617.2285 C
822.4902 616.666 L
821.3008 615.3955 818.7285 614.2832 816.3711 613.5254 c
815.0938 613.1104 813.8838 612.7891 812.9932 612.5703 c
812.123 612.3574 811.5703 612.2471 811.5449 612.2412 C
811.291 612.2197 807.5293 611.9404 805.1514 610.3652 c
803.8613 609.4912 803.2188 607.6387 802.8457 606.0107 c
802.5273 604.5908 802.4365 603.3301 802.418 603.0244 C
802.335 602.8984 802.1104 602.5508 801.7949 602.0264 c
801.668 601.8164 801.6025 601.585 801.6035 601.3496 c
801.6152 600.7021 802.0068 600.0693 802.5762 599.0127 c
803.0078 598.251 804.127 597.625 805.8994 597.1289 c
807.6738 596.6416 810.1133 596.3213 813.1816 596.3213 c
813.9678 596.3213 814.7949 596.3428 815.6631 596.3867 c
819.4854 596.5859 822.5859 597.2441 824.8135 597.8877 c
827.0371 598.5303 828.4072 599.1641 828.7207 599.2881 c
829.0332 599.4141 830.25 599.8428 831.4561 600.2324 c
832.0605 600.4287 832.6641 600.6162 833.1543 600.7549 c
833.6357 600.8926 834.0381 600.9775 834.127 600.9736 C
834.208 600.9297 L
834.4043 600.7861 834.6885 600.2334 834.8721 599.7422 c
834.9668 599.4951 835.0459 599.2598 835.1016 599.0869 c
835.1553 598.915 835.1855 598.8076 Y
835.3721 598.623 L
837.8047 597.9961 839.9834 597.7705 841.8604 597.7705 c
846.7197 597.7705 849.5576 599.2861 849.584 599.3008 C
849.709 599.4492 L
849.7168 599.4746 850.3916 601.5137 850.3916 605.665 c
850.3916 606.0107 850.3877 606.3711 850.3779 606.7471 c
850.2598 610.9629 848.2266 614.8291 847.625 615.8887 C
847.9482 616.0186 848.2168 616.2314 848.4268 616.4258 c
848.709 616.6904 848.8809 616.9307 848.8867 616.9404 C
848.9355 617.0771 L
848.9854 617.8936 849.0078 618.6885 849.0078 619.4619 c
849.0078 630.29 844.4697 636.8711 843.8447 637.7275 C
843.8721 637.8652 843.9102 638.1016 843.9111 638.4189 c
843.9111 638.7832 843.8584 639.2402 843.6777 639.7256 c
843.4453 640.3291 842.8418 641.0137 842.293 641.585 c
842.0801 641.8037 841.8857 641.9912 841.7148 642.1514 C
849.9414 642.4873 855.334 644.8066 856.4336 645.3213 C
856.7383 644.8066 857.2734 644.1982 857.959 643.5127 c
860.3262 641.1602 864.292 638.124 864.9092 637.7109 C
864.9531 637.6855 865.0674 637.5654 865.1904 637.3867 c
865.6309 636.7578 866.2676 635.4473 866.7803 634.3096 c
867.2959 633.1699 867.6943 632.1973 867.6953 632.1953 C
867.793 632.0762 L
869.3652 631.0283 L
869.458 630.9893 L
875.1289 629.8428 878.1475 627.6377 879.7646 625.4883 c
881.3789 623.3379 881.6006 621.2188 881.6006 620.2158 c
881.6006 620.0215 881.5928 619.8711 881.585 619.7686 c
881.5771 619.668 881.5693 619.6201 Y
881.6201 619.4248 L
881.7949 619.3223 L
883.3447 619.1162 L
882.5625 618.0137 880.9951 616.7305 879.5645 615.7178 c
878.7754 615.1553 878.0303 614.6719 877.4824 614.3271 c
877.0303 614.0439 876.7285 613.8643 876.6299 613.8076 C
876.4131 613.7754 875.5273 613.6426 874.4609 613.3838 c
873.2334 613.082 871.7744 612.626 870.7998 611.9326 c
869.6045 611.0625 869.4033 609.4141 869.3975 608.2148 c
869.3975 607.4629 869.4854 606.873 869.5088 606.7285 C
869.502 606.6719 869.4697 606.4141 869.1943 606.1387 c
868.915 605.8506 868.7119 605.3145 868.707 604.6104 c
868.7061 603.9688 868.8945 603.1934 869.4238 602.4014 C
869.5928 602.2891 L
873.001 601.6406 876.4658 601.416 879.6299 601.416 c
886.751 601.416 892.3545 602.5498 892.3652 602.5518 C
892.4639 602.5947 L
892.4668 602.5957 893.6738 603.4443 894.9639 604.293 c
895.6074 604.7178 896.2734 605.1416 896.8125 605.457 c
897.082 605.6143 897.3203 605.7451 897.5049 605.833 C
897.7334 605.9297 L
897.8018 605.9502 L
897.8174 605.9531 L
897.8203 605.9521 L
897.8779 605.9492 898.125 605.7744 898.3662 605.5068 c
898.7402 605.1094 899.1748 604.5264 899.5107 604.0469 c
899.8477 603.5674 900.085 603.1924 Y
900.2637 603.0742 L
902.4678 602.707 904.4668 602.5645 906.2158 602.5645 c
908.4824 602.5645 910.3262 602.8047 911.6494 603.1055 c
912.3096 603.2568 912.8398 603.4229 913.2324 603.5869 c
913.627 603.7598 913.877 603.8867 914.0293 604.1152 C
914.1895 604.3926 914.2832 604.8389 914.3662 605.4609 c
914.4443 606.0781 914.4922 606.8506 914.4922 607.6943 c
914.4922 608.8184 914.4072 610.0693 914.1943 611.2422 c
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1 w914.1943 611.2422 m
913.7305 613.7715 911.8438 617.7627 911.3047 618.8721 C
911.7344 618.9814 912.4629 619.2568 912.9697 619.9541 c
913.1445 620.2041 913.252 620.5488 913.332 620.9844 c
913.4092 621.417 913.4492 621.9395 913.4492 622.5186 c
913.4482 624.1582 913.127 626.2637 912.3418 628.0742 c
911.0938 630.9414 909.2949 632.6172 909.0469 632.8408 C
907.7568 636.7568 904.5127 640.4795 901.585 643.2471 c
898.6377 646.0303 896.0068 647.8379 896 647.8433 C
895.9492 647.8706 L
895.9443 647.8726 L
895.8506 647.9185 894.7197 648.4517 894.0039 650.5933 c
893.583 651.8408 892.1094 654.1509 890.7285 656.1938 c
889.7881 657.5815 888.9063 658.8159 888.4307 659.4717 C
888.6787 659.4517 889.0039 659.436 889.4297 659.436 c
890.0205 659.4365 890.7998 659.4658 891.8115 659.5537 c
891.9209 659.5635 892.0137 659.6406 892.042 659.7471 c
893.8877 666.6318 894.6641 673.354 894.6641 679.752 c
894.6641 691.8281 891.8994 702.7495 888.3389 711.4512 c
884.7754 720.1543 880.4238 726.6333 877.21 729.8491 c
869.6348 737.4243 860.3789 743.8218 859.2852 744.5693 C
859.2744 744.8438 859.2314 745.4673 859 745.9434 c
858.8428 746.2529 858.3896 746.8706 857.96 747.4473 c
857.6445 747.8677 857.3496 748.2485 857.2158 748.4219 C
857.2695 748.6519 857.3848 749.1621 857.4521 749.6328 C
857.4609 749.7612 L
857.4541 750.1865 857.2275 750.6577 856.9482 751.0977 c
856.6602 751.5337 856.335 751.9136 855.999 752.0889 c
855.7969 752.189 855.5742 752.2129 855.3525 752.2144 c
854.9355 752.2129 854.5166 752.1167 854.2998 752.0596 C
853.502 752.8574 L
854.2217 754.0801 L
854.9971 754.3125 L
855.1729 754.4907 L
856.334 758.5537 L
857.4199 758.4097 L
857.6445 758.4883 L
857.7129 758.7163 L
856.5283 765.2275 L
857.0234 765.4131 L
857.1523 765.4609 857.2217 765.6021 857.1816 765.7334 C
856.4688 768.1113 L
857.0137 768.2925 L
857.1797 768.458 L
857.1475 768.6895 L
856.1807 770.1016 L
856.96 770.4912 L
857.1016 770.6836 L
857.0283 770.9111 L
853.7646 774.1748 L
854.3936 774.5781 855.3613 774.7271 856.2305 774.7231 c
856.7188 774.7231 857.1699 774.6851 857.4951 774.6479 c
857.8213 774.6104 858.0186 774.5737 Y
858.123 774.5547 858.2295 774.6006 858.2861 774.6899 C
858.2813 774.9814 L
856.832 777.043 854.1982 777.3491 852.6543 777.3525 c
852.2627 777.3525 851.9434 777.3325 851.7207 777.3125 C
851.9502 779.6108 L
851.8838 779.813 L
851.6895 779.8989 L
851.498 779.8989 851.2637 779.9097 v
851.0898 779.917 850.9043 779.9351 850.7578 779.9575 C
850.7715 780.0386 850.7979 780.1504 850.8486 780.2881 c
850.9512 780.5801 851.1113 780.9365 851.2451 781.2168 c
851.3779 781.4966 851.4844 781.6992 851.4844 781.7002 C
851.4707 781.9658 L
851.4189 782.0449 851.3281 782.0898 851.2324 782.083 C
848.3613 781.8672 L
848.71 782.2524 849.2734 782.8179 850.0088 783.3569 c
851.4102 784.3921 851.7607 786.02 851.7695 786.0449 C
851.791 786.1426 851.7559 786.2446 851.6768 786.3071 C
851.4004 786.3384 L
849.9141 785.625 L
850.1797 786.3579 850.2021 787.1357 850.207 787.4922 c
850.207 787.6123 850.2031 787.6841 850.2031 787.6875 C
850.1963 787.8135 850.1025 787.9165 849.9785 787.9341 c
849.8535 787.9512 849.7344 787.8789 849.6934 787.7598 c
849.2422 786.458 848.4756 785.6831 847.5771 785.2104 c
846.6787 784.7402 845.6396 784.585 844.6787 784.5854 c
843.8516 784.5854 843.0869 784.6997 842.5313 784.814 c
842.3379 784.854 842.1807 784.8916 842.0439 784.9268 C
842.5068 785.478 842.6279 786.1387 842.627 786.6113 c
842.627 787.0073 842.5596 787.2847 842.5566 787.2988 c
842.5303 787.4058 842.4395 787.4844 842.3301 787.4971 c
842.2217 787.5093 842.1162 787.4517 842.0674 787.3535 c
841.8936 787.0088 841.667 786.8105 841.4121 786.6846 c
841.1563 786.5596 840.8662 786.5137 840.5889 786.5146 c
840.3115 786.5137 840.0498 786.5596 839.8594 786.6055 c
839.7656 786.6279 839.6885 786.6514 839.6367 786.668 C
839.6035 786.6792 L
832.9756 792.3452 832.2783 800.77 832.2803 804.0034 c
832.2803 804.3882 832.291 804.6895 832.3008 804.9126 C
832.9512 804.563 833.5703 804.3892 834.1514 804.3892 c
835.0332 804.3882 835.8066 804.7681 836.4424 805.3535 c
838.3447 807.1191 839.2285 810.7061 839.2383 812.749 c
839.2266 814.4619 837.9033 816.2769 836.6152 817.708 c
835.4756 818.9644 834.3447 819.9048 834.0859 820.1152 C
833.957 820.4204 833.3809 821.3652 831.0693 822.1694 c
829.4746 822.7261 826.1602 823.4097 823.084 823.4111 c
820.9766 823.4072 818.9814 823.0986 817.7168 822.1294 c
815.8545 820.686 812.958 820.0171 810.2852 820.0195 c
808.9785 820.0195 807.7256 820.1777 806.6777 820.4707 c
805.749 820.731 804.7227 820.8672 803.6523 820.8672 c
800.8428 820.8667 797.7246 819.9316 795.2949 817.7939 c
793.3281 816.0693 792.8984 814.1597 792.9023 812.6855 c
792.9033 811.6299 793.1133 810.7627 793.1094 810.3896 C
793.1035 810.2856 793.0752 810.2236 792.9092 810.1177 c
792.665 809.9683 792.1465 809.8545 791.4648 809.7993 c
790.7822 809.7417 789.9297 809.7295 788.9756 809.7295 c
788.3398 809.7295 787.6582 809.7349 786.9502 809.7349 c
785.1611 809.7349 783.1455 809.5371 781.3633 809.0708 c
779.582 808.6016 778.0264 807.876 777.1738 806.7466 c
776.3447 805.6348 775.8594 803.9873 775.1904 802.3301 c
774.5273 800.6797 773.6953 799.0337 772.2607 797.9028 C
769.1006 796.6929 767.1572 795.3911 765.9961 794.1255 c
764.8281 792.8555 764.4609 791.6138 764.4629 790.5967 c
764.4648 789.3433 764.9961 788.4565 765.1826 788.1802 C
765.082 787.6758 765.0303 787.1982 765.0303 786.7529 c
765.0273 784.5039 766.2148 783.0225 767.377 782.1377 c
768.335 781.4058 769.2725 781.0586 769.5889 780.9536 C
770.2109 779.123 772.6318 777.5347 775.9619 777.5278 c
777.2246 777.5278 778.6182 777.7593 780.0947 778.2988 c
782.8516 779.3057 784.2861 781.1396 785.0088 782.7104 c
785.498 783.7705 785.6709 784.7007 785.7334 785.208 C
789.6484 783.3062 792.1475 779.8828 793.6611 776.8711 c
794.4395 775.3232 794.959 773.8901 795.2842 772.8467 c
795.4453 772.3247 795.5596 771.8999 795.6318 771.6064 c
795.7031 771.314 795.7354 771.1563 Y
795.8916 770.9644 L
796.1377 770.9883 L
796.4473 771.1938 L
796.4434 771.1714 796.4404 771.1514 796.4375 771.1284 c
796.3896 770.7925 796.3213 770.3955 796.2676 770.2407 C
796.2393 770.1309 796.043 769.8813 795.7715 769.4639 c
795.501 769.041 795.1621 768.4297 794.8281 767.4941 c
794.7109 767.167 794.6621 766.833 794.6621 766.5073 c
794.6719 765.1758 795.4346 763.9824 795.7637 763.5205 C
794.1992 762.3105 794.0137 760.6758 794.0166 760.0483 c
794.0166 760.0444 794.0166 760.043 794.0166 760.0396 C
793.3125 759.9619 791.2656 759.7124 790.1289 759.2622 c
789.4531 758.9961 788.9111 758.6504 788.5391 757.9663 c
788.165 757.2861 787.9375 756.3105 787.7383 754.7271 c
787.7188 754.5713 787.71 754.4141 787.71 754.2559 c
787.7148 752.6133 788.6855 750.8867 789.7617 749.4844 c
790.3008 748.7847 790.8701 748.168 791.3721 747.6914 c
791.8779 747.2129 792.2988 746.8804 792.5996 746.7275 c
792.8428 746.6069 793.1191 746.5664 793.4072 746.5659 c
794.6465 746.5732 796.2227 747.3169 796.3457 747.3706 C
796.4219 747.3921 L
796.6045 747.4399 797.0449 747.5371 797.5381 747.5371 c
798.1045 747.5371 798.7119 747.4004 799.1309 746.98 C
799.082 746.4116 799.0518 745.8589 799.0518 745.3325 c
799.0459 739.813 801.6895 736.582 804.3193 734.7803 c
806.5332 733.2578 808.7285 732.7227 809.3799 732.5889 C
809.4307 731.2246 809.9541 730.2432 810.8008 729.6528 c
811.6924 729.0283 812.8799 728.8086 814.165 728.8076 c
817.7471 728.812 822.1885 730.5405 823.332 731.0088 C
823.4688 730.4619 L
819.0732 728.3271 L
818.9482 728.1978 L
818.4238 727.0181 L
818.4111 726.8413 L
818.4121 726.8398 818.6416 726.019 818.9219 725.1294 c
819.0615 724.6846 819.2148 724.2231 819.3574 723.835 c
819.5049 723.4434 819.627 723.1426 819.7646 722.9541 C
819.8145 722.8965 819.8721 722.6958 819.8691 722.4243 c
819.873 721.7065 819.541 720.5469 819.0967 719.8428 c
818.9883 719.6611 818.707 719.4688 818.3311 719.3213 c
817.7695 719.0952 817.0234 718.9575 816.4258 718.8813 c
816.126 718.8428 815.8623 718.8188 815.6738 718.8052 c
815.625 718.8018 815.5977 718.7998 815.5596 718.7974 C
814.0508 723 810.5225 727.1646 807.2002 730.4243 c
803.8291 733.729 800.6719 736.0977 800.084 736.5542 c
798.8691 737.4956 795.9805 739.2075 793.291 739.7495 C
793.2178 739.7534 L
787.9492 739.2886 784.1289 735.4321 781.3916 730.646 c
778.751 726.0298 777.0977 720.5313 776.0967 716.2051 C
775.9482 716.3755 L
776.0742 716.9365 776.1426 717.5283 776.1426 718.1484 c
776.1406 720.9883 774.8525 724.3462 772.4092 727.3037 c
769.5 730.8203 765.7246 732.854 762.5615 732.8594 c
761.2002 732.8604 759.9453 732.4751 758.9521 731.6533 c
757.5898 730.5273 756.9453 728.7764 756.9473 726.7871 c
756.9492 723.9438 758.2441 720.5781 760.6895 717.6177 c
763.5996 714.1021 767.3711 712.0713 770.5352 712.0664 c
771.0137 712.0664 771.4756 712.1216 771.9219 712.2188 C
774.6465 709.0889 L
774.1152 709.0811 773.1006 709.0342 772.0469 708.8179 c
770.8428 708.5654 769.5674 708.1094 768.9092 707.1377 c
768.5752 706.6377 768.4512 706.0605 768.4521 705.4858 c
768.46 703.9063 769.3408 702.2881 769.6846 701.7114 C
769.2725 701.4629 768.3643 700.8818 767.3682 700.0332 c
766.0234 698.8853 764.5137 697.2544 763.8975 695.2759 c
763.7393 694.7656 763.6699 694.2427 763.6699 693.7202 c
763.6719 691.9194 764.4697 690.1284 765.2549 688.7769 c
765.8965 687.6758 766.5273 686.8774 766.7461 686.6123 C
766.585 686.0571 766.501 685.5254 766.501 685.0259 c
766.5029 682.9761 767.7129 681.4565 768.8906 680.4639 c
769.8281 679.6724 770.748 679.2036 771.0977 679.0396 C
771.1113 678.7227 771.1611 677.9551 771.3584 676.6802 c
771.4287 676.2217 771.7119 675.8384 772.1045 675.5303 c
773.2852 674.6133 775.5322 674.1875 777.6504 674.1807 c
778.0576 674.1807 778.459 674.1973 778.8477 674.231 c
781.7021 674.4912 784.1152 676.7969 784.5664 677.2441 C
791.1582 677.2441 L
791.7666 676.4307 792.8887 675.7207 793.9033 675.1782 c
794.7656 674.7207 795.5264 674.3989 795.791 674.2915 C
796.5693 671.9805 798.4121 670.7754 800.0449 670.1675 c
801.4219 669.6543 802.6484 669.5439 803.0459 669.52 C
803.208 669.2593 803.6348 668.6328 804.3701 667.9883 c
805.3193 667.1563 806.79 666.3037 808.8262 666.2363 C
809.084 666.2319 L
809.9346 666.2324 810.8008 666.376 811.6406 666.585 C
813.0439 664.9731 L
809.1123 659.9712 804.7051 653.2437 804.5664 653.0322 C
804.4756 652.9375 803.6748 652.0947 802.8613 651.0298 c
802.4287 650.4658 801.9971 649.8428 801.667 649.2344 c
801.3398 648.625 801.1064 648.0352 801.1035 647.4961 c
801.1064 646.9639 801.3193 646.3672 801.6318 645.7188 c
802.1006 644.75 802.8066 643.6699 803.4551 642.6602 c
804.1025 641.6543 804.6924 640.707 804.9189 640.0693 c
805.2373 639.1777 805.6982 637.3408 806.0742 635.7402 c
806.4492 634.1377 806.7432 632.7666 806.7441 632.7637 C
806.7656 632.6592 806.8496 632.5791 806.9551 632.5605 C
807.2256 632.5127 807.6836 632.4082 v
809.0537 632.0938 812.0801 631.2568 814.1846 629.7236 c
814.8418 629.251 815.542 628.2354 816.1816 626.9863 c
817.1475 625.1113 818.002 622.7158 818.6113 620.793 c
818.918 619.8311 819.1611 618.9883 819.3301 618.3848 c
819.498 617.7822 819.5889 617.4229 819.5889 617.4219 C
819.6133 617.3242 819.6914 617.249 819.79 617.2285 C
822.4902 616.666 L
821.3008 615.3955 818.7285 614.2832 816.3711 613.5254 c
815.0938 613.1104 813.8838 612.7891 812.9932 612.5703 c
812.123 612.3574 811.5703 612.2471 811.5449 612.2412 C
811.291 612.2197 807.5293 611.9404 805.1514 610.3652 c
803.8613 609.4912 803.2188 607.6387 802.8457 606.0107 c
802.5273 604.5908 802.4365 603.3301 802.418 603.0244 C
802.335 602.8984 802.1104 602.5508 801.7949 602.0264 c
801.668 601.8164 801.6025 601.585 801.6035 601.3496 c
801.6152 600.7021 802.0068 600.0693 802.5762 599.0127 c
803.0078 598.251 804.127 597.625 805.8994 597.1289 c
807.6738 596.6416 810.1133 596.3213 813.1816 596.3213 c
813.9678 596.3213 814.7949 596.3428 815.6631 596.3867 c
819.4854 596.5859 822.5859 597.2441 824.8135 597.8877 c
827.0371 598.5303 828.4072 599.1641 828.7207 599.2881 c
829.0332 599.4141 830.25 599.8428 831.4561 600.2324 c
832.0605 600.4287 832.6641 600.6162 833.1543 600.7549 c
833.6357 600.8926 834.0381 600.9775 834.127 600.9736 C
834.208 600.9297 L
834.4043 600.7861 834.6885 600.2334 834.8721 599.7422 c
834.9668 599.4951 835.0459 599.2598 835.1016 599.0869 c
835.1553 598.915 835.1855 598.8076 Y
835.3721 598.623 L
837.8047 597.9961 839.9834 597.7705 841.8604 597.7705 c
846.7197 597.7705 849.5576 599.2861 849.584 599.3008 C
849.709 599.4492 L
849.7168 599.4746 850.3916 601.5137 850.3916 605.665 c
850.3916 606.0107 850.3877 606.3711 850.3779 606.7471 c
850.2598 610.9629 848.2266 614.8291 847.625 615.8887 C
847.9482 616.0186 848.2168 616.2314 848.4268 616.4258 c
848.709 616.6904 848.8809 616.9307 848.8867 616.9404 C
848.9355 617.0771 L
848.9854 617.8936 849.0078 618.6885 849.0078 619.4619 c
849.0078 630.29 844.4697 636.8711 843.8447 637.7275 C
843.8721 637.8652 843.9102 638.1016 843.9111 638.4189 c
843.9111 638.7832 843.8584 639.2402 843.6777 639.7256 c
843.4453 640.3291 842.8418 641.0137 842.293 641.585 c
842.0801 641.8037 841.8857 641.9912 841.7148 642.1514 C
849.9414 642.4873 855.334 644.8066 856.4336 645.3213 C
856.7383 644.8066 857.2734 644.1982 857.959 643.5127 c
860.3262 641.1602 864.292 638.124 864.9092 637.7109 C
864.9531 637.6855 865.0674 637.5654 865.1904 637.3867 c
865.6309 636.7578 866.2676 635.4473 866.7803 634.3096 c
867.2959 633.1699 867.6943 632.1973 867.6953 632.1953 C
867.793 632.0762 L
869.3652 631.0283 L
869.458 630.9893 L
875.1289 629.8428 878.1475 627.6377 879.7646 625.4883 c
881.3789 623.3379 881.6006 621.2188 881.6006 620.2158 c
881.6006 620.0215 881.5928 619.8711 881.585 619.7686 c
881.5771 619.668 881.5693 619.6201 Y
881.6201 619.4248 L
881.7949 619.3223 L
883.3447 619.1162 L
882.5625 618.0137 880.9951 616.7305 879.5645 615.7178 c
878.7754 615.1553 878.0303 614.6719 877.4824 614.3271 c
877.0303 614.0439 876.7285 613.8643 876.6299 613.8076 C
876.4131 613.7754 875.5273 613.6426 874.4609 613.3838 c
873.2334 613.082 871.7744 612.626 870.7998 611.9326 c
869.6045 611.0625 869.4033 609.4141 869.3975 608.2148 c
869.3975 607.4629 869.4854 606.873 869.5088 606.7285 C
869.502 606.6719 869.4697 606.4141 869.1943 606.1387 c
868.915 605.8506 868.7119 605.3145 868.707 604.6104 c
868.7061 603.9688 868.8945 603.1934 869.4238 602.4014 C
869.5928 602.2891 L
873.001 601.6406 876.4658 601.416 879.6299 601.416 c
886.751 601.416 892.3545 602.5498 892.3652 602.5518 C
892.4639 602.5947 L
892.4668 602.5957 893.6738 603.4443 894.9639 604.293 c
895.6074 604.7178 896.2734 605.1416 896.8125 605.457 c
897.082 605.6143 897.3203 605.7451 897.5049 605.833 C
897.7334 605.9297 L
897.8018 605.9502 L
897.8174 605.9531 L
897.8203 605.9521 L
897.8779 605.9492 898.125 605.7744 898.3662 605.5068 c
898.7402 605.1094 899.1748 604.5264 899.5107 604.0469 c
899.8477 603.5674 900.085 603.1924 Y
900.2637 603.0742 L
902.4678 602.707 904.4668 602.5645 906.2158 602.5645 c
908.4824 602.5645 910.3262 602.8047 911.6494 603.1055 c
912.3096 603.2568 912.8398 603.4229 913.2324 603.5869 c
913.627 603.7598 913.877 603.8867 914.0293 604.1152 C
914.1895 604.3926 914.2832 604.8389 914.3662 605.4609 c
914.4443 606.0781 914.4922 606.8506 914.4922 607.6943 c
914.4922 608.8184 914.4072 610.0693 914.1943 611.2422 c
f
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
790.75 802.0029 m
797.958 798.7266 807 804.3618 v
816.043 809.9966 811.5869 811.5693 y
815.5186 811.5693 815.5186 814.7144 v
817.877 813.9282 816.8291 812.4868 v
821.5469 811.9624 824.168 812.3555 v
826.7891 812.749 827.1816 808.1621 831.8994 807.5068 C
833.0791 806.5894 833.9961 806.0654 835.3066 806.7207 c
836.6172 807.376 838.1895 810.7832 837.4033 813.2729 c
836.6172 815.7627 833.3408 818.9082 y
830.3271 821.0049 826.6572 821.2671 v
822.9883 821.5293 821.2852 821.3979 819.8428 820.874 c
818.4014 820.3496 813.8145 818.3838 810.8008 818.1221 c
807.7871 817.8599 804.1172 819.5635 800.4482 818.5151 c
796.7783 817.4668 794.5508 814.8457 794.8125 811.3071 c
796.2539 811.4385 796.7783 813.5352 v
798.875 808.0313 791.668 807.8999 v
784.46 807.769 779.4805 807.2446 778.3008 804.4927 c
777.1211 801.7407 776.4658 798.2021 775.0244 797.416 c
773.583 796.6299 767.4238 794.271 766.6377 791.9121 c
765.8506 789.5532 767.5547 788.3735 y
767.5547 786.4082 768.3408 784.5732 v
769.127 782.7388 771.748 782.6074 y
773.8447 780.5107 778.1699 781.2969 v
782.4941 782.0835 784.7217 785.6216 784.8535 789.1602 c
784.9844 792.6982 786.1631 793.2227 y
785.9014 789.291 786.5566 787.9805 v
794.1572 783.7871 797.041 774.0894 v
812.7666 789.1602 836.8799 786.146 v
829.6719 792.1743 830.5889 805.541 V
827.3125 806.8516 825.4785 808.1621 825.3477 809.6035 c
819.7119 810.3896 818.1396 810.2588 v
816.5664 810.1279 814.8633 809.0796 y
806.6074 793.7466 790.75 802.0029 v
f
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
827.4443 735.0366 m
825.7402 736.7402 l
823.25 731.7607 815.7803 730.0571 813.0283 730.7119 c
810.2764 731.3672 811.5869 734.3813 y
801.627 734.6436 801.2344 744.4722 y
805.166 746.1758 806.083 748.666 v
807 751.1558 805.9521 754.0391 804.3789 754.4321 c
802.8066 754.8252 801.2344 753.9077 y
802.0205 754.4321 803.5928 753.3838 v
805.166 752.3354 805.0342 748.666 803.9863 748.4038 c
802.9375 748.1416 802.0205 748.666 799.9238 749.7144 c
797.8271 750.7627 795.5986 749.0591 793.8955 748.9277 c
792.1914 748.7969 790.3574 752.7285 789.833 753.3838 c
789.3086 754.0391 789.5703 756.5288 790.3574 757.3149 c
791.1436 758.1016 792.9785 758.1016 794.0264 758.1016 c
795.0752 758.1016 797.8271 756.9219 y
796.2539 758.8877 796.2539 760.1982 v
796.2539 761.5088 797.6963 762.8193 y
800.3164 762.4258 801.627 763.6055 y
803.5928 762.4258 803.7246 759.6738 y
804.9033 760.5913 806.4766 760.1982 807.5244 759.8052 c
808.5732 759.4121 809.4902 759.4121 810.5391 759.2808 c
811.5869 759.1499 814.6016 758.4946 y
813.6836 759.8052 808.4414 762.2949 y
811.4561 764.916 814.8633 764.6538 y
813.0283 768.3232 811.7178 768.5854 v
810.4072 768.8477 805.0342 768.5854 y
806.083 769.896 806.6074 770.1577 v
807.1309 770.4199 809.0967 771.2061 y
809.8838 771.3374 810.9316 771.4683 v
811.9805 771.5996 812.7666 772.7788 y
811.1943 772.3857 810.4072 773.3032 y
811.8496 773.6963 811.5869 775.6621 y
810.9316 774.7446 808.0488 774.4824 806.2139 774.4824 c
804.3789 774.4824 803.5928 769.5024 803.0684 769.1094 c
802.5449 768.7163 800.0547 764.7852 799.1377 764.6538 c
798.2197 764.5229 797.1719 765.0469 797.041 766.4883 c
796.9092 767.9302 798.6133 770.813 y
798.7441 771.9927 799.2686 773.041 v
799.793 774.0894 803.2002 775.5308 805.2969 777.1035 c
807.3936 778.6763 819.5811 782.7388 y
822.2021 780.7729 822.8574 778.4141 v
823.5127 776.0552 827.9678 772.7788 828.7549 772.7788 c
829.541 772.7788 832.293 769.6338 y
827.8369 769.896 l
829.541 766.8818 l
826.1338 767.0127 l
828.4922 764.1299 l
825.8711 764.1299 l
826.7891 762.5571 827.8369 761.6396 v
828.8857 760.7222 832.5547 759.543 y
831.6377 760.4604 831.8994 761.9019 v
832.1621 763.3433 834.6514 765.1782 y
836.3555 763.4746 l
835.3066 768.9785 844.2178 769.3716 v
853.1299 769.7646 855.0957 756.5288 848.0186 752.8594 c
840.9424 749.1899 836.3555 753.9077 y
839.1074 746.9624 847.4941 750.6318 y
843.1699 747.3555 l
850.2461 749.0591 l
843.4316 744.3413 l
827.4443 735.0366 l
f
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
826.1338 732.416 m
853.7852 750.2383 l
855.3574 751.5488 855.751 750.3696 v
856.1436 749.1899 853.5225 747.0933 y
855.751 747.4863 856.2744 746.8311 v
856.7988 746.1758 857.1924 744.8652 y
848.6738 741.0649 l
854.1777 741.5894 856.1436 741.8516 v
858.1094 742.1133 858.1094 742.1133 y
890.3477 726.2563 882.2227 692.8389 v
888.251 703.978 883.0088 717.083 v
898.6035 693.7563 890.2168 661.5186 V
885.8916 661.5186 877.8975 662.6978 873.4424 664.2705 c
868.9863 665.8428 831.375 678.2925 y
841.7285 684.7139 842.1211 686.2866 v
842.5146 687.8594 842.1211 688.5146 y
843.6943 692.3149 l
850.1152 693.2324 850.5088 696.7705 v
850.9014 700.3086 850.7705 702.0127 y
859.0264 710.1377 858.1094 721.6699 v
857.1924 733.2021 841.9902 740.541 836.2246 735.561 c
848.1494 737.1338 853.2607 727.436 v
858.3711 717.7383 851.1641 705.0264 849.9844 704.1094 c
848.8047 703.1919 847.2324 703.061 y
847.625 701.6191 848.0186 701.3574 v
848.4121 701.0952 849.1982 697.1636 848.543 696.2461 c
847.8877 695.3291 843.4316 694.6738 842.6455 694.6738 c
841.8594 694.6738 841.8594 692.708 840.8105 690.7422 c
834.7832 700.4399 827.0508 701.3574 v
838.7139 709.4824 832.0303 724.9463 v
832.293 721.4077 831.8994 720.0972 v
831.5068 718.7866 827.0508 720.2285 826.7891 723.5044 c
825.3477 716.6899 832.4238 718.3936 v
833.21 709.6133 825.085 702.1436 v
824.6914 702.4058 824.168 702.4058 v
823.6436 702.4058 819.1875 698.7363 y
821.8086 718.0005 821.8086 721.6699 v
821.8086 725.3394 823.1191 728.4844 824.168 729.0088 c
825.2158 729.5327 828.2305 731.1055 y
826.002 731.4985 826.1338 732.416 v
f
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
824.4297 700.833 m
836.4863 698.8672 840.1553 686.9419 v
832.8174 679.7344 829.0166 679.21 v
829.2783 684.9761 825.7402 689.4316 v
822.2021 693.8872 818.7949 694.4116 818.2705 694.0186 c
817.7461 693.6255 816.5664 692.5771 y
817.0908 695.0669 817.7461 695.7222 v
818.4014 696.3774 824.4297 700.833 y
f
797.8271 735.8232 m
818.0088 720.8833 817.2217 703.4541 V
816.4355 699.1294 812.373 690.2178 811.8496 690.0869 c
811.3252 689.9561 815.125 700.7021 814.7324 706.7305 c
811.8496 695.9844 807.3936 692.3149 v
811.8496 701.3574 811.3252 707.9097 v
807.7871 695.853 803.5928 692.8389 v
808.0488 700.5708 808.0488 708.1719 v
804.1172 697.1636 800.9717 694.2808 v
804.6416 702.1436 804.5107 708.0405 v
800.8408 697.2949 798.4824 695.5908 v
806.8691 717.2139 797.8271 735.8232 v
f
794.8037 693.6675 m
796.4756 697.6265 797.8633 702.3457 798.7627 707.4922 c
801.4316 722.7554 798.7861 735.9707 792.8555 737.0078 c
787.3398 737.9707 780.9297 728.0615 777.9121 714.3926 C
794.8037 693.6675 L
f
776.6553 706.8076 m
776.4678 705.1182 776.3486 703.4697 776.292 701.875 C
777.4736 701.5859 778.5146 701.0391 779.0869 700.0469 c
781.0527 696.6396 780.2666 696.1152 780.0039 695.3291 c
779.7422 694.5425 779.4805 693.6255 Y
781.708 693.1011 782.625 691.2666 v
783.543 689.4316 781.9697 685.6313 Y
784.5098 684.5762 784.9912 681.791 V
787.332 682.3203 789.7461 684.5767 791.9326 688.0625 C
776.6553 706.8076 L
f
775.0244 707.2544 m
774.1074 702.9297 l
770.9619 702.4058 l
767.8164 707.9097 775.0244 707.2544 v
f
777.252 694.5425 m
771.8789 692.9702 770.0449 690.7422 v
768.21 688.5146 766.2441 689.9561 765.7197 692.4458 c
765.1953 694.9355 767.8164 698.605 769.5205 699.3916 c
771.2236 700.1777 776.4658 701.0952 777.9072 698.7363 c
779.3486 696.3774 778.8252 695.1978 777.252 694.5425 c
f
770.4375 687.728 m
772.9277 690.873 775.418 691.3975 v
777.9072 691.9219 780.2666 691.9219 781.0527 690.2178 c
781.8389 688.5146 779.0869 685.1069 777.1211 684.0586 c
775.1553 683.0103 771.6172 681.0444 769.6514 682.8794 c
767.6855 684.7139 770.4375 687.728 y
f
773.1895 680.1274 m
779.7422 681.3066 780.9219 684.0586 v
783.2803 682.8794 783.543 681.0444 v
783.8047 679.21 781.1836 676.9819 778.1699 676.3267 c
775.1553 675.6719 771.8789 675.9336 773.1895 680.1274 c
f
818.2705 691.0044 m
820.7607 691.0044 823.25 688.5146 v
825.7402 686.0244 826.3955 680.2583 826.002 679.0791 c
825.6094 677.8994 823.6436 676.7202 y
817.2217 670.6919 815.5186 669.6436 v
813.8145 668.5947 808.0488 666.2363 805.2969 669.5122 c
809.2285 670.6919 809.6211 672.3955 v
797.3027 668.9883 798.6133 675.2783 v
792.9785 676.458 792.3232 679.603 v
791.668 682.748 794.5508 685.5005 y
795.0752 684.1899 796.6475 684.0586 v
798.2197 683.9277 801.4961 687.4658 801.3652 688.3833 c
801.2344 689.3008 800.3164 689.6938 y
801.627 690.3491 802.6758 689.9561 v
803.7246 689.563 804.9033 690.873 808.0488 689.563 c
811.1943 688.2524 813.4219 685.3691 813.6836 684.4521 c
813.9463 683.5347 814.6016 685.6313 814.208 686.9419 c
813.8145 688.2524 818.2705 691.0044 y
f
820.5381 662.9497 m
816.4063 667.7778 L
815.5166 667.3301 814.459 666.9248 813.2246 666.6572 C
818.1484 660.9043 L
818.7139 660.2441 819.707 660.1675 820.3672 660.7319 c
821.0264 661.2969 821.1035 662.29 820.5381 662.9497 C
f
811.5215 766.8164 m
809.9893 767.4058 807.6602 767.1699 806.0361 766.8867 C
806.5615 766.4541 806.9023 765.8076 806.9023 765.0747 c
806.9023 764.4507 806.6553 763.8877 806.2598 763.4658 C
808.0254 764.356 811.6523 765.8989 Y
811.7178 766.0952 811.5215 766.8164 V
f
907.166 632.0762 m
905.7686 638.7168 895.5449 645.8799 893.2744 647.2773 c
891.0039 648.6748 888.1191 651.9082 Y
892.9248 649.4619 L
892.3125 651.7334 886.2852 659.8584 Y
880.7588 660.1626 872.7432 662.8286 Y
830.0205 676.9819 L
829.5811 677.001 828.7988 676.6841 827.8291 676.1538 C
827.5957 675.8408 827.3359 675.5776 827.0508 675.4097 c
825.5654 674.5356 825.2158 674.0991 Y
820.8213 669.0166 818.2793 668.0073 V
821.7334 663.9727 L
822.2383 663.3843 822.4902 662.647 822.4883 661.9268 c
822.4902 661.0464 822.1143 660.1567 821.3896 659.5376 C
821.3877 659.5361 L
820.8008 659.0332 820.0645 658.7803 819.3447 658.7817 c
818.4639 658.7798 817.5732 659.1572 816.9541 659.8813 C
813.8838 663.4688 L
810.2607 658.3975 805.0674 650.6582 804.335 650.0737 c
803.4609 649.375 803.2871 647.8892 803.7246 646.4043 c
804.1611 644.9189 808.7041 639.415 Y
806.9561 640.0264 807.0439 639.5889 v
807.1328 639.1523 808.1797 634.085 Y
812.8975 632.8623 815.6055 631.0283 v
818.3135 629.1934 821.1094 618.5342 Y
846.8828 617.5732 L
848.6309 627.7949 842.3398 637.3184 Y
842.6885 641.9492 838.3213 640.9873 Y
839.4561 642.21 838.8457 643.1719 v
838.498 643.7168 837.8662 643.8662 837.1807 643.959 C
835.3711 638.7754 827.0225 639.3809 826.1777 640.9873 c
825.3037 642.6484 826.4395 643.7832 Y
826.4395 642.5596 829.7588 640.5508 832.4678 641.4238 c
834.3037 642.0156 835.1738 643.4092 835.5449 644.2461 C
834.4268 644.6211 833.166 645.793 Y
843.126 643.6953 853.6094 646.3164 v
864.0938 648.9375 870.3838 659.4214 Y
870.291 658.1309 869.8828 656.8335 869.293 655.5698 C
869.3779 654.6299 869.6289 653.0693 870.3838 652.083 c
871.5205 650.5977 879.8193 642.2979 Y
876.8486 643.5215 874.8398 645.0059 v
872.8311 646.4912 871.6074 647.5396 Y
870.123 647.1025 868.8994 648.064 v
868.0762 648.7109 866.9375 650.1074 866.2803 650.9531 C
863.2734 647.2988 859.7256 644.6563 Y
860.8623 643.2588 867.4141 638.6289 Y
868.6377 633.7363 869.5977 632.7744 v
870.5576 631.8135 879.6455 631.377 Y
876.0635 630.3291 L
883.4023 627.1836 883.0527 620.7178 Y
911.7949 620.8066 L
912.9307 628.9316 907.166 632.0762 Y
f
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
807.2188 744.4282 m
809.7529 745.8257 812.2861 744.9526 v
814.8193 744.0791 815.6934 744.0791 y
815.9551 740.7588 815.8672 740.3223 v
815.7803 739.8857 816.7422 740.3218 817.0039 741.5454 c
817.2666 742.7686 817.3545 744.4287 817.5283 744.8652 c
817.7021 745.3022 813.335 747.0498 811.8496 746.9624 c
810.3633 746.8745 807.2188 745.8257 807.2188 744.4282 c
f
809.2285 741.458 m
810.9756 742.5938 812.1113 741.895 v
813.2471 741.1963 813.5088 740.1475 813.2471 739.7979 c
812.9844 739.4482 811.4121 740.6719 809.2285 741.458 c
f
833.8652 750.4565 m
835.4365 745.1274 831.3311 741.895 v
834.9131 742.6807 835.5254 745.4766 v
836.1367 748.2725 833.8652 750.4565 y
f
849.7666 761.1157 m
849.3301 764.0859 848.1055 765.6582 846.1836 766.5322 c
844.2627 767.4058 841.9033 766.6196 Y
839.9814 766.3574 840.6797 763.8237 842.6895 765.0469 c
843.9648 765.8237 846.0801 765.2583 847.2139 763.6729 C
846.9219 762.582 845.7373 758.7534 843.2715 757.8564 C
843.3574 757.5947 844.2314 757.5947 v
844.9219 757.5947 846.9678 759.4985 847.9727 761.0747 C
847.9648 760.7261 847.9316 760.3647 847.8438 759.9795 c
846.8818 755.7861 843.0391 755.3496 841.7285 755.2617 c
840.418 755.1743 841.1172 754.126 Y
846.7959 752.8154 850.2021 758.145 849.7666 761.1157 c
f
793.0654 798.5078 m
791.0566 798.9453 790.3574 797.8091 v
789.6582 796.6733 789.2207 796.062 788.6094 795.7124 c
787.998 795.3628 787.2119 795.3628 y
787.4727 793.6157 788.085 793.5283 v
788.6973 793.4404 790.0957 793.79 790.5322 795.1006 c
790.9688 796.4111 791.8418 798.0713 793.0654 798.5078 c
f
881.3926 632.5127 m
884.0137 631.7266 884.9746 630.9395 v
885.9346 630.1533 887.2451 627.9707 886.9834 626.3105 c
885.7607 629.0195 884.7119 629.1934 v
883.6641 629.3672 882.7021 630.7656 882.1787 630.5908 c
881.6543 630.416 880.7813 631.5508 881.3926 632.5127 c
f
1 Ap
798.418 700.7871 m
795.4053 688.7739 789.5957 679.8799 785.4404 680.9214 c
781.2861 681.9629 780.3584 692.5459 783.3711 704.5586 c
786.3828 716.5718 792.1934 725.4663 796.3496 724.4238 c
800.5029 723.3823 801.4297 712.7998 798.418 700.7871 c
f
0 Ap
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
774.3105 716.3604 m
774.917 718.8862 773.7188 722.6362 771.0127 725.9326 c
767.3994 730.3311 762.4717 732.2549 760.0029 730.2285 c
757.5361 728.2026 758.4629 722.9937 762.0771 718.5947 c
765.3516 714.6069 769.7002 712.6641 772.3242 713.8438 C
796.0361 686.1421 L
797.207 685.9502 798.1836 686.7852 798.8633 687.6758 C
774.3105 716.3604 L
f
U
u
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
0 R
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 XA
3 w555.2554 659.6919 m
555.1831 661.8608 553.9663 666.1396 552.6709 670.1338 c
551.3726 674.125 550.001 677.7847 549.5962 678.6646 c
549.1431 679.6196 547.7905 680.7461 546.5342 681.6968 c
545.6348 682.3711 544.7969 682.9287 544.3882 683.1934 C
544.835 683.6948 545.8511 684.9536 546.0786 686.3779 C
546.0859 686.4785 L
546.0757 686.8364 545.8711 687.1997 545.5552 687.6733 c
544.4414 689.2998 541.7314 691.9966 539.2417 694.314 c
537.9985 695.4702 536.8115 696.5273 535.9131 697.2974 c
535.4639 697.6821 535.0864 697.9951 534.8076 698.2139 c
534.668 698.3242 534.5537 698.4102 534.4624 698.4727 C
534.3389 698.5508 L
534.2925 698.5698 534.2778 698.5967 534.1563 698.605 C
533.8452 698.605 533.0513 698.605 532.7285 698.605 C
531.4956 700.5786 L
531.4766 700.6055 L
531.3726 700.7334 531.1982 700.959 v
530.6743 701.6343 529.5244 703.1768 528.7529 704.626 c
528.3804 705.3257 527.8257 705.791 527.1929 706.0679 c
526.5591 706.3452 525.8501 706.4438 525.1367 706.4438 c
524.4526 706.4438 523.7676 706.3486 523.1289 706.2275 C
520.7568 709.3496 515.564 714.0518 510.918 718.02 c
507.2651 721.1377 503.9692 723.7832 502.6714 724.8149 C
504.7148 724.8149 L
507.4136 722.6836 509.8428 721.8823 511.9404 721.8828 c
514.6909 721.8838 516.834 723.2451 518.2793 724.6255 c
519.0024 725.3174 519.5547 726.0156 519.9287 726.5625 c
520.1162 726.8369 520.2588 727.0723 520.3564 727.2529 C
520.4712 727.4854 L
520.4956 727.5527 520.5156 727.5854 520.5244 727.6807 C
520.5259 727.6802 L
520.5186 727.6865 520.6201 727.8618 520.7754 728.0327 c
521.0088 728.3018 521.3521 728.6309 521.6343 728.8877 c
521.917 729.1455 522.1377 729.332 Y
523.3291 730.355 524.3677 731.3945 525.2881 732.4409 C
525.877 731.4736 526.666 730.5596 527.8799 729.9536 c
528.6528 729.5684 529.6514 729.4004 530.7725 729.3989 c
534.5566 729.4097 539.7788 731.3223 542.0972 734.3545 c
543.4678 736.1626 543.8291 738.3486 543.8296 740.1753 c
543.8291 742.3354 543.3228 744.0088 543.3184 744.0239 c
543.2837 744.1401 543.1743 744.2163 543.0532 744.21 c
542.9326 744.2031 542.832 744.1152 542.8105 743.9961 c
542.4346 742 541.6821 740.8701 540.8594 740.2261 c
540.0352 739.583 539.1167 739.4136 538.3721 739.4136 c
538.0615 739.4131 537.7993 739.4453 537.5752 739.4824 C
538.6318 740.2681 538.9678 741.2417 538.9609 742.0601 c
538.957 743.1279 538.4531 743.9331 538.4414 743.9551 C
538.3838 744.0483 538.2739 744.0962 538.166 744.0742 c
538.0581 744.0518 537.9766 743.9648 537.96 743.856 c
537.8672 743.2358 537.6572 742.7202 537.3823 742.3745 c
537.105 742.0278 536.7847 741.853 536.417 741.8516 c
536.0488 741.8506 535.5942 742.0366 535.084 742.5313 c
534.5757 743.0234 534.0234 743.8174 533.4761 744.9775 c
532.9463 746.1016 532.2539 746.8232 531.5078 747.2695 C
531.5283 747.6816 531.542 748.0874 531.542 748.4785 c
531.5415 752.4189 530.5728 755.2104 530.3745 755.7417 C
530.689 756.4653 530.7891 757.1245 530.7891 757.6445 c
530.7891 758.1069 530.7178 758.4434 530.6621 758.646 C
532.3711 759.7847 L
534.355 759.2886 L
534.6099 759.3638 L
534.668 759.623 L
534.6675 759.626 534.3389 760.6436 533.9106 761.7964 c
533.4775 762.9541 532.9658 764.2246 532.5317 764.811 c
532.1606 765.3018 531.5996 765.5493 531.0781 765.6836 c
530.6016 765.8057 530.1553 765.832 529.8677 765.8364 C
530.5381 771.8589 532.0679 775.8379 533.4355 778.3032 c
534.1309 779.5566 534.7842 780.4224 535.2598 780.9722 c
535.4976 781.2471 535.6914 781.4429 535.8242 781.5688 C
535.9224 781.6592 L
536.6401 781.4419 540.1201 780.4463 543.7075 780.4448 c
546.332 780.4468 549.0381 780.9756 550.731 782.8242 c
552.293 784.5376 553.0757 786.9272 553.0757 789.5469 c
553.0747 793.9839 550.8369 799.105 546.2476 802.8608 c
543.2378 805.3257 540.6665 806.0703 538.6816 806.0693 c
536.5908 806.0684 535.1812 805.2534 534.5757 804.8188 C
534.3135 805.8003 533.4663 808.4521 531.3701 811.3149 c
528.7358 814.9141 524.1113 818.8301 516.2441 820.0845 c
514.2158 820.4082 512.3965 820.5498 510.7656 820.5498 c
505.272 820.5513 501.9092 818.9399 499.9307 817.3105 c
498.3379 815.9995 497.6514 814.7002 497.4346 814.2212 C
497.0132 814.3047 496.5967 814.3501 496.1948 814.3501 c
494.2275 814.3477 492.5977 813.5176 492.188 813.293 C
490.0757 813.9912 487.7578 814.3364 485.4507 814.3364 c
481.8115 814.335 478.2002 813.4922 475.4741 811.8408 c
472.751 810.1953 470.9033 807.7036 470.9058 804.4722 c
470.9058 803.8325 470.9775 803.1655 471.1279 802.4717 c
471.998 798.4385 473.6709 796.1982 475.3594 794.9829 c
477.0474 793.7671 478.728 793.5825 479.5942 793.583 c
479.7158 793.583 479.8149 793.5869 479.9033 793.5923 C
479.9038 793.52 479.9043 793.4478 479.9043 793.376 c
479.9043 786.2651 478.5313 781.5176 477.0435 778.5571 c
476.2998 777.0771 475.5269 776.0439 474.8853 775.3872 c
474.5654 775.0591 474.2778 774.8252 474.0488 774.6782 c
473.8242 774.5283 473.6436 774.4771 473.6118 774.4824 C
473.4507 774.4766 473.1143 774.6074 472.7539 774.833 c
472.2065 775.1675 471.5771 775.686 471.0908 776.1187 c
470.6035 776.5513 470.2598 776.895 470.2588 776.8955 C
470.0034 776.9634 L
469.8193 776.7739 L
469.729 776.4131 469.6904 776.0342 469.6904 775.6484 c
469.6973 773.5703 470.7822 771.2578 471.228 770.3887 C
467.5586 770.084 465.4385 767.5972 465.418 767.5757 C
465.3398 767.4839 465.335 767.3491 465.4058 767.2515 c
465.4775 767.1533 465.6069 767.1177 465.7188 767.1641 c
466.0586 767.3057 466.3892 767.3594 466.7012 767.3594 c
467.0635 767.3599 467.3799 767.2783 467.6611 767.1831 C
466.8276 766.9941 466.0996 766.5479 465.543 766.1064 c
464.8154 765.5283 464.3711 764.9561 464.3628 764.9458 C
464.3457 764.6489 L
464.4023 764.5552 464.5107 764.5073 464.6177 764.5273 c
464.8994 764.5801 465.1807 764.603 465.4546 764.603 c
466.2773 764.6035 467.0435 764.396 467.6011 764.1865 c
467.6768 764.1582 467.7378 764.1313 467.8052 764.103 C
464.2178 763.3779 462.1577 761.2988 461.0513 759.0742 c
459.8579 756.6875 459.6982 754.1621 459.6968 752.9365 c
459.6968 752.749 459.7012 752.6021 459.7061 752.4805 C
454.7168 752.7236 L
452.1758 755.2842 448.5791 756.7495 445.5112 757.6646 c
443.9614 758.126 442.5459 758.4468 441.4731 758.6924 c
440.937 758.8154 440.4863 758.9194 440.1523 759.0117 c
439.8223 759.0972 439.5908 759.1973 439.5762 759.2197 C
439.1655 759.562 437.5352 760.7676 435.9922 761.9004 c
434.71 762.8418 433.5083 763.7168 433.1372 763.9863 C
433.21 764.4932 L
434.0024 764.3936 L
434.0391 764.3916 L
438.1626 764.457 440.9478 765.9268 442.6885 767.3848 c
444.4307 768.8433 445.1362 770.2827 445.1475 770.3047 C
445.1689 770.4722 L
444.8887 771.8535 444.3169 773.1973 443.562 774.4932 C
444.1001 774.4263 444.5928 774.3853 445.0029 774.3853 c
446.4653 774.3823 447.168 774.7485 447.4507 774.9619 C
448.1782 774.6475 451.3262 773.3472 454.0264 773.3418 c
454.9043 773.3423 455.7422 773.48 456.439 773.8589 c
457.0547 774.1943 457.4458 774.7271 457.6895 775.3262 C
457.854 775.3672 458.0181 775.4287 458.165 775.541 C
460.5552 777.3647 L
460.9248 777.646 461.106 778.0859 461.105 778.5347 c
461.1045 778.9312 460.9688 779.3423 460.6987 779.6953 C
459.7251 780.9707 L
462.0674 779.9443 L
462.3291 779.8296 462.6016 779.7739 462.8647 779.7739 c
463.4717 779.7725 464.0508 780.0747 464.2983 780.6343 C
465.5054 783.3877 L
465.5815 783.5605 465.6172 783.7441 465.6172 783.9253 c
465.6167 784.1704 465.5376 784.4048 465.4238 784.625 C
466.5225 785.9072 467.0215 787.6953 467.0229 789.3613 c
467.021 790.7837 466.6655 792.1226 465.9512 792.9961 c
465.4131 793.646 464.6587 793.9907 463.8564 794.1689 C
464.7998 794.5459 L
465.5015 794.8271 465.9648 795.4512 465.9678 796.1191 c
465.9688 796.2871 465.9375 796.457 465.8721 796.6196 C
464.7563 799.4111 L
464.5205 799.9985 463.9214 800.3213 463.2905 800.3198 c
463.0469 800.3198 462.7949 800.2725 462.5493 800.1743 C
461.1216 799.603 L
461.4502 800.5991 461.6846 801.5332 461.6865 802.2646 c
461.6885 803.5605 461.1357 804.667 460.2139 805.4277 c
459.292 806.1904 458.0122 806.6162 456.5493 806.6162 c
456.3364 806.6162 456.1187 806.6069 455.8984 806.5884 c
454.5142 806.4712 453.1772 805.75 452.0762 804.96 c
451.1318 804.2813 450.3813 803.5625 449.9209 803.0898 C
449.9595 804.0542 450.0229 805.7583 450.0229 806.5894 c
450.0225 807.188 449.9922 807.9648 449.5625 808.7178 c
449.1328 809.4727 448.3096 810.1699 446.8262 810.6396 c
446.2705 810.8169 445.7422 810.8965 445.2446 810.8965 c
443.0322 810.8926 441.5029 809.332 440.6265 807.9063 c
440.4302 807.5845 440.2646 807.1338 440.1104 806.604 C
439.7773 806.8877 439.3721 807.0435 438.9702 807.0444 c
438.6719 807.0449 438.373 806.9556 438.1245 806.7656 C
435.7344 804.9424 L
435.3662 804.6606 435.1841 804.2207 435.186 803.772 c
435.186 803.376 435.3218 802.9653 435.5918 802.6113 C
438.73 798.498 L
438.3906 798.0894 438.0786 797.6582 437.793 797.2095 C
433.8696 798.9297 L
433.6074 799.0444 433.3354 799.0996 433.0723 799.0996 c
432.4653 799.1011 431.8857 798.8003 431.6387 798.2393 C
430.4312 795.4873 L
430.3545 795.3115 430.3179 795.127 430.3179 794.9429 c
430.3213 794.292 430.7583 793.6763 431.4355 793.3779 C
435.8579 791.438 L
435.8325 791.1177 435.8096 790.7954 435.8096 790.4648 c
435.8096 790.1396 435.8325 789.8223 435.8574 789.5068 C
431.4897 787.7617 L
430.9106 787.5293 430.5146 787.0601 430.3862 786.5303 C
429.3574 787.1533 428.4531 787.6582 427.771 788.0107 c
427.3916 788.207 427.0786 788.3584 426.8442 788.4624 c
426.7271 788.5142 426.6294 788.5542 426.5488 788.583 c
426.4629 788.6113 426.4189 788.6328 426.3149 788.6372 C
426.2212 788.6191 L
426.2202 788.6226 L
426.2153 788.6206 426.2153 788.6191 426.2104 788.6172 C
426.2026 788.6157 L
426.2041 788.6138 L
426.125 788.5791 426.1045 788.5527 426.0664 788.522 C
425.9346 788.3989 425.73 788.1543 425.4365 787.7896 c
423.4092 785.2593 417.5752 777.2603 417.5732 777.2578 C
417.5015 777.1597 417.5063 777.0259 417.5859 776.9331 C
418.1597 776.2637 L
417.5615 775.9419 416.0908 775.1401 414.4717 774.1665 c
412.3643 772.895 410.0386 771.3682 409.0645 770.1938 c
407.2412 767.9761 405.2251 765.8379 404.6836 762.6001 c
404.6108 762.165 404.5796 761.7285 404.5796 761.3003 c
404.583 758.7236 405.6821 756.4331 405.8545 756.0854 C
405.8457 755.9717 405.8306 755.7358 405.8306 755.4272 c
405.8311 754.9971 405.8594 754.4375 405.9829 753.9023 c
406.1079 753.3691 406.3208 752.8462 406.751 752.5186 c
407.0781 752.2778 407.5635 752.127 408.1328 751.9976 c
409.6182 751.6689 411.6636 751.5732 412.1602 751.5532 C
412.9312 750.5835 414.2559 749.5117 415.8467 748.415 c
420.4639 745.2397 427.2227 741.9365 428.0669 741.5269 C
428.3735 740.8379 428.7031 739.4263 428.9458 737.5576 c
429.1997 735.6162 429.3696 733.1768 429.3696 730.4917 c
429.3701 725.5317 428.7891 719.7329 427.1025 714.6763 c
425.3735 709.4849 421.9502 704.6133 418.9551 700.9395 c
417.458 699.1016 416.0684 697.5635 415.0508 696.4287 c
414.5415 695.8604 414.126 695.394 413.832 695.0361 c
413.6851 694.8569 413.5688 694.7061 413.4834 694.5767 C
413.4019 694.4399 413.335 694.3545 413.3242 694.1777 C
413.3486 694.0508 L
413.4111 693.9028 413.5132 693.79 413.646 693.6567 c
414.1074 693.2046 414.9976 692.5977 415.7886 692.085 c
416.1523 691.8501 416.4897 691.6396 416.751 691.4795 C
415.7749 691.1865 413.6597 690.5513 411.4512 689.8789 c
408.4307 688.96 405.2686 687.9829 404.583 687.71 c
403.3198 687.2021 401.9966 686.2646 401.8115 686.1318 C
401.4893 686.0479 400.9785 685.8511 400.2798 685.5566 c
395.3022 683.4526 381.5366 676.5796 380.7505 676.187 C
380.5381 676.1572 379.54 675.9971 378.3809 675.4854 c
377.1055 674.9229 375.6304 673.9214 374.8608 672.1836 C
366.0464 666.7173 360.3701 658.8716 356.8955 652.2617 c
355.1533 648.9487 353.9644 645.9453 353.209 643.7031 c
352.8311 642.5811 352.5625 641.6504 352.3877 640.9648 c
352.2998 640.6221 352.2358 640.3418 352.1934 640.127 c
352.1509 639.9072 352.1284 639.7715 352.127 639.6631 C
352.1377 639.5674 L
352.1777 639.4268 352.2515 639.3281 352.3477 639.2021 c
352.6836 638.7793 353.3633 638.1631 353.9722 637.6338 c
354.3809 637.2793 354.7393 636.9814 354.9399 636.8164 C
354.793 636.5518 354.5044 636.0352 354.1641 635.458 c
353.6777 634.6289 353.0835 633.6777 352.7168 633.252 C
352.6865 633.208 352.5039 633.0938 352.2266 633.001 c
351.2476 632.6514 349.1626 632.334 347.1152 632.002 c
345.0581 631.6621 343.0459 631.3154 342.0527 630.8252 c
341.4326 630.5088 340.9868 629.8369 340.6167 629.0283 c
339.6099 626.7979 339.2251 623.3906 339.166 622.8389 C
338.9878 622.6318 338.4951 621.9736 338.4922 620.959 c
338.4922 620.5557 338.5737 620.1006 338.7837 619.6104 c
339.0215 619.0684 339.5947 618.4902 340.4131 617.8691 c
342.8652 616.0225 347.5537 613.9219 351.8613 613.8164 c
351.9888 613.8135 352.1172 613.8125 352.2466 613.8125 c
357.9404 613.8164 365.8306 616.5811 365.8452 616.583 C
365.9307 616.6328 L
370.8726 620.9414 L
371.126 620.7295 371.6328 620.3154 372.2051 619.8955 c
372.6113 619.5967 373.0469 619.2979 373.4482 619.0684 c
373.855 618.8418 374.2041 618.6729 374.5391 618.665 C
374.7134 618.668 374.9263 618.7188 375.2256 618.7988 c
377.2788 619.3604 382.8843 621.5645 382.8906 621.5664 C
383.0503 621.751 L
383.3589 623.0898 383.4839 624.3467 383.4839 625.5 c
383.4829 629.3604 382.0933 632.0693 381.5347 633.0029 C
386.0454 633.5596 386.8892 634.8125 386.9512 634.9111 C
386.9595 635.1279 L
386.9736 635.1328 L
386.9736 635.1338 L
386.9712 635.1465 386.9634 635.1973 386.9639 635.2979 c
386.9624 635.708 387.0825 636.9277 387.8975 640.0918 c
388.1748 641.1787 389.0571 642.8125 390.2246 644.6123 c
391.9756 647.3164 394.3633 650.4224 396.3115 652.8486 c
397.2856 654.062 398.1494 655.106 398.7705 655.8462 c
399.2539 656.4229 399.582 656.8062 399.707 656.9517 C
399.8389 656.9741 400.1108 657.0186 400.4561 657.0645 c
400.9404 657.1299 401.5557 657.1938 402.0591 657.1938 c
402.6567 657.1914 403.0928 657.4336 403.603 657.7988 c
404.1211 658.167 404.7603 658.6792 405.8613 659.3267 c
406.3857 659.6367 407.8169 660.2725 409.6436 661.0303 c
412.3887 662.1714 416.0532 663.6084 419.0791 664.7598 c
420.5918 665.335 421.9448 665.8389 422.9429 666.1987 c
423.4419 666.3784 423.8525 666.5225 424.1475 666.6206 c
424.2954 666.6689 424.4141 666.707 424.4985 666.731 C
424.5952 666.7568 L
424.6064 666.7593 L
424.6196 666.7603 424.7598 666.7373 424.939 666.6895 c
425.6123 666.5186 426.9878 666.0796 428.1855 665.6855 c
429.1245 665.376 429.9482 665.0972 430.2666 664.9893 C
430.3496 664.3184 430.7715 663.5596 431.1943 662.8989 c
431.6616 662.1807 432.1255 661.6187 432.1294 661.6143 C
432.3682 661.521 L
432.5728 661.6768 L
432.606 661.7886 432.9365 662.0933 433.3955 662.3765 c
434.0854 662.8154 435.061 663.2979 435.8594 663.666 c
436.5444 663.9814 437.0718 664.2031 437.2173 664.2637 C
441.6367 663.8608 448.5527 660.2256 454.5034 656.48 c
457.4951 654.6006 460.2505 652.6953 462.3467 651.1631 c
463.3945 650.3965 464.2778 649.7241 464.9424 649.1948 c
465.6045 648.6685 466.0566 648.2754 466.2109 648.1055 c
467.5044 646.7119 469.9185 646.0469 470.689 645.8584 C
470.2383 642.792 468.1514 638.3096 466.1406 634.5811 c
465.1108 632.6689 464.1055 630.9531 463.3584 629.7148 c
462.7305 628.6748 462.2905 627.9834 462.1631 627.7842 C
462.0244 627.7207 461.7183 627.5703 461.4038 627.3486 c
461.1934 627.1992 460.9785 627.0176 460.8076 626.7979 c
460.6382 626.5781 460.5073 626.3115 460.5068 626.0039 c
460.5151 625.665 460.6919 625.3047 460.9302 624.874 c
461.5288 623.8193 462.5859 622.4883 462.9336 622.0586 C
461.8306 620.5391 461.1587 617.7148 460.7236 615.1875 c
460.3154 612.7813 460.145 610.6963 460.1196 610.3652 C
459.9731 610.1387 459.4937 609.3242 459.4907 608.2119 c
459.4888 607.3662 459.7852 606.3555 460.7095 605.3799 c
461.917 604.1182 464.3945 603.3496 466.5918 602.8477 c
468.7876 602.3525 470.6953 602.1553 470.7017 602.1543 C
470.9097 602.2256 L
473.4082 604.6055 L
473.7305 603.9883 474.4834 602.5947 475.1162 601.8516 c
475.5503 601.3447 476.3955 600.6953 478.5171 600.0674 c
480.6426 599.4365 484.0635 598.8135 489.7095 598.3535 c
491.0498 598.2441 492.2954 598.1943 493.4497 598.1943 c
497.751 598.1953 500.7915 598.8896 502.792 599.833 c
504.7852 600.7803 505.7705 601.9707 505.8496 603.0537 c
505.8574 603.1836 505.8613 603.3086 505.8613 603.4316 c
505.8589 605.3203 504.9858 606.4971 504.8916 606.6191 C
504.8213 606.7549 504.0327 608.2666 502.4795 609.5625 c
500.7954 610.9443 498.1641 611.0586 496.1387 612.085 c
495.6787 612.3115 495.0977 612.873 494.521 613.585 c
493.6514 614.6533 492.7705 616.0547 492.1113 617.1855 c
491.7817 617.752 491.5063 618.251 491.314 618.6084 c
491.2632 618.7031 491.2183 618.7861 491.1797 618.8584 C
493.3262 619.1934 494.6406 620.9844 494.6602 621.001 C
494.6851 621.042 L
497.8613 627.6689 498.3774 636.8047 498.3799 642.1719 c
498.3799 644.4111 498.2896 645.9766 498.2588 646.4414 C
498.7104 646.7285 500.2402 647.7422 500.9639 648.9341 c
501.1816 649.3008 501.2573 649.7622 501.2588 650.2705 c
501.249 651.9717 500.3916 654.27 499.6353 655.2578 c
499.0879 655.9419 497.9233 656.4131 496.874 656.771 c
496.0146 657.0576 495.2461 657.2397 494.9922 657.2979 C
489.3213 664.8867 481.9414 672.9697 480.79 674.2227 C
480.8945 674.3345 481.0308 674.4922 481.1689 674.6865 c
481.4497 675.084 481.7446 675.6362 481.7471 676.2729 C
481.7354 676.4863 L
481.6704 677.0728 481.5391 678.4165 481.4248 679.6118 c
481.3218 680.6841 481.2324 681.6304 481.2153 681.8159 C
481.2568 682.0142 481.4736 683.0859 481.4746 684.1899 c
481.4717 684.8535 481.1958 685.6206 480.9292 686.2432 c
480.7378 686.6851 480.5518 687.04 480.457 687.2148 C
483.2529 693.6221 486.4604 698.5806 488.9741 701.937 c
490.2388 703.626 491.3271 704.9102 492.0986 705.771 c
492.4844 706.2012 492.7905 706.5264 493 706.7432 c
493.0781 706.8237 493.1279 706.8735 493.1782 706.9243 C
493.604 706.667 494.8315 705.9243 496.5366 704.8926 c
499.7246 702.9634 504.5254 700.0581 508.603 697.5854 c
512.6763 695.1152 516.042 693.0684 516.3193 692.8828 c
516.457 692.7959 516.7412 692.4829 517.0381 692.0869 c
517.4902 691.4902 518.0132 690.6919 518.4214 690.0459 c
518.7739 689.4873 519.0278 689.063 519.0938 688.9526 C
519.1201 688.7393 519.2271 687.9399 519.4731 687.1128 c
519.6177 686.6309 519.8071 686.1406 520.0693 685.7432 c
520.3286 685.3496 520.6816 685.0234 521.1592 684.9771 C
521.2368 684.9775 521.5239 684.8525 521.8696 684.6211 c
523.1074 683.812 525.3296 681.8135 527.2217 680.0293 c
528.1689 679.1362 529.0381 678.2949 529.6694 677.6772 c
529.8984 677.4536 530.0815 677.2729 530.2407 677.1157 C
528.1641 677.0244 526.1313 675.7266 524.5825 674.4414 c
523.2129 673.3008 522.2314 672.1724 521.9707 671.8628 C
521.4614 671.8281 519.375 671.6602 517.9365 671.0649 c
516.5146 670.4707 515.3032 668.9897 515.2993 667.1758 c
515.2993 666.8496 515.3389 666.5142 515.4243 666.1729 c
515.6831 665.1377 516.2207 664.001 517.2227 663.1196 c
518.2231 662.2383 519.6836 661.6289 521.7266 661.6304 c
521.937 661.6304 522.1543 661.6372 522.3774 661.6499 c
526.6201 661.8999 528.8672 663.8755 529.1699 664.1597 C
529.2451 664.1753 L
529.5278 664.2285 530.2178 664.3379 531.1182 664.3379 c
531.8691 664.3379 532.7661 664.2622 533.6968 664.0171 c
534.2334 663.8799 534.8945 663.3857 535.5464 662.7065 c
536.5288 661.6895 537.5044 660.2759 538.229 659.1206 c
538.5918 658.543 538.8921 658.0298 539.1016 657.6611 c
539.2109 657.4688 539.2939 657.3198 539.3491 657.2178 C
539.3271 657.189 539.3105 657.166 539.2808 657.1294 c
539.1226 656.9287 538.8682 656.6235 538.6006 656.3643 c
538.3398 656.103 538.042 655.897 537.9058 655.8779 C
537.814 655.8599 537.7183 655.8506 537.6206 655.8506 c
537.1309 655.8506 536.6182 656.0869 536.3467 656.5425 c
536.1792 656.8145 535.8843 657.0093 535.5195 657.1592 c
535.1543 657.3057 534.7129 657.3965 534.2446 657.3965 c
533.5928 657.3965 532.8833 657.2183 532.2891 656.7432 c
531.7896 656.3335 531.6162 655.626 531.6123 654.8267 c
531.6133 653.9053 531.8594 652.8301 532.2939 651.8545 c
532.7305 650.8809 533.3516 650.0024 534.1489 649.502 c
534.6816 649.1689 535.3018 649.0635 535.9272 649.0635 c
537.2979 649.0679 538.7759 649.5659 539.5913 649.5581 c
539.8135 649.5596 539.9697 649.52 540.0474 649.4668 c
540.1221 649.4126 540.166 649.3594 540.1855 649.1797 C
540.1899 649.0557 L
540.1963 648.248 539.6475 646.6982 539.041 645.2852 c
538.4351 643.8623 537.7837 642.5596 537.585 642.0957 c
537.4922 641.876 537.4443 641.6016 537.4434 641.292 c
537.4443 640.7324 537.6074 640.0537 538.0688 639.499 c
538.5303 638.9434 539.2969 638.541 540.4019 638.5439 c
540.8213 638.5449 541.291 638.5996 541.8164 638.7227 c
542.8354 638.9629 543.7515 639.6797 544.5747 640.5947 c
545.8081 641.9697 546.8384 643.8135 547.5928 645.3164 c
547.9219 645.9727 548.1934 646.5566 548.4072 647.0117 C
548.3701 646.1396 548.3076 644.8643 548.2446 643.5947 c
548.146 641.6084 548.0483 639.6533 548.0479 639.2402 c
548.0522 639.0088 548.1489 638.7734 548.3027 638.4971 c
548.5356 638.0889 548.915 637.624 549.4121 637.251 c
549.9092 636.8779 550.5313 636.5947 551.2354 636.5947 c
551.9443 636.5938 552.7158 636.8896 553.4697 637.6084 c
554.353 638.4707 554.7988 640.3672 555.0947 642.7676 c
555.3799 645.165 555.4668 648.0542 555.4668 650.811 c
555.4668 654.5283 555.3076 658.0068 555.2554 659.6919 c
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1 w555.2554 659.6919 m
555.1831 661.8608 553.9663 666.1396 552.6709 670.1338 c
551.3726 674.125 550.001 677.7847 549.5962 678.6646 c
549.1431 679.6196 547.7905 680.7461 546.5342 681.6968 c
545.6348 682.3711 544.7969 682.9287 544.3882 683.1934 C
544.835 683.6948 545.8511 684.9536 546.0786 686.3779 C
546.0859 686.4785 L
546.0757 686.8364 545.8711 687.1997 545.5552 687.6733 c
544.4414 689.2998 541.7314 691.9966 539.2417 694.314 c
537.9985 695.4702 536.8115 696.5273 535.9131 697.2974 c
535.4639 697.6821 535.0864 697.9951 534.8076 698.2139 c
534.668 698.3242 534.5537 698.4102 534.4624 698.4727 C
534.3389 698.5508 L
534.2925 698.5698 534.2778 698.5967 534.1563 698.605 C
533.8452 698.605 533.0513 698.605 532.7285 698.605 C
531.4956 700.5786 L
531.4766 700.6055 L
531.3726 700.7334 531.1982 700.959 v
530.6743 701.6343 529.5244 703.1768 528.7529 704.626 c
528.3804 705.3257 527.8257 705.791 527.1929 706.0679 c
526.5591 706.3452 525.8501 706.4438 525.1367 706.4438 c
524.4526 706.4438 523.7676 706.3486 523.1289 706.2275 C
520.7568 709.3496 515.564 714.0518 510.918 718.02 c
507.2651 721.1377 503.9692 723.7832 502.6714 724.8149 C
504.7148 724.8149 L
507.4136 722.6836 509.8428 721.8823 511.9404 721.8828 c
514.6909 721.8838 516.834 723.2451 518.2793 724.6255 c
519.0024 725.3174 519.5547 726.0156 519.9287 726.5625 c
520.1162 726.8369 520.2588 727.0723 520.3564 727.2529 C
520.4712 727.4854 L
520.4956 727.5527 520.5156 727.5854 520.5244 727.6807 C
520.5259 727.6802 L
520.5186 727.6865 520.6201 727.8618 520.7754 728.0327 c
521.0088 728.3018 521.3521 728.6309 521.6343 728.8877 c
521.917 729.1455 522.1377 729.332 Y
523.3291 730.355 524.3677 731.3945 525.2881 732.4409 C
525.877 731.4736 526.666 730.5596 527.8799 729.9536 c
528.6528 729.5684 529.6514 729.4004 530.7725 729.3989 c
534.5566 729.4097 539.7788 731.3223 542.0972 734.3545 c
543.4678 736.1626 543.8291 738.3486 543.8296 740.1753 c
543.8291 742.3354 543.3228 744.0088 543.3184 744.0239 c
543.2837 744.1401 543.1743 744.2163 543.0532 744.21 c
542.9326 744.2031 542.832 744.1152 542.8105 743.9961 c
542.4346 742 541.6821 740.8701 540.8594 740.2261 c
540.0352 739.583 539.1167 739.4136 538.3721 739.4136 c
538.0615 739.4131 537.7993 739.4453 537.5752 739.4824 C
538.6318 740.2681 538.9678 741.2417 538.9609 742.0601 c
538.957 743.1279 538.4531 743.9331 538.4414 743.9551 C
538.3838 744.0483 538.2739 744.0962 538.166 744.0742 c
538.0581 744.0518 537.9766 743.9648 537.96 743.856 c
537.8672 743.2358 537.6572 742.7202 537.3823 742.3745 c
537.105 742.0278 536.7847 741.853 536.417 741.8516 c
536.0488 741.8506 535.5942 742.0366 535.084 742.5313 c
534.5757 743.0234 534.0234 743.8174 533.4761 744.9775 c
532.9463 746.1016 532.2539 746.8232 531.5078 747.2695 C
531.5283 747.6816 531.542 748.0874 531.542 748.4785 c
531.5415 752.4189 530.5728 755.2104 530.3745 755.7417 C
530.689 756.4653 530.7891 757.1245 530.7891 757.6445 c
530.7891 758.1069 530.7178 758.4434 530.6621 758.646 C
532.3711 759.7847 L
534.355 759.2886 L
534.6099 759.3638 L
534.668 759.623 L
534.6675 759.626 534.3389 760.6436 533.9106 761.7964 c
533.4775 762.9541 532.9658 764.2246 532.5317 764.811 c
532.1606 765.3018 531.5996 765.5493 531.0781 765.6836 c
530.6016 765.8057 530.1553 765.832 529.8677 765.8364 C
530.5381 771.8589 532.0679 775.8379 533.4355 778.3032 c
534.1309 779.5566 534.7842 780.4224 535.2598 780.9722 c
535.4976 781.2471 535.6914 781.4429 535.8242 781.5688 C
535.9224 781.6592 L
536.6401 781.4419 540.1201 780.4463 543.7075 780.4448 c
546.332 780.4468 549.0381 780.9756 550.731 782.8242 c
552.293 784.5376 553.0757 786.9272 553.0757 789.5469 c
553.0747 793.9839 550.8369 799.105 546.2476 802.8608 c
543.2378 805.3257 540.6665 806.0703 538.6816 806.0693 c
536.5908 806.0684 535.1812 805.2534 534.5757 804.8188 C
534.3135 805.8003 533.4663 808.4521 531.3701 811.3149 c
528.7358 814.9141 524.1113 818.8301 516.2441 820.0845 c
514.2158 820.4082 512.3965 820.5498 510.7656 820.5498 c
505.272 820.5513 501.9092 818.9399 499.9307 817.3105 c
498.3379 815.9995 497.6514 814.7002 497.4346 814.2212 C
497.0132 814.3047 496.5967 814.3501 496.1948 814.3501 c
494.2275 814.3477 492.5977 813.5176 492.188 813.293 C
490.0757 813.9912 487.7578 814.3364 485.4507 814.3364 c
481.8115 814.335 478.2002 813.4922 475.4741 811.8408 c
472.751 810.1953 470.9033 807.7036 470.9058 804.4722 c
470.9058 803.8325 470.9775 803.1655 471.1279 802.4717 c
471.998 798.4385 473.6709 796.1982 475.3594 794.9829 c
477.0474 793.7671 478.728 793.5825 479.5942 793.583 c
479.7158 793.583 479.8149 793.5869 479.9033 793.5923 C
479.9038 793.52 479.9043 793.4478 479.9043 793.376 c
479.9043 786.2651 478.5313 781.5176 477.0435 778.5571 c
476.2998 777.0771 475.5269 776.0439 474.8853 775.3872 c
474.5654 775.0591 474.2778 774.8252 474.0488 774.6782 c
473.8242 774.5283 473.6436 774.4771 473.6118 774.4824 C
473.4507 774.4766 473.1143 774.6074 472.7539 774.833 c
472.2065 775.1675 471.5771 775.686 471.0908 776.1187 c
470.6035 776.5513 470.2598 776.895 470.2588 776.8955 C
470.0034 776.9634 L
469.8193 776.7739 L
469.729 776.4131 469.6904 776.0342 469.6904 775.6484 c
469.6973 773.5703 470.7822 771.2578 471.228 770.3887 C
467.5586 770.084 465.4385 767.5972 465.418 767.5757 C
465.3398 767.4839 465.335 767.3491 465.4058 767.2515 c
465.4775 767.1533 465.6069 767.1177 465.7188 767.1641 c
466.0586 767.3057 466.3892 767.3594 466.7012 767.3594 c
467.0635 767.3599 467.3799 767.2783 467.6611 767.1831 C
466.8276 766.9941 466.0996 766.5479 465.543 766.1064 c
464.8154 765.5283 464.3711 764.9561 464.3628 764.9458 C
464.3457 764.6489 L
464.4023 764.5552 464.5107 764.5073 464.6177 764.5273 c
464.8994 764.5801 465.1807 764.603 465.4546 764.603 c
466.2773 764.6035 467.0435 764.396 467.6011 764.1865 c
467.6768 764.1582 467.7378 764.1313 467.8052 764.103 C
464.2178 763.3779 462.1577 761.2988 461.0513 759.0742 c
459.8579 756.6875 459.6982 754.1621 459.6968 752.9365 c
459.6968 752.749 459.7012 752.6021 459.7061 752.4805 C
454.7168 752.7236 L
452.1758 755.2842 448.5791 756.7495 445.5112 757.6646 c
443.9614 758.126 442.5459 758.4468 441.4731 758.6924 c
440.937 758.8154 440.4863 758.9194 440.1523 759.0117 c
439.8223 759.0972 439.5908 759.1973 439.5762 759.2197 C
439.1655 759.562 437.5352 760.7676 435.9922 761.9004 c
434.71 762.8418 433.5083 763.7168 433.1372 763.9863 C
433.21 764.4932 L
434.0024 764.3936 L
434.0391 764.3916 L
438.1626 764.457 440.9478 765.9268 442.6885 767.3848 c
444.4307 768.8433 445.1362 770.2827 445.1475 770.3047 C
445.1689 770.4722 L
444.8887 771.8535 444.3169 773.1973 443.562 774.4932 C
444.1001 774.4263 444.5928 774.3853 445.0029 774.3853 c
446.4653 774.3823 447.168 774.7485 447.4507 774.9619 C
448.1782 774.6475 451.3262 773.3472 454.0264 773.3418 c
454.9043 773.3423 455.7422 773.48 456.439 773.8589 c
457.0547 774.1943 457.4458 774.7271 457.6895 775.3262 C
457.854 775.3672 458.0181 775.4287 458.165 775.541 C
460.5552 777.3647 L
460.9248 777.646 461.106 778.0859 461.105 778.5347 c
461.1045 778.9312 460.9688 779.3423 460.6987 779.6953 C
459.7251 780.9707 L
462.0674 779.9443 L
462.3291 779.8296 462.6016 779.7739 462.8647 779.7739 c
463.4717 779.7725 464.0508 780.0747 464.2983 780.6343 C
465.5054 783.3877 L
465.5815 783.5605 465.6172 783.7441 465.6172 783.9253 c
465.6167 784.1704 465.5376 784.4048 465.4238 784.625 C
466.5225 785.9072 467.0215 787.6953 467.0229 789.3613 c
467.021 790.7837 466.6655 792.1226 465.9512 792.9961 c
465.4131 793.646 464.6587 793.9907 463.8564 794.1689 C
464.7998 794.5459 L
465.5015 794.8271 465.9648 795.4512 465.9678 796.1191 c
465.9688 796.2871 465.9375 796.457 465.8721 796.6196 C
464.7563 799.4111 L
464.5205 799.9985 463.9214 800.3213 463.2905 800.3198 c
463.0469 800.3198 462.7949 800.2725 462.5493 800.1743 C
461.1216 799.603 L
461.4502 800.5991 461.6846 801.5332 461.6865 802.2646 c
461.6885 803.5605 461.1357 804.667 460.2139 805.4277 c
459.292 806.1904 458.0122 806.6162 456.5493 806.6162 c
456.3364 806.6162 456.1187 806.6069 455.8984 806.5884 c
454.5142 806.4712 453.1772 805.75 452.0762 804.96 c
451.1318 804.2813 450.3813 803.5625 449.9209 803.0898 C
449.9595 804.0542 450.0229 805.7583 450.0229 806.5894 c
450.0225 807.188 449.9922 807.9648 449.5625 808.7178 c
449.1328 809.4727 448.3096 810.1699 446.8262 810.6396 c
446.2705 810.8169 445.7422 810.8965 445.2446 810.8965 c
443.0322 810.8926 441.5029 809.332 440.6265 807.9063 c
440.4302 807.5845 440.2646 807.1338 440.1104 806.604 C
439.7773 806.8877 439.3721 807.0435 438.9702 807.0444 c
438.6719 807.0449 438.373 806.9556 438.1245 806.7656 C
435.7344 804.9424 L
435.3662 804.6606 435.1841 804.2207 435.186 803.772 c
435.186 803.376 435.3218 802.9653 435.5918 802.6113 C
438.73 798.498 L
438.3906 798.0894 438.0786 797.6582 437.793 797.2095 C
433.8696 798.9297 L
433.6074 799.0444 433.3354 799.0996 433.0723 799.0996 c
432.4653 799.1011 431.8857 798.8003 431.6387 798.2393 C
430.4312 795.4873 L
430.3545 795.3115 430.3179 795.127 430.3179 794.9429 c
430.3213 794.292 430.7583 793.6763 431.4355 793.3779 C
435.8579 791.438 L
435.8325 791.1177 435.8096 790.7954 435.8096 790.4648 c
435.8096 790.1396 435.8325 789.8223 435.8574 789.5068 C
431.4897 787.7617 L
430.9106 787.5293 430.5146 787.0601 430.3862 786.5303 C
429.3574 787.1533 428.4531 787.6582 427.771 788.0107 c
427.3916 788.207 427.0786 788.3584 426.8442 788.4624 c
426.7271 788.5142 426.6294 788.5542 426.5488 788.583 c
426.4629 788.6113 426.4189 788.6328 426.3149 788.6372 C
426.2212 788.6191 L
426.2202 788.6226 L
426.2153 788.6206 426.2153 788.6191 426.2104 788.6172 C
426.2026 788.6157 L
426.2041 788.6138 L
426.125 788.5791 426.1045 788.5527 426.0664 788.522 C
425.9346 788.3989 425.73 788.1543 425.4365 787.7896 c
423.4092 785.2593 417.5752 777.2603 417.5732 777.2578 C
417.5015 777.1597 417.5063 777.0259 417.5859 776.9331 C
418.1597 776.2637 L
417.5615 775.9419 416.0908 775.1401 414.4717 774.1665 c
412.3643 772.895 410.0386 771.3682 409.0645 770.1938 c
407.2412 767.9761 405.2251 765.8379 404.6836 762.6001 c
404.6108 762.165 404.5796 761.7285 404.5796 761.3003 c
404.583 758.7236 405.6821 756.4331 405.8545 756.0854 C
405.8457 755.9717 405.8306 755.7358 405.8306 755.4272 c
405.8311 754.9971 405.8594 754.4375 405.9829 753.9023 c
406.1079 753.3691 406.3208 752.8462 406.751 752.5186 c
407.0781 752.2778 407.5635 752.127 408.1328 751.9976 c
409.6182 751.6689 411.6636 751.5732 412.1602 751.5532 C
412.9312 750.5835 414.2559 749.5117 415.8467 748.415 c
420.4639 745.2397 427.2227 741.9365 428.0669 741.5269 C
428.3735 740.8379 428.7031 739.4263 428.9458 737.5576 c
429.1997 735.6162 429.3696 733.1768 429.3696 730.4917 c
429.3701 725.5317 428.7891 719.7329 427.1025 714.6763 c
425.3735 709.4849 421.9502 704.6133 418.9551 700.9395 c
417.458 699.1016 416.0684 697.5635 415.0508 696.4287 c
414.5415 695.8604 414.126 695.394 413.832 695.0361 c
413.6851 694.8569 413.5688 694.7061 413.4834 694.5767 C
413.4019 694.4399 413.335 694.3545 413.3242 694.1777 C
413.3486 694.0508 L
413.4111 693.9028 413.5132 693.79 413.646 693.6567 c
414.1074 693.2046 414.9976 692.5977 415.7886 692.085 c
416.1523 691.8501 416.4897 691.6396 416.751 691.4795 C
415.7749 691.1865 413.6597 690.5513 411.4512 689.8789 c
408.4307 688.96 405.2686 687.9829 404.583 687.71 c
403.3198 687.2021 401.9966 686.2646 401.8115 686.1318 C
401.4893 686.0479 400.9785 685.8511 400.2798 685.5566 c
395.3022 683.4526 381.5366 676.5796 380.7505 676.187 C
380.5381 676.1572 379.54 675.9971 378.3809 675.4854 c
377.1055 674.9229 375.6304 673.9214 374.8608 672.1836 C
366.0464 666.7173 360.3701 658.8716 356.8955 652.2617 c
355.1533 648.9487 353.9644 645.9453 353.209 643.7031 c
352.8311 642.5811 352.5625 641.6504 352.3877 640.9648 c
352.2998 640.6221 352.2358 640.3418 352.1934 640.127 c
352.1509 639.9072 352.1284 639.7715 352.127 639.6631 C
352.1377 639.5674 L
352.1777 639.4268 352.2515 639.3281 352.3477 639.2021 c
352.6836 638.7793 353.3633 638.1631 353.9722 637.6338 c
354.3809 637.2793 354.7393 636.9814 354.9399 636.8164 C
354.793 636.5518 354.5044 636.0352 354.1641 635.458 c
353.6777 634.6289 353.0835 633.6777 352.7168 633.252 C
352.6865 633.208 352.5039 633.0938 352.2266 633.001 c
351.2476 632.6514 349.1626 632.334 347.1152 632.002 c
345.0581 631.6621 343.0459 631.3154 342.0527 630.8252 c
341.4326 630.5088 340.9868 629.8369 340.6167 629.0283 c
339.6099 626.7979 339.2251 623.3906 339.166 622.8389 C
338.9878 622.6318 338.4951 621.9736 338.4922 620.959 c
338.4922 620.5557 338.5737 620.1006 338.7837 619.6104 c
339.0215 619.0684 339.5947 618.4902 340.4131 617.8691 c
342.8652 616.0225 347.5537 613.9219 351.8613 613.8164 c
351.9888 613.8135 352.1172 613.8125 352.2466 613.8125 c
357.9404 613.8164 365.8306 616.5811 365.8452 616.583 C
365.9307 616.6328 L
370.8726 620.9414 L
371.126 620.7295 371.6328 620.3154 372.2051 619.8955 c
372.6113 619.5967 373.0469 619.2979 373.4482 619.0684 c
373.855 618.8418 374.2041 618.6729 374.5391 618.665 C
374.7134 618.668 374.9263 618.7188 375.2256 618.7988 c
377.2788 619.3604 382.8843 621.5645 382.8906 621.5664 C
383.0503 621.751 L
383.3589 623.0898 383.4839 624.3467 383.4839 625.5 c
383.4829 629.3604 382.0933 632.0693 381.5347 633.0029 C
386.0454 633.5596 386.8892 634.8125 386.9512 634.9111 C
386.9595 635.1279 L
386.9736 635.1328 L
386.9736 635.1338 L
386.9712 635.1465 386.9634 635.1973 386.9639 635.2979 c
386.9624 635.708 387.0825 636.9277 387.8975 640.0918 c
388.1748 641.1787 389.0571 642.8125 390.2246 644.6123 c
391.9756 647.3164 394.3633 650.4224 396.3115 652.8486 c
397.2856 654.062 398.1494 655.106 398.7705 655.8462 c
399.2539 656.4229 399.582 656.8062 399.707 656.9517 C
399.8389 656.9741 400.1108 657.0186 400.4561 657.0645 c
400.9404 657.1299 401.5557 657.1938 402.0591 657.1938 c
402.6567 657.1914 403.0928 657.4336 403.603 657.7988 c
404.1211 658.167 404.7603 658.6792 405.8613 659.3267 c
406.3857 659.6367 407.8169 660.2725 409.6436 661.0303 c
412.3887 662.1714 416.0532 663.6084 419.0791 664.7598 c
420.5918 665.335 421.9448 665.8389 422.9429 666.1987 c
423.4419 666.3784 423.8525 666.5225 424.1475 666.6206 c
424.2954 666.6689 424.4141 666.707 424.4985 666.731 C
424.5952 666.7568 L
424.6064 666.7593 L
424.6196 666.7603 424.7598 666.7373 424.939 666.6895 c
425.6123 666.5186 426.9878 666.0796 428.1855 665.6855 c
429.1245 665.376 429.9482 665.0972 430.2666 664.9893 C
430.3496 664.3184 430.7715 663.5596 431.1943 662.8989 c
431.6616 662.1807 432.1255 661.6187 432.1294 661.6143 C
432.3682 661.521 L
432.5728 661.6768 L
432.606 661.7886 432.9365 662.0933 433.3955 662.3765 c
434.0854 662.8154 435.061 663.2979 435.8594 663.666 c
436.5444 663.9814 437.0718 664.2031 437.2173 664.2637 C
441.6367 663.8608 448.5527 660.2256 454.5034 656.48 c
457.4951 654.6006 460.2505 652.6953 462.3467 651.1631 c
463.3945 650.3965 464.2778 649.7241 464.9424 649.1948 c
465.6045 648.6685 466.0566 648.2754 466.2109 648.1055 c
467.5044 646.7119 469.9185 646.0469 470.689 645.8584 C
470.2383 642.792 468.1514 638.3096 466.1406 634.5811 c
465.1108 632.6689 464.1055 630.9531 463.3584 629.7148 c
462.7305 628.6748 462.2905 627.9834 462.1631 627.7842 C
462.0244 627.7207 461.7183 627.5703 461.4038 627.3486 c
461.1934 627.1992 460.9785 627.0176 460.8076 626.7979 c
460.6382 626.5781 460.5073 626.3115 460.5068 626.0039 c
460.5151 625.665 460.6919 625.3047 460.9302 624.874 c
461.5288 623.8193 462.5859 622.4883 462.9336 622.0586 C
461.8306 620.5391 461.1587 617.7148 460.7236 615.1875 c
460.3154 612.7813 460.145 610.6963 460.1196 610.3652 C
459.9731 610.1387 459.4937 609.3242 459.4907 608.2119 c
459.4888 607.3662 459.7852 606.3555 460.7095 605.3799 c
461.917 604.1182 464.3945 603.3496 466.5918 602.8477 c
468.7876 602.3525 470.6953 602.1553 470.7017 602.1543 C
470.9097 602.2256 L
473.4082 604.6055 L
473.7305 603.9883 474.4834 602.5947 475.1162 601.8516 c
475.5503 601.3447 476.3955 600.6953 478.5171 600.0674 c
480.6426 599.4365 484.0635 598.8135 489.7095 598.3535 c
491.0498 598.2441 492.2954 598.1943 493.4497 598.1943 c
497.751 598.1953 500.7915 598.8896 502.792 599.833 c
504.7852 600.7803 505.7705 601.9707 505.8496 603.0537 c
505.8574 603.1836 505.8613 603.3086 505.8613 603.4316 c
505.8589 605.3203 504.9858 606.4971 504.8916 606.6191 C
504.8213 606.7549 504.0327 608.2666 502.4795 609.5625 c
500.7954 610.9443 498.1641 611.0586 496.1387 612.085 c
495.6787 612.3115 495.0977 612.873 494.521 613.585 c
493.6514 614.6533 492.7705 616.0547 492.1113 617.1855 c
491.7817 617.752 491.5063 618.251 491.314 618.6084 c
491.2632 618.7031 491.2183 618.7861 491.1797 618.8584 C
493.3262 619.1934 494.6406 620.9844 494.6602 621.001 C
494.6851 621.042 L
497.8613 627.6689 498.3774 636.8047 498.3799 642.1719 c
498.3799 644.4111 498.2896 645.9766 498.2588 646.4414 C
498.7104 646.7285 500.2402 647.7422 500.9639 648.9341 c
501.1816 649.3008 501.2573 649.7622 501.2588 650.2705 c
501.249 651.9717 500.3916 654.27 499.6353 655.2578 c
499.0879 655.9419 497.9233 656.4131 496.874 656.771 c
496.0146 657.0576 495.2461 657.2397 494.9922 657.2979 C
489.3213 664.8867 481.9414 672.9697 480.79 674.2227 C
480.8945 674.3345 481.0308 674.4922 481.1689 674.6865 c
481.4497 675.084 481.7446 675.6362 481.7471 676.2729 C
481.7354 676.4863 L
481.6704 677.0728 481.5391 678.4165 481.4248 679.6118 c
481.3218 680.6841 481.2324 681.6304 481.2153 681.8159 C
481.2568 682.0142 481.4736 683.0859 481.4746 684.1899 c
481.4717 684.8535 481.1958 685.6206 480.9292 686.2432 c
480.7378 686.6851 480.5518 687.04 480.457 687.2148 C
483.2529 693.6221 486.4604 698.5806 488.9741 701.937 c
490.2388 703.626 491.3271 704.9102 492.0986 705.771 c
492.4844 706.2012 492.7905 706.5264 493 706.7432 c
493.0781 706.8237 493.1279 706.8735 493.1782 706.9243 C
493.604 706.667 494.8315 705.9243 496.5366 704.8926 c
499.7246 702.9634 504.5254 700.0581 508.603 697.5854 c
512.6763 695.1152 516.042 693.0684 516.3193 692.8828 c
516.457 692.7959 516.7412 692.4829 517.0381 692.0869 c
517.4902 691.4902 518.0132 690.6919 518.4214 690.0459 c
518.7739 689.4873 519.0278 689.063 519.0938 688.9526 C
519.1201 688.7393 519.2271 687.9399 519.4731 687.1128 c
519.6177 686.6309 519.8071 686.1406 520.0693 685.7432 c
520.3286 685.3496 520.6816 685.0234 521.1592 684.9771 C
521.2368 684.9775 521.5239 684.8525 521.8696 684.6211 c
523.1074 683.812 525.3296 681.8135 527.2217 680.0293 c
528.1689 679.1362 529.0381 678.2949 529.6694 677.6772 c
529.8984 677.4536 530.0815 677.2729 530.2407 677.1157 C
528.1641 677.0244 526.1313 675.7266 524.5825 674.4414 c
523.2129 673.3008 522.2314 672.1724 521.9707 671.8628 C
521.4614 671.8281 519.375 671.6602 517.9365 671.0649 c
516.5146 670.4707 515.3032 668.9897 515.2993 667.1758 c
515.2993 666.8496 515.3389 666.5142 515.4243 666.1729 c
515.6831 665.1377 516.2207 664.001 517.2227 663.1196 c
518.2231 662.2383 519.6836 661.6289 521.7266 661.6304 c
521.937 661.6304 522.1543 661.6372 522.3774 661.6499 c
526.6201 661.8999 528.8672 663.8755 529.1699 664.1597 C
529.2451 664.1753 L
529.5278 664.2285 530.2178 664.3379 531.1182 664.3379 c
531.8691 664.3379 532.7661 664.2622 533.6968 664.0171 c
534.2334 663.8799 534.8945 663.3857 535.5464 662.7065 c
536.5288 661.6895 537.5044 660.2759 538.229 659.1206 c
538.5918 658.543 538.8921 658.0298 539.1016 657.6611 c
539.2109 657.4688 539.2939 657.3198 539.3491 657.2178 C
539.3271 657.189 539.3105 657.166 539.2808 657.1294 c
539.1226 656.9287 538.8682 656.6235 538.6006 656.3643 c
538.3398 656.103 538.042 655.897 537.9058 655.8779 C
537.814 655.8599 537.7183 655.8506 537.6206 655.8506 c
537.1309 655.8506 536.6182 656.0869 536.3467 656.5425 c
536.1792 656.8145 535.8843 657.0093 535.5195 657.1592 c
535.1543 657.3057 534.7129 657.3965 534.2446 657.3965 c
533.5928 657.3965 532.8833 657.2183 532.2891 656.7432 c
531.7896 656.3335 531.6162 655.626 531.6123 654.8267 c
531.6133 653.9053 531.8594 652.8301 532.2939 651.8545 c
532.7305 650.8809 533.3516 650.0024 534.1489 649.502 c
534.6816 649.1689 535.3018 649.0635 535.9272 649.0635 c
537.2979 649.0679 538.7759 649.5659 539.5913 649.5581 c
539.8135 649.5596 539.9697 649.52 540.0474 649.4668 c
540.1221 649.4126 540.166 649.3594 540.1855 649.1797 C
540.1899 649.0557 L
540.1963 648.248 539.6475 646.6982 539.041 645.2852 c
538.4351 643.8623 537.7837 642.5596 537.585 642.0957 c
537.4922 641.876 537.4443 641.6016 537.4434 641.292 c
537.4443 640.7324 537.6074 640.0537 538.0688 639.499 c
538.5303 638.9434 539.2969 638.541 540.4019 638.5439 c
540.8213 638.5449 541.291 638.5996 541.8164 638.7227 c
542.8354 638.9629 543.7515 639.6797 544.5747 640.5947 c
545.8081 641.9697 546.8384 643.8135 547.5928 645.3164 c
547.9219 645.9727 548.1934 646.5566 548.4072 647.0117 C
548.3701 646.1396 548.3076 644.8643 548.2446 643.5947 c
548.146 641.6084 548.0483 639.6533 548.0479 639.2402 c
548.0522 639.0088 548.1489 638.7734 548.3027 638.4971 c
548.5356 638.0889 548.915 637.624 549.4121 637.251 c
549.9092 636.8779 550.5313 636.5947 551.2354 636.5947 c
551.9443 636.5938 552.7158 636.8896 553.4697 637.6084 c
554.353 638.4707 554.7988 640.3672 555.0947 642.7676 c
555.3799 645.165 555.4668 648.0542 555.4668 650.811 c
555.4668 654.5283 555.3076 658.0068 555.2554 659.6919 c
f
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
493.269 800.6924 m
482.7935 794.5098 478.687 795.8213 v
475.8047 796.7417 472.3013 801.7407 473.481 806.3271 c
474.6602 810.9141 484.0957 814.5835 494.1865 810.521 c
493.9243 811.8315 l
496.6763 812.6177 l
496.2832 809.9966 l
501.5254 818.3838 509.3882 818.7769 v
517.251 819.1704 530.356 816.6802 534.0254 800.6924 c
534.9429 801.6094 535.3359 802.5269 v
535.729 803.4443 539.0054 804.624 541.1021 803.7065 c
543.1987 802.7891 550.9307 795.8438 550.9307 788.8979 c
550.9307 781.9521 543.5918 781.166 536.7773 783.394 c
539.0054 786.4082 l
526.9487 784.4424 519.3477 794.9263 v
519.8721 796.1055 520.2651 797.0229 v
504.8013 790.4707 497.3315 800.9546 v
498.5112 789.9463 517.251 794.0088 v
523.1484 783.1318 535.2051 784.8354 v
529.5698 777.8896 527.9971 766.6196 v
513.4507 781.166 502.7046 783.2627 v
491.9585 785.3594 477.8052 775.0068 y
483.5718 784.9663 481.7368 794.0088 v
491.9585 796.6299 493.269 800.6924 v
f
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
482.6543 775.9238 m
495.6279 783.394 503.0977 781.2969 v
510.5674 779.2002 523.1484 768.7163 y
526.4248 765.7021 l
527.2109 764.7852 526.5557 764.3916 v
525.9004 763.9985 525.376 763.3433 525.376 762.8193 c
525.376 762.2949 525.2451 760.9844 y
522.8862 760.4604 522.3623 760.4604 v
521.8379 760.4604 521.0518 762.0327 521.3135 763.2124 c
521.5757 764.3916 522.3623 766.0952 y
520.1343 765.7021 519.8721 765.0469 v
519.6099 764.3916 516.9893 762.9502 517.5132 762.688 c
518.0376 762.4258 518.9546 763.0811 519.6099 762.0327 c
520.2651 760.9844 519.3477 759.2808 y
521.3135 759.2808 521.8379 758.6255 v
522.3623 757.9702 522.4932 757.1841 y
524.3276 757.3149 525.376 756.3979 v
526.4248 755.4805 526.1626 754.563 y
528.1279 754.3008 528.7832 752.9902 v
529.4385 751.6802 527.7349 748.9277 525.9004 748.666 c
524.0654 748.4038 523.4102 748.4038 y
522.1001 746.7002 521.0518 746.8311 v
520.0029 746.9624 519.8721 749.7144 518.1685 750.2383 c
516.4648 750.7627 514.3682 750.7627 514.2368 752.9902 c
514.106 755.2183 515.5474 756.0049 517.3823 755.3496 c
513.3198 758.1016 512.2715 753.7769 v
504.1465 757.4463 499.5596 750.7627 v
501.1318 751.0249 l
501.001 746.5693 496.5454 746.1758 v
492.0898 745.7827 490.7793 753.3838 495.3662 755.7427 c
487.1099 756.6597 487.896 748.4038 v
485.144 747.6177 484.0957 749.7144 v
483.7026 741.458 492.4829 740.2788 v
501.2632 739.0991 507.5537 740.4097 y
508.209 735.2988 l
505.981 733.7266 506.2432 733.2021 v
506.5049 732.6777 514.2368 735.9541 518.1685 736.4785 c
522.1001 737.0024 521.707 734.2505 521.5757 732.9399 c
522.8862 736.3472 l
524.0654 733.8574 523.6724 733.2021 v
523.2793 732.5469 519.7412 730.0571 y
515.9404 723.8975 511.354 723.7666 v
506.7671 723.6357 502.0493 730.188 501.5254 731.1055 c
501.7427 728.4844 503.229 726.6494 v
495.2349 725.7324 490.5171 728.6152 v
491.8276 726.6494 493.4004 725.7324 v
480.8193 724.6841 478.7227 725.8633 v
476.626 727.043 467.7148 738.8374 467.4526 742.6377 c
467.1904 746.438 467.8457 747.2241 y
462.7349 747.3555 461.6865 752.4663 v
460.6382 757.5771 465.8799 763.6055 471.646 761.9019 C
474.5293 760.4604 473.874 757.4463 472.8257 755.7427 c
478.854 761.2466 480.2954 761.9019 v
481.7368 762.5571 483.0474 762.5571 y
480.5576 765.4399 l
485.7993 765.1782 l
482.2612 768.3232 l
485.7993 769.2407 l
482.3921 773.6963 482.6543 775.9238 v
f
513.4507 742.6377 m
512.5332 742.6377 509.126 740.541 Y
509.2212 738.9707 L
510.2793 739.0776 511.4097 739.4102 511.793 740.3042 C
513.8901 738.7319 515.0693 741.2217 V
516.249 739.3867 517.9526 741.2217 V
517.8213 738.8628 515.0693 739.6489 V
514.021 737.7271 512.1865 739.0371 V
511.0298 737.9219 509.3135 737.4526 V
509.3882 736.2163 L
518.0376 738.5752 519.7412 738.1821 V
521.1826 744.0791 L
514.3682 742.6377 513.4507 742.6377 v
f
460.2109 750.5762 m
461.1626 746.438 465.7056 745.9141 v
464.7441 744.1665 465.5303 741.9824 v
466.3164 739.7979 472.6069 730.1006 y
460.6382 739.8857 456.9688 746.1758 v
442.9897 736.041 430.2349 696.0278 V
429.0117 682.9229 429.8857 674.8853 y
421.4985 691.4844 415.7324 694.1055 v
433.3799 706.5122 431.2832 735.6919 V
433.9038 734.1196 435.6519 728.1782 y
436.3501 740.2349 429.186 746.8745 v
429.5361 744.4282 l
416.4316 747.5732 414.6836 754.9121 v
410.3159 752.9902 408.9175 753.8638 v
407.5195 754.7378 408.2183 756.4849 y
405.4233 762.6006 407.8691 765.7456 v
410.3154 768.8911 418.877 774.1328 420.2749 774.1328 c
421.6729 774.1328 429.0112 770.6382 430.7588 766.9688 c
432.5063 763.2993 428.313 756.6592 421.4985 757.0088 c
427.9634 754.0391 432.6812 761.5522 v
438.6216 756.3101 439.4956 755.7861 v
440.3696 755.2617 447.3579 755.6108 449.6299 753.8638 c
451.9019 752.1167 454.6973 750.3696 y
460.2109 750.5762 l
f
438.6426 776.96 m
438.1899 776.8057 437.7603 776.7178 437.3989 776.7539 c
435.6519 776.9282 434.7778 778.6763 434.6035 779.8989 c
434.5645 780.1709 434.6396 780.4785 434.7642 780.791 C
432.5039 782.73 429.8198 784.5566 426.7402 785.8398 C
419.751 777.2783 L
429.186 774.6567 433.2051 766.4443 V
441.0684 766.2705 443.165 770.813 V
441.5918 773.6304 438.6426 776.96 V
f
440.8936 804.624 m
441.8545 808.5552 444.2134 809.0796 v
446.5723 809.6035 448.3193 808.73 448.5815 807.4194 c
448.8438 806.1089 447.7954 795.3628 446.7466 794.5767 c
445.6982 793.79 442.1167 794.4019 441.3301 796.2368 c
440.5439 798.0713 440.8936 804.624 y
f
450.2417 800.8667 m
453.8232 805.1484 456.1821 804.9736 v
458.541 804.7983 460.2007 803.6631 459.8516 800.9546 c
459.5024 798.2461 456.4443 793.3535 454.9595 792.5674 c
453.4741 791.7808 450.1543 792.3052 449.7173 793.3535 c
449.2808 794.4019 448.4946 797.6343 450.2417 800.8667 c
f
456.0952 788.9854 m
461.7744 792.7422 462.9097 792.6548 v
464.0454 792.5674 465.7056 789.9463 465.7056 788.1113 c
465.7056 786.2769 463.2588 784.8789 462.2104 784.4424 c
461.1621 784.0054 456.1826 783.3066 455.3091 784.5298 c
454.4351 785.7529 454.8726 788.1123 456.0952 788.9854 c
f
447.7954 782.52 m
446.5723 779.7241 447.0967 778.8506 v
447.6206 777.9775 452.4258 775.0938 454.2607 775.1812 c
456.0952 775.2686 457.4932 777.3662 456.6196 779.0259 c
455.7456 780.6855 453.2124 781.3848 y
449.1055 783.9175 447.7954 782.52 v
f
445.4365 780.5107 m
445.4365 781.1226 445.7861 783.6558 447.6206 784.1802 c
449.4551 784.7041 453.7363 783.1318 Y
453.0371 785.0537 452.9502 786.6265 v
452.8633 788.1992 454.2607 790.1211 Y
451.7266 790.0337 450.1543 790.9072 v
448.5815 791.7803 447.9702 793.1792 Y
447.271 792.5674 445.4365 792.6548 v
443.6016 792.7422 440.3696 793.8779 439.7578 794.7515 c
439.5313 795.0747 439.437 795.9966 439.4077 797.0293 C
437.9849 795.0596 437.1367 792.6479 437.1367 790.0332 c
437.1367 784.5391 440.8433 779.9209 445.8892 778.5142 C
445.6333 779.3853 445.4365 780.2339 445.4365 780.5107 c
f
456.5317 791.7808 m
460.4634 797.2847 460.4634 797.7217 v
460.4634 798.1587 462.6479 799.207 462.9097 798.9453 c
463.1719 798.6831 464.7441 796.6738 464.5693 796.3242 c
464.395 795.9746 462.3853 794.8389 461.9482 794.6641 c
461.5117 794.4893 456.5317 791.7808 y
f
436.9619 796.062 m
435.9136 793.2661 l
431.7202 794.3149 431.7202 794.7515 v
431.7202 795.1885 432.6807 797.3721 433.1177 797.4595 c
433.5547 797.5469 436.9619 796.062 y
f
438.7969 805.4102 m
436.5249 804.0996 436.6123 803.5752 v
436.7002 803.0513 439.2334 800.4302 y
439.8452 805.3223 l
439.4087 805.8467 438.7969 805.4102 v
f
436.001 788.1113 m
432.5063 786.8887 l
431.9824 786.8887 431.9824 786.0146 v
431.9824 785.1411 432.1572 784.2676 433.0308 784.1802 c
433.9038 784.0928 436.5249 785.4033 y
436.001 788.1113 l
f
437.7485 782.8696 m
436.438 781.1226 l
435.8262 780.3359 436.3506 779.5498 v
436.8745 778.7637 438.0107 778.2393 438.5347 778.4141 c
439.0591 778.5884 440.1074 779.7246 y
437.8359 781.9087 437.7485 782.8696 v
f
442.0293 778.4141 m
445.6982 777.1035 445.9604 777.1035 v
446.2227 777.1035 446.7466 776.5801 446.3101 776.1426 c
445.8735 775.7056 443.165 775.4434 442.9028 775.9678 c
442.6406 776.4917 442.0293 778.4141 y
f
458.4541 782.4331 m
462.2104 781.1226 462.8223 781.2969 v
463.4341 781.4717 463.958 783.394 y
459.5903 782.6079 458.4541 782.4331 v
f
456.4443 743.9917 m
471.21 725.0332 482.8291 721.7134 v
480.0332 723.9844 l
495.6719 723.8096 496.4585 724.771 v
497.2446 725.7324 496.8076 720.1406 y
498.3799 724.5962 l
501.3506 723.8975 l
520.4844 708.4336 522.144 704.7646 v
525.9004 705.4639 526.7744 704.5024 v
527.6479 703.541 527.9102 702.668 y
531.0547 698.4741 531.0547 698.2119 v
531.0547 697.9502 521.3574 691.3975 520.6582 690.6113 c
519.9595 689.8247 518.5615 693.3193 518.0376 694.1929 c
517.5132 695.0669 517.251 695.9404 y
516.8145 695.0669 l
504.2334 702.7554 502.748 703.5415 v
501.2632 704.3276 494.2739 707.9971 y
495.5845 711.4043 496.021 711.9287 v
496.458 712.4531 498.9048 711.6665 500.04 712.6274 c
497.5942 712.54 497.4194 713.6758 v
498.9912 715.6851 498.2925 717.5195 v
496.1963 713.8511 495.5845 713.501 v
494.9727 713.1514 481.1689 695.6782 479.2471 687.6406 c
462.5601 689.8252 455.396 681.7876 v
462.9097 686.8545 478.5483 686.5923 V
480.2954 685.5439 480.4702 683.6216 479.8589 682.9229 c
479.2471 682.2241 476.0142 681.2632 y
478.0239 680.7383 478.8101 680.8262 v
479.5967 680.9136 480.6445 678.2925 480.4697 676.9819 c
478.5483 677.769 475.4028 677.3315 v
472.2578 676.8945 440.3691 667.8081 438.0977 666.6729 c
435.8262 665.5371 432.6812 663.7026 y
430.584 689.0391 431.7197 694.8921 v
432.8555 700.7456 442.8154 729.1392 456.4443 743.9917 c
f
520.833 688.7764 m
531.7539 696.7271 l
533.5884 697.3384 534.2002 697.1636 v
534.8115 696.9893 543.9844 687.5537 544.4219 686.7671 c
544.8589 685.981 543.8105 684.6704 543.5483 684.583 c
543.2861 684.4956 531.3169 678.6421 y
529.6567 679.7783 529.2202 680.2148 v
528.7832 680.6514 523.2793 685.5439 522.7554 685.8057 c
522.231 686.0679 520.4834 687.1162 520.833 688.7764 c
f
542.7622 682.3984 m
547.5674 679.3403 548.0039 678.4673 v
548.4409 677.5938 552.2847 666.0615 552.6343 664.2271 c
552.9839 662.3921 552.0225 658.2856 y
546.4316 647.8018 546.4316 647.5396 v
546.4316 647.2773 543.8105 641.5117 542.4126 640.5508 c
541.0146 639.5889 539.4424 640.0273 539.355 640.7256 c
539.2676 641.4238 539.7915 644.1328 540.0537 644.3945 c
540.3159 644.6563 541.8008 648.6758 541.626 652.6069 c
541.4517 656.5386 539.2681 663.0039 538.8306 663.4404 c
538.3936 663.877 535.5103 664.7505 534.8115 665.6245 c
534.1128 666.498 533.1514 667.2847 y
528.8711 665.8867 527.4731 666.0615 v
526.0747 666.2363 525.376 666.6729 y
525.813 665.3623 l
522.7559 663.6152 521.27 663.6152 v
519.7847 663.6152 516.9019 665.8867 517.0767 667.459 c
517.251 669.0317 518.125 669.4683 519.0859 669.5557 c
520.0469 669.6436 522.7554 670.0801 y
527.123 674.7109 528.958 675.4097 v
530.7925 676.1084 534.2876 675.9336 y
532.1909 677.3315 l
540.3164 681.3501 542.7622 682.3984 v
f
553.5952 655.3154 m
553.9448 642.7344 553.4209 640.5508 v
552.8965 638.3672 551.2363 638.2783 550.4502 638.7158 c
549.6636 639.1533 549.751 649.8984 549.6636 650.1606 c
549.5767 650.4229 553.5952 655.3154 y
f
539.7915 655.6646 m
539.7915 651.9951 539.5293 651.5586 v
539.2676 651.1221 536.5586 650.5977 535.5981 650.7725 c
534.6372 650.9468 532.7148 653.5684 533.2393 654.7915 c
533.7632 656.0142 534.3745 656.4512 534.9863 655.9268 c
535.5981 655.4023 535.8599 655.1411 536.1221 655.0532 c
536.3843 654.9658 538.6558 654.0044 539.7915 655.6646 c
f
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
417.8286 690.2617 m
427.002 678.293 428.3999 673.6621 V
429.2739 670.9541 429.623 667.1099 y
425.5171 668.2451 l
426.7397 669.6436 l
418.2656 666.6729 417.1299 665.9741 v
415.9937 665.2754 403.2383 660.3823 402.3647 659.5962 c
401.4912 658.8096 400.1807 658.6348 398.084 658.2856 c
395.9873 657.9365 388.9106 654.2671 387.7749 651.2964 c
392.0928 654.2036 395.8999 655.5776 v
388.6479 646.5801 387.1631 643.3467 v
385.6782 640.1133 385.5034 635.833 384.8916 635.5703 c
384.2798 635.3086 361.6523 630.2422 353.9644 639.9395 C
354.4009 645.0938 362.7012 664.2271 376.0679 670.5171 c
377.2915 673.4878 378.9512 674.1865 v
380.6104 674.8853 382.5327 675.0601 y
401.3169 685.1948 406.9956 684.9326 v
404.2871 685.7188 l
417.8286 690.2617 l
f
478.0161 674.1685 m
477.5869 674.8853 471.646 674.3613 v
465.7056 673.8369 444.3003 666.6729 443.7764 665.1875 c
443.252 663.7026 456.1816 658.1104 456.6191 658.0234 c
457.0562 657.9365 465.6177 651.3838 466.1421 650.9468 c
466.666 650.5103 470.248 647.7148 472.1704 647.627 c
474.0928 647.5396 478.8101 652.2573 480.2954 651.2964 c
481.7803 650.3354 479.3345 646.7529 475.1411 646.7529 c
477.7617 644.7441 480.2954 645.8799 v
475.752 643.2588 472.3447 645.4424 v
468.8506 631.1162 464.0454 627.8828 V
462.3853 626.2227 462.5601 624.7373 y
464.9189 619.9316 476.1895 619.583 v
487.4595 619.2334 492.6138 620.1943 493.4004 621.6797 c
494.1865 623.165 497.0693 634.2607 496.458 636.5322 c
492.7017 625.873 492.0898 625.6113 v
491.478 625.3486 494.7983 637.8428 495.4971 639.7646 c
496.1958 641.6855 496.5454 647.1904 496.8076 647.627 c
497.0693 648.064 500.04 649.6367 500.04 650.8599 c
500.04 652.083 498.3794 654.6162 497.7686 654.7036 c
497.1572 654.7915 495.7593 655.8398 y
496.3711 653.4805 496.1089 653.0435 v
495.8467 652.6069 484.0444 668.8394 478.0161 674.1685 c
f
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
529.9009 750.8438 m
528.5947 748.3252 527.9419 747.7656 v
529.3413 747.6719 529.8076 747.5786 v
530.2739 747.4854 530.9268 749.5376 529.9009 750.8438 c
f
524.6768 758.3066 m
526.0767 756.7202 527.0093 756.5342 v
526.2627 757.9331 527.1025 758.9595 v
524.6768 758.3066 l
f
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
499.77 776.124 m
503.4077 777.897 504.9937 777.0576 v
506.5791 776.2178 512.3628 770.7144 513.8555 770.5273 c
515.3481 770.3408 516.0947 770.9009 y
515.6279 768.9409 515.0684 768.7549 v
516.748 768.2881 517.5874 768.8477 v
516.6543 767.0757 514.229 767.542 v
513.0161 766.5156 510.4976 767.915 v
507.979 769.3149 504.9937 773.6992 503.6875 773.7925 c
502.3818 773.8857 500.7026 773.2324 y
501.1689 774.4458 502.3818 775.0054 v
499.3032 775.0986 498.7437 774.1655 v
499.3975 775.8442 499.77 776.124 v
f
495.5718 769.0347 m
496.9712 769.874 498.7437 770.0605 v
500.5156 770.2476 504.2471 770.5269 504.9937 770.0605 c
505.7397 769.5942 511.1504 764.9297 511.3369 764.2773 c
511.5239 763.6245 512.1758 761.7583 512.6431 761.3853 c
513.1099 761.0122 514.4155 760.7319 y
512.8291 759.7065 511.8032 759.9863 v
510.7773 760.2656 509.8442 761.1055 y
502.1948 762.8779 497.7173 762.5049 v
492.7729 765.1172 491.187 760.0796 v
490.9077 766.5161 498.1841 764.1841 v
500.1426 767.8223 500.8892 768.2886 v
501.6353 768.7549 495.5718 769.0347 y
f
u
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
510.0313 762.4111 m
509.4717 763.624 L
509.4087 763.6914 509.2964 763.8076 V
509.0234 763.4277 508.6597 763.123 508.2383 762.9121 C
508.9434 762.7598 509.5674 762.5933 510.0313 762.4111 C
f
504.0605 765.4897 m
504.0605 766.2915 504.3872 767.0161 504.9141 767.54 C
504.436 767.8257 503.9834 768.0308 503.5942 768.1016 C
500.8896 767.355 499.8633 763.9971 V
502.3008 763.8159 504.8853 763.4717 V
504.3765 763.9932 504.0605 764.7041 504.0605 765.4897 c
f
U
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
475.1426 748.0454 m
475.2354 741.2354 478.5005 737.9707 v
477.2881 737.5972 476.8213 737.5972 v
476.355 737.5972 470.8516 742.6353 475.1426 748.0454 c
f
471.2241 757.9336 m
471.4111 759.6133 470.3848 760.0796 v
469.3584 760.5459 464.1343 759.2393 463.9482 754.7617 c
463.7617 750.2842 468.1455 750.6572 y
468.519 752.2432 467.3062 752.2432 v
466.0933 752.2432 465.1602 754.0156 465.3472 755.3218 c
465.5337 756.6274 466.4668 757.0938 y
467.2129 754.8555 468.0527 754.4824 v
467.1196 757.1875 467.9595 757.7471 v
468.7988 758.3066 470.1982 758.8662 471.2241 757.9336 c
f
448.1826 698.5107 m
448.5557 696.5513 448.9292 696.2715 v
449.3022 695.9912 462.5483 688.0625 472.064 690.8608 C
472.437 691.7007 471.9702 692.167 470.9443 692.167 c
469.9185 692.167 461.6162 692.3535 457.418 693.7529 c
453.2197 695.1519 448.1826 698.5107 y
f
1 Ap
457.6045 735.6377 m
457.6045 734.3501 456.5601 733.3062 455.272 733.3062 c
453.9849 733.3062 452.9404 734.3501 452.9404 735.6377 c
452.9404 736.9258 453.9849 737.9702 455.272 737.9702 c
456.5601 737.9702 457.6045 736.9258 457.6045 735.6377 c
f
448.0889 718.8457 m
448.0889 717.5581 447.0449 716.5137 445.7568 716.5137 c
444.4692 716.5137 443.4248 717.5581 443.4248 718.8457 c
443.4248 720.1338 444.4692 721.1777 445.7568 721.1777 c
447.0449 721.1777 448.0889 720.1338 448.0889 718.8457 c
f
440.2783 698.979 m
440.2783 697.6914 439.2339 696.647 437.9463 696.647 c
436.6587 696.647 435.6143 697.6914 435.6143 698.979 c
435.6143 700.2666 436.6587 701.311 437.9463 701.311 c
439.2339 701.311 440.2783 700.2666 440.2783 698.979 c
f
438.6865 676.8037 m
438.6865 675.5166 437.6421 674.4722 436.354 674.4722 c
435.0664 674.4722 434.0225 675.5166 434.0225 676.8037 c
434.0225 678.0918 435.0664 679.1362 436.354 679.1362 c
437.6421 679.1362 438.6865 678.0918 438.6865 676.8037 c
f
U
*u
0 Ap
1 D
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
730.0137 754.4824 m
732.833 756.0308 L
732.0898 759.2856 L
728.8848 759.458 L
728.4658 760.585 727.9463 761.6572 727.3379 762.6675 C
729.2021 765.2822 L
727.1211 767.8911 L
724.1582 766.6563 L
723.2998 767.4795 722.3652 768.2222 721.3711 768.876 C
721.917 772.041 L
718.9102 773.4893 L
716.7754 771.0908 L
715.6553 771.4595 714.4932 771.729 713.3018 771.8867 C
712.4199 774.9702 L
709.0801 774.9702 L
708.1973 771.8784 L
706.9971 771.7188 705.834 771.457 704.7217 771.0942 C
702.5898 773.4888 L
699.584 772.0396 L
700.1299 768.876 L
699.1309 768.2192 698.1992 767.4756 697.3447 766.6538 C
694.3799 767.8896 L
692.2998 765.2803 L
694.165 762.6641 L
693.5547 761.6479 693.0371 760.5752 692.6191 759.4565 C
689.4111 759.2827 L
688.6699 756.0293 L
691.4805 754.4844 L
691.374 753.3193 691.377 752.1284 691.4893 750.9219 C
688.6709 749.373 L
689.4141 746.1196 L
692.6182 745.9473 L
693.0371 744.8193 693.5566 743.7476 694.165 742.7363 C
692.3018 740.1221 L
694.3828 737.5122 L
697.3447 738.7485 L
698.2041 737.9238 699.1377 737.1821 700.1318 736.5288 C
699.5869 733.3638 L
702.5938 731.916 L
704.7275 734.3149 L
705.8486 733.9458 707.0107 733.6763 708.2031 733.5186 C
709.084 730.4351 L
712.4209 730.4351 L
713.3047 733.5273 L
714.5039 733.687 715.666 733.9482 716.7793 734.3115 C
718.9111 731.9165 L
721.917 733.3657 L
721.3721 736.5288 L
722.3701 737.1855 723.3008 737.9292 724.1563 738.751 C
727.1211 737.5151 L
729.2021 740.1245 L
727.3359 742.7412 L
727.9473 743.7559 728.4639 744.8296 728.8828 745.9492 C
732.0898 746.1211 L
732.832 749.3755 L
730.0215 750.9204 L
730.1279 752.0854 730.125 753.2773 730.0137 754.4824 C
f
0 D
710.751 748.5229 m
708.4434 748.5229 706.5723 750.394 706.5723 752.7026 c
706.5723 755.0117 708.4434 756.8823 710.751 756.8823 c
713.0596 756.8823 714.9307 755.0117 714.9307 752.7026 c
714.9307 750.394 713.0596 748.5229 710.751 748.5229 c
f
*U
*u
1 D
674.5801 703.2524 m
676.083 704.0776 L
675.6865 705.8125 L
673.9785 705.9043 L
673.7549 706.5049 673.4785 707.0767 673.1543 707.6152 C
674.1475 709.0088 L
673.0391 710.3994 L
671.459 709.7412 L
671.002 710.1797 670.5039 710.5757 669.9736 710.9243 C
670.2646 712.6113 L
668.6621 713.3828 L
667.5244 712.1045 L
666.9277 712.3013 666.3076 712.4448 665.6729 712.5288 C
665.2031 714.1724 L
663.4229 714.1724 L
662.9521 712.5244 L
662.3125 712.4395 661.6924 712.2998 661.0996 712.1064 C
659.9629 713.3828 L
658.3613 712.6104 L
658.6523 710.9243 L
658.1191 710.5742 657.623 710.1777 657.168 709.7397 C
655.5879 710.3984 L
654.4785 709.0078 L
655.4727 707.6133 L
655.1475 707.0718 654.8721 706.5 654.6484 705.9033 C
652.9395 705.811 L
652.5439 704.0771 L
654.042 703.2534 L
653.9854 702.6323 653.9863 701.9976 654.0469 701.3545 C
652.5449 700.5293 L
652.9404 698.7949 L
654.6484 698.7031 L
654.8721 698.1021 655.1484 697.5308 655.4727 696.9917 C
654.4795 695.5981 L
655.5889 694.207 L
657.168 694.8662 L
657.626 694.4268 658.123 694.0313 658.6533 693.6831 C
658.3623 691.9961 L
659.9658 691.2246 L
661.1025 692.5029 L
661.7002 692.3062 662.3193 692.1626 662.9551 692.0786 C
663.4248 690.4351 L
665.2031 690.4351 L
665.6738 692.083 L
666.3135 692.1685 666.9326 692.3076 667.5264 692.501 C
668.6621 691.2246 L
670.2646 691.9971 L
669.9746 693.6831 L
670.5059 694.0332 671.002 694.4297 671.458 694.8672 C
673.0391 694.209 L
674.1475 695.5996 L
673.1533 696.9941 L
673.4785 697.5352 673.7539 698.1074 673.9775 698.7041 C
675.6865 698.7959 L
676.082 700.5303 L
674.584 701.354 L
674.6416 701.9746 674.6396 702.6099 674.5801 703.2524 C
f
0 D
664.3135 700.0762 m
663.083 700.0762 662.0859 701.0732 662.0859 702.3037 c
662.0859 703.5347 663.083 704.5313 664.3135 704.5313 c
665.5439 704.5313 666.541 703.5347 666.541 702.3037 c
666.541 701.0732 665.5439 700.0762 664.3135 700.0762 c
f
*U
u
625.9336 677.7612 m
626.0313 678.0918 626.3521 678.2759 626.6294 678.2251 c
631.1904 676.9883 l
631.4727 676.9043 631.6582 676.583 631.5771 676.293 c
630.3403 671.5767 l
630.2393 671.2842 629.9175 671.0981 629.5674 671.1904 c
625.0835 672.3496 l
624.7969 672.4722 624.6108 672.792 624.6968 673.123 c
625.9336 677.7612 l
F
628.0986 674.6694 m
F
624.6968 688.3511 m
624.605 688.644 624.7905 688.9658 625.0835 689.0474 c
629.5674 690.2837 l
629.9116 690.3379 630.2334 690.1514 630.3403 689.8203 c
631.5771 685.1826 l
631.6538 684.8521 631.4663 684.5322 631.1904 684.4863 c
626.6294 683.25 l
626.3472 683.1597 626.0259 683.3457 625.9336 683.6362 c
624.6968 688.3511 l
F
628.0986 686.7285 m
F
622.3013 701.0283 m
622.0928 701.2607 621.7217 701.2607 621.5283 701.0283 c
618.2041 697.7041 l
617.9746 697.5117 617.9731 697.1416 618.2041 696.9312 c
621.605 693.4526 l
621.8511 693.2627 622.2246 693.2627 622.4551 693.4526 c
625.7798 696.7764 l
625.9717 697.0103 625.9717 697.3818 625.7798 697.627 c
622.3013 701.0283 l
F
621.9922 697.2402 m
F
611.5566 658.1279 m
624.0088 661.4453 631.4092 674.2627 628.0986 686.7285 c
624.7271 699.2017 611.9102 706.6006 599.4214 703.2695 c
586.9712 699.918 579.5713 687.1025 582.8799 674.6694 c
586.2544 662.1621 599.0703 654.7617 611.5566 658.1279 c
F
605.5278 680.6992 m
F
603.1313 701.2598 m
603.4771 701.3169 603.6616 701.6382 603.5947 701.9556 c
602.3584 706.439 l
602.2891 706.7588 601.9697 706.9438 601.6631 706.8252 c
595.8657 705.2793 l
595.5396 705.2207 595.3545 704.9004 595.4019 704.583 c
596.6387 700.1006 l
596.7266 699.7793 597.0469 699.5942 597.3345 699.7139 c
603.1313 701.2598 l
F
599.4985 703.2695 m
F
613.1025 661.5283 m
613.436 661.6265 613.7563 661.4424 613.8755 661.1421 c
615.0352 656.6592 l
615.1284 656.3223 614.9443 656.001 614.6484 655.8862 c
609.9336 654.6494 l
609.6436 654.5806 609.3223 654.7661 609.2378 655.1133 c
608.0015 659.5957 l
607.9512 659.8853 608.1372 660.207 608.4648 660.292 c
613.1025 661.5283 l
F
611.5566 658.1279 m
F
621.6821 668.0215 m
621.916 668.2417 622.2856 668.2417 622.5337 668.0215 c
625.7798 664.6987 l
626.0347 664.4937 626.0347 664.1221 625.7798 663.9258 c
622.3779 660.4468 l
622.1577 660.2432 621.7847 660.2432 621.5283 660.4468 c
618.2822 663.77 l
618.0381 663.9922 618.0381 664.3618 618.2822 664.6206 c
621.6821 668.0215 l
F
622.0688 664.2334 m
F
588.7549 700.9507 m
588.959 701.2065 589.3301 701.208 589.5278 700.9507 c
592.8511 697.7041 l
593.0781 697.4585 593.0771 697.0884 592.8511 696.854 c
589.4497 693.4526 l
589.1997 693.2085 588.8286 693.2085 588.5996 693.4526 c
585.2764 696.6992 l
585.0806 696.958 585.0806 697.3281 585.2764 697.5498 c
588.7549 700.9507 l
F
589.064 697.2402 m
F
580.8701 689.897 m
580.9209 690.1987 581.2417 690.3828 581.5654 690.2837 c
586.0493 689.124 l
586.3623 689.0117 586.5474 688.6909 586.4355 688.3511 c
585.1992 683.7139 l
585.1284 683.3911 584.8076 683.2061 584.5034 683.3267 c
580.0195 684.4863 l
579.6865 684.5781 579.5015 684.8984 579.5557 685.1826 c
580.8701 689.897 l
F
583.0342 686.8052 m
F
579.479 676.2153 m
579.3882 676.5273 579.5742 676.8491 579.8652 676.9111 c
584.3481 678.1475 l
584.6948 678.2217 585.0166 678.0356 585.1211 677.7612 c
586.3579 673.0459 l
586.4365 672.7363 586.2505 672.415 585.9722 672.3496 c
581.4111 671.1138 l
581.1299 671.0439 580.8086 671.23 580.7153 671.5767 c
579.479 676.2153 l
F
582.8799 674.6694 m
F
609.9336 706.5938 m
609.6035 706.687 609.2813 706.5024 609.1606 706.207 c
608.0015 701.7236 l
607.9092 701.3813 608.0947 701.0605 608.3882 700.9507 c
613.1025 699.7139 l
613.394 699.6401 613.7153 699.8257 613.7983 700.1006 c
615.0352 704.6611 l
615.0864 704.9463 614.9004 705.2671 614.5713 705.3564 c
609.9336 706.5938 l
F
611.4795 703.1924 m
F
589.3726 668.0215 m
589.1445 668.2378 588.7744 668.2378 588.5225 668.0215 c
585.2764 664.6987 l
585.0254 664.4873 585.0264 664.1187 585.2764 663.9258 c
588.6768 660.4468 l
588.9053 660.2388 589.2754 660.2388 589.5278 660.4468 c
592.7734 663.77 l
593.0239 663.9878 593.0239 664.3589 592.7734 664.6206 c
589.3726 668.0215 l
F
589.064 664.2334 m
F
597.9526 661.5283 m
597.626 661.6113 597.3057 661.4258 597.2568 661.1421 c
596.0205 656.5825 l
595.9326 656.3047 596.1187 655.9844 596.4067 655.8862 c
601.1221 654.6494 l
601.418 654.5635 601.7388 654.7495 601.8174 655.0366 c
603.0542 659.5186 l
603.1113 659.8706 602.9258 660.1919 602.5908 660.292 c
597.9526 661.5283 l
F
599.4985 658.0498 m
F
1 g
610.3203 662.7666 m
620.2148 665.3872 626.0981 675.5781 623.4604 685.4917 c
620.7837 695.4063 610.5947 701.29 600.6582 698.6318 c
590.7661 695.9775 584.8828 685.7861 587.5181 675.9067 c
590.1953 665.9575 600.3867 660.0742 610.3203 662.7666 c
F
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
605.5278 680.6992 m
F
U
/BBAccumRotation (0.000000) XT
u
689.752 791.7168 m
689.7842 791.8242 689.8877 791.8838 689.9775 791.8672 c
691.4551 791.4668 l
691.5469 791.4395 691.6064 791.335 691.5801 791.2412 c
691.1797 789.7139 l
691.1465 789.6191 691.043 789.5586 690.9297 789.5879 c
689.4766 789.9639 l
689.3838 790.0029 689.3242 790.1074 689.3516 790.2148 c
689.752 791.7168 l
F
690.4531 790.7148 m
F
689.3516 795.1475 m
689.3223 795.2422 689.3818 795.3467 689.4766 795.373 c
690.9297 795.7734 l
691.041 795.791 691.1445 795.7305 691.1797 795.623 c
691.5801 794.1211 l
691.6055 794.0137 691.5449 793.9102 691.4551 793.8955 c
689.9775 793.4951 l
689.8867 793.4658 689.7822 793.5254 689.752 793.6201 c
689.3516 795.1475 l
F
690.4531 794.6221 m
F
688.5752 799.2539 m
688.5078 799.3291 688.3877 799.3291 688.3252 799.2539 c
687.248 798.1768 l
687.1738 798.1152 687.1738 797.9951 687.248 797.9268 c
688.3496 796.7998 l
688.4297 796.7383 688.5508 796.7383 688.625 796.7998 c
689.7021 797.877 l
689.7646 797.9521 689.7646 798.0723 689.7021 798.1523 c
688.5752 799.2539 l
F
688.4756 798.0273 m
F
685.0947 785.3564 m
689.1289 786.4316 691.5254 790.584 690.4531 794.6221 c
689.3613 798.6621 685.209 801.0596 681.1641 799.9805 c
677.1309 798.8945 674.7334 794.7432 675.8047 790.7148 c
676.8984 786.6641 681.0498 784.2666 685.0947 785.3564 c
F
683.1416 792.6689 m
F
682.3652 799.3291 m
682.4775 799.3477 682.5371 799.4512 682.5156 799.5547 c
682.1152 801.0068 l
682.0928 801.1104 681.9893 801.1709 681.8896 801.1318 c
680.0117 800.6309 l
679.9063 800.6123 679.8457 800.5088 679.8613 800.4053 c
680.2617 798.9531 l
680.291 798.8496 680.3945 798.79 680.4873 798.8281 c
682.3652 799.3291 l
F
681.1885 799.9805 m
F
685.5957 786.458 m
685.7031 786.4902 685.8066 786.4307 685.8457 786.333 c
686.2217 784.8809 l
686.252 784.7715 686.1924 784.668 686.0957 784.6309 c
684.5684 784.2305 l
684.4746 784.208 684.3711 784.2676 684.3438 784.3799 c
683.9434 785.832 l
683.9268 785.9258 683.9863 786.0303 684.0938 786.0576 c
685.5957 786.458 l
F
685.0947 785.3564 m
F
688.375 788.5615 m
688.4512 788.6328 688.5703 788.6328 688.6504 788.5615 c
689.7021 787.4854 l
689.7852 787.4189 689.7852 787.2988 689.7021 787.2354 c
688.5996 786.1074 l
688.5293 786.042 688.4082 786.042 688.3252 786.1074 c
687.2734 787.1846 l
687.1943 787.2568 687.1943 787.376 687.2734 787.46 c
688.375 788.5615 l
F
688.5 787.335 m
F
677.709 799.2285 m
677.7744 799.3115 677.8945 799.3125 677.959 799.2285 c
679.0352 798.1768 l
679.1094 798.0977 679.1084 797.9775 679.0352 797.9023 c
677.9336 796.7998 l
677.8525 796.7207 677.7324 796.7207 677.6582 796.7998 c
676.582 797.8516 l
676.5176 797.9355 676.5176 798.0557 676.582 798.127 c
677.709 799.2285 l
F
677.8086 798.0273 m
F
675.1543 795.6484 m
675.1699 795.7461 675.2744 795.8057 675.3789 795.7734 c
676.832 795.3975 l
676.9336 795.3613 676.9932 795.2568 676.957 795.1475 c
676.5566 793.6455 l
676.5332 793.541 676.4297 793.4805 676.3311 793.5195 c
674.8789 793.8955 l
674.7705 793.9248 674.7109 794.0293 674.7285 794.1211 c
675.1543 795.6484 l
F
675.8555 794.6465 m
F
674.7031 791.2158 m
674.6738 791.3174 674.7344 791.4209 674.8281 791.4414 c
676.2813 791.8418 l
676.3926 791.8662 676.498 791.8057 676.5313 791.7168 c
676.9316 790.1895 l
676.957 790.0889 676.8965 789.9854 676.8066 789.9639 c
675.3301 789.5635 l
675.2383 789.541 675.1348 789.6006 675.1035 789.7139 c
674.7031 791.2158 l
F
675.8047 790.7148 m
F
684.5684 801.0566 m
684.4619 801.0869 684.3574 801.0273 684.3184 800.9316 c
683.9434 799.4795 l
683.9131 799.3682 683.9736 799.2646 684.0684 799.2285 c
685.5957 798.8281 l
685.6904 798.8047 685.7939 798.8643 685.8213 798.9531 c
686.2217 800.4307 l
686.2383 800.5234 686.1777 800.627 686.0713 800.6563 c
684.5684 801.0566 l
F
685.0703 799.9551 m
F
677.9082 788.5615 m
677.834 788.6318 677.7148 788.6318 677.6328 788.5615 c
676.582 787.4854 l
676.5 787.417 676.5 787.2969 676.582 787.2354 c
677.6836 786.1074 l
677.7568 786.041 677.877 786.041 677.959 786.1074 c
679.0098 787.1846 l
679.0918 787.2549 679.0918 787.375 679.0098 787.46 c
677.9082 788.5615 l
F
677.8086 787.335 m
F
680.6875 786.458 m
680.582 786.4854 680.4785 786.4248 680.4629 786.333 c
680.0625 784.8564 l
680.0332 784.7666 680.0938 784.6621 680.1875 784.6309 c
681.7148 784.2305 l
681.8105 784.2021 681.9141 784.2617 681.9395 784.3555 c
682.3408 785.8076 l
682.3594 785.9209 682.2988 786.0254 682.1904 786.0576 c
680.6875 786.458 l
F
681.1885 785.3311 m
F
1 g
684.6943 786.8594 m
687.8994 787.709 689.8057 791.0098 688.9512 794.2207 c
688.084 797.4326 684.7832 799.3389 681.5645 798.4775 c
678.3594 797.6182 676.4541 794.3164 677.3076 791.1162 c
678.1748 787.8936 681.4766 785.9873 684.6943 786.8594 c
F
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
683.1416 792.6689 m
F
U
/BBAccumRotation (0.000000) XT
u
0 R
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 XA
1 j 1.04839 w647.9878 765.6436 m
648.4766 766.5024 650.6855 770.6597 650.626 774.3965 C
656.7041 778.4233 L
654.8867 785.2939 L
650.6035 792.333 L
643.6255 791.6812 L
642.8003 792.8232 641.835 793.7803 640.8901 794.542 C
640.9917 796.0952 L
636.8428 803.2036 L
628.8145 804.3076 L
625.0435 798.3794 L
624.8198 798.3521 624.5928 798.3281 624.3623 798.2871 C
619.6401 797.623 615.8037 795.1235 V
609.1172 797.1421 L
603.4556 791.1201 L
606.0869 785.7241 L
604.3618 781.7256 603.7666 777.1118 V
600.4619 775.0264 L
600.5239 774.9219 L
597.6289 773.0469 L
599.6387 765.8892 L
603.8379 758.7646 L
610.8228 759.5254 L
611.8745 757.9116 612.8945 757.1914 613.29 756.9771 C
613.3472 755.0352 L
617.5381 747.9688 L
625.9365 747.3135 L
629.0879 752.9009 L
630.0815 752.9985 634.2891 753.5522 639.1777 756.6323 C
645.6787 754.292 L
646.4712 755.1733 649.458 759.0674 651.0703 760.1504 C
647.9878 765.6436 L
b
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
0 j 1 w646.3984 780.2852 m
649.8154 774.5161 l
649.9072 771.3999 648.2188 767.814 647.519 766.4736 c
643.6821 772.4346 l
645.6807 775.8452 646.2554 778.6675 646.3984 780.2852 c
F
654.1318 784.9697 m
655.1123 781.2275 l
652.4941 785.7778 l
651.4912 789.272 l
654.1318 784.9697 l
F
640.1582 795.8813 m
640.124 795.1553 l
638.5957 796.2554 637.2305 796.8994 636.6558 797.147 c
636.8022 801.5747 l
640.1582 795.8813 l
F
604.2891 759.6396 m
600.5576 766.0186 l
606.6382 766.7866 l
607.147 765.8486 609.0586 762.4185 610.3193 760.3389 c
604.2891 759.6396 l
F
614.0352 762.0352 m
613.9956 762.0332 609.8359 763.3604 607.1074 767.543 c
600.208 766.7827 l
598.5635 772.6899 l
604.5732 776.6831 l
604.584 776.7231 604.7017 781.061 607.2939 785.7793 c
604.3857 791.0166 l
605.312 791.8105 608.4141 794.5195 609.75 796.2622 c
615.6426 794.0596 l
616.1201 794.3506 620.9434 797.2661 625.4106 797.5815 c
629.2158 803.4414 l
636.0308 802.6152 l
635.9805 796.542 l
636.0176 796.5313 640.5713 794.6719 643.1821 790.9185 c
649.9629 791.5742 l
651.6494 785.7939 l
645.6309 781.7778 l
645.6299 781.7466 645.877 777.6646 642.8013 772.5171 c
645.9038 767.5293 l
640.6655 762.4136 l
634.7979 764.6055 l
634.7739 764.5767 631.3379 761.6641 624.625 760.791 c
620.9697 755.1377 l
614.0972 755.7842 l
614.0352 762.0352 l
F
625.3364 748.3555 m
621.6479 754.6924 l
624.7661 759.6416 l
628.3931 753.2939 l
625.3364 748.3555 l
F
629.0713 753.7285 m
625.4165 760.0825 l
630.7808 760.8926 633.8457 762.8511 634.8774 763.6187 c
638.5996 757.2129 l
634.0566 754.4063 630.0806 753.8271 629.0713 753.7285 c
F
645.0166 755.4087 m
641.2847 761.875 l
646.3628 766.8447 l
650.1357 760.5073 l
648.5127 759.2583 645.979 756.4717 645.0166 755.4087 c
F
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
639.2915 777.4673 m
640.1841 780.2656 639.9492 783.4287 638.6675 785.938 c
637.3691 788.4448 635.1392 790.2227 632.0322 791.21 c
628.5986 792.3213 624.2671 792 620.4346 790.3706 c
616.1094 788.5029 612.9912 785.2021 611.6704 781.0605 c
610.7236 778.1357 610.9336 774.9961 612.2539 772.4624 c
613.5322 769.9463 615.8193 768.1045 618.873 767.1387 c
622.8379 765.8525 627.1812 766.2573 631.0977 768.2588 c
635.022 770.2891 638.0879 773.731 639.2915 777.4673 c
F
1 g
619.1201 767.9092 m
617.1064 768.541 615.4614 769.5806 614.2314 770.9487 c
613.8911 772.4175 614.2358 774.8633 614.6436 776.1133 c
615.7754 779.6621 618.4072 782.6445 622.0454 784.5298 c
625.897 786.4971 630.3672 786.981 634.0122 785.8154 c
636.8594 784.8984 638.4995 783.2598 638.8291 782.9111 c
639.1523 781.1992 639.0532 779.3892 638.5215 777.7148 c
636.3145 770.8521 627.5449 765.1924 619.1201 767.9092 c
F
U
u
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
0 R
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 XA
1 j711.1396 653.5645 m
711.7715 653.4863 714.79 653.2031 716.998 654.1646 C
720.8975 651.5483 L
724.5322 654.3306 L
727.6553 658.6211 L
725.5391 662.6094 L
726.0137 663.3828 726.3438 664.1929 726.5635 664.9438 C
727.5107 665.2681 L
730.7109 669.4951 L
729.3779 674.5425 L
724.9189 675.3159 L
724.8457 675.4424 724.7764 675.5713 724.6953 675.6982 C
723.1299 678.3408 720.6943 680.0034 V
720.2383 684.4775 L
715.2549 686.3521 L
712.6982 683.4512 L
709.8945 683.4868 707.0029 682.6973 V
704.9453 684.1445 L
704.8984 684.083 L
703.0664 685.3398 L
699.3076 682.3716 L
696.1123 678.1099 L
698.2959 674.1455 L
697.5957 673.1201 697.4199 672.3359 697.3916 672.0474 C
696.251 671.5322 L
693.0869 667.29 L
694.7783 662.1343 L
698.8818 661.644 L
699.1865 661.0781 700.5566 658.7134 703.5996 656.5708 C
703.8193 652.126 L
704.5391 651.873 707.5947 651.061 708.6377 650.3711 C
711.1396 653.5645 L
b
0.017914 0.717891 1 0.00119 0.937255 0.415686 0 Xa
0 j700.584 672.8569 m
700.5723 672.8809 700.3311 675.6816 702.1416 678.3408 c
699.9805 682.2544 l
703.085 684.6953 l
706.9473 682.1113 l
706.9746 682.1147 709.583 683.1196 713.0303 682.7476 c
715.4238 685.7734 l
716.125 685.4204 718.5049 684.2471 719.8711 683.8838 c
720.0215 679.835 l
720.3125 679.623 723.2412 677.478 724.5352 674.8994 c
728.9619 674.0894 l
730.1592 669.833 l
726.5361 668.3574 l
726.5391 668.3335 726.5615 665.165 724.9766 662.6826 c
727.0449 658.8145 l
724.0273 656.3799 l
720.1484 658.9629 l
720.1299 658.9561 717.7637 657.7979 713.9414 658.3506 c
711.7441 655.271 l
707.4053 657.1172 l
707.2549 661.1504 l
707.2314 661.1567 704.6494 662.478 702.4668 666.2529 c
698.2002 667.0254 l
696.8818 671.271 l
700.584 672.8569 l
F
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 Xa
716.0156 661.6636 m
717.9004 661.8262 719.7217 662.75 720.8965 664.1338 c
722.0654 665.5264 722.5703 667.2925 722.3877 669.3848 c
722.1973 671.7012 720.9336 674.1978 719.0156 676.0718 c
716.833 678.1807 714.0977 679.2168 711.3096 678.9766 c
709.335 678.8145 707.5215 677.9116 706.3418 676.4995 c
705.1621 675.1162 704.6338 673.2998 704.8164 671.2456 c
705.0342 668.5698 706.3496 666.0869 708.5098 664.2549 c
710.6895 662.4243 713.4961 661.4536 716.0156 661.6636 c
F
1 g
0 R
0.201083 0.185092 0.121736 0.000031 0.792157 0.776471 0.807843 XA
705.335 671.2891 m
705.2109 672.6431 705.4229 673.8784 705.9307 674.9492 c
706.7207 675.5146 708.2607 675.9155 709.1035 675.9834 c
711.4941 676.1895 713.9199 675.3633 715.9424 673.668 c
718.0654 671.8652 719.4609 669.3271 719.6709 666.8706 c
719.832 664.9512 719.2637 663.5698 719.1377 663.2876 c
718.1992 662.6709 717.0986 662.2813 715.9717 662.1826 c
711.3447 661.7954 705.8076 665.6074 705.335 671.2891 c
B
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
